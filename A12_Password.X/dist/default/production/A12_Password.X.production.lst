

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Oct 27 12:31:14 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 22/03/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000E                     	;# 
   141     000F                     	;# 
   142     0010                     	;# 
   143     0011                     	;# 
   144     0012                     	;# 
   145     0013                     	;# 
   146     0014                     	;# 
   147     0015                     	;# 
   148     0015                     	;# 
   149     0016                     	;# 
   150     0017                     	;# 
   151     0018                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001B                     	;# 
   155     001B                     	;# 
   156     001C                     	;# 
   157     001D                     	;# 
   158     001E                     	;# 
   159     001F                     	;# 
   160     0081                     	;# 
   161     0085                     	;# 
   162     0086                     	;# 
   163     0087                     	;# 
   164     0088                     	;# 
   165     0089                     	;# 
   166     008C                     	;# 
   167     008D                     	;# 
   168     008E                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0094                     	;# 
   173     0098                     	;# 
   174     0099                     	;# 
   175     009C                     	;# 
   176     009D                     	;# 
   177     009E                     	;# 
   178     009F                     	;# 
   179     010C                     	;# 
   180     010D                     	;# 
   181     010E                     	;# 
   182     010F                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     0000                     	;# 
   186     0001                     	;# 
   187     0002                     	;# 
   188     0003                     	;# 
   189     0004                     	;# 
   190     0005                     	;# 
   191     0006                     	;# 
   192     0007                     	;# 
   193     0008                     	;# 
   194     0009                     	;# 
   195     000A                     	;# 
   196     000B                     	;# 
   197     000C                     	;# 
   198     000D                     	;# 
   199     000E                     	;# 
   200     000E                     	;# 
   201     000F                     	;# 
   202     0010                     	;# 
   203     0011                     	;# 
   204     0012                     	;# 
   205     0013                     	;# 
   206     0014                     	;# 
   207     0015                     	;# 
   208     0015                     	;# 
   209     0016                     	;# 
   210     0017                     	;# 
   211     0018                     	;# 
   212     0019                     	;# 
   213     001A                     	;# 
   214     001B                     	;# 
   215     001B                     	;# 
   216     001C                     	;# 
   217     001D                     	;# 
   218     001E                     	;# 
   219     001F                     	;# 
   220     0081                     	;# 
   221     0085                     	;# 
   222     0086                     	;# 
   223     0087                     	;# 
   224     0088                     	;# 
   225     0089                     	;# 
   226     008C                     	;# 
   227     008D                     	;# 
   228     008E                     	;# 
   229     0091                     	;# 
   230     0092                     	;# 
   231     0093                     	;# 
   232     0094                     	;# 
   233     0098                     	;# 
   234     0099                     	;# 
   235     009C                     	;# 
   236     009D                     	;# 
   237     009E                     	;# 
   238     009F                     	;# 
   239     010C                     	;# 
   240     010D                     	;# 
   241     010E                     	;# 
   242     010F                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000D                     	;# 
   259     000E                     	;# 
   260     000E                     	;# 
   261     000F                     	;# 
   262     0010                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0015                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001B                     	;# 
   276     001C                     	;# 
   277     001D                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     0081                     	;# 
   281     0085                     	;# 
   282     0086                     	;# 
   283     0087                     	;# 
   284     0088                     	;# 
   285     0089                     	;# 
   286     008C                     	;# 
   287     008D                     	;# 
   288     008E                     	;# 
   289     0091                     	;# 
   290     0092                     	;# 
   291     0093                     	;# 
   292     0094                     	;# 
   293     0098                     	;# 
   294     0099                     	;# 
   295     009C                     	;# 
   296     009D                     	;# 
   297     009E                     	;# 
   298     009F                     	;# 
   299     010C                     	;# 
   300     010D                     	;# 
   301     010E                     	;# 
   302     010F                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0094                     	;# 
   353     0098                     	;# 
   354     0099                     	;# 
   355     009C                     	;# 
   356     009D                     	;# 
   357     009E                     	;# 
   358     009F                     	;# 
   359     010C                     	;# 
   360     010D                     	;# 
   361     010E                     	;# 
   362     010F                     	;# 
   363     018C                     	;# 
   364     018D                     	;# 
   365     0000                     	;# 
   366     0001                     	;# 
   367     0002                     	;# 
   368     0003                     	;# 
   369     0004                     	;# 
   370     0005                     	;# 
   371     0006                     	;# 
   372     0007                     	;# 
   373     0008                     	;# 
   374     0009                     	;# 
   375     000A                     	;# 
   376     000B                     	;# 
   377     000C                     	;# 
   378     000D                     	;# 
   379     000E                     	;# 
   380     000E                     	;# 
   381     000F                     	;# 
   382     0010                     	;# 
   383     0011                     	;# 
   384     0012                     	;# 
   385     0013                     	;# 
   386     0014                     	;# 
   387     0015                     	;# 
   388     0015                     	;# 
   389     0016                     	;# 
   390     0017                     	;# 
   391     0018                     	;# 
   392     0019                     	;# 
   393     001A                     	;# 
   394     001B                     	;# 
   395     001B                     	;# 
   396     001C                     	;# 
   397     001D                     	;# 
   398     001E                     	;# 
   399     001F                     	;# 
   400     0081                     	;# 
   401     0085                     	;# 
   402     0086                     	;# 
   403     0087                     	;# 
   404     0088                     	;# 
   405     0089                     	;# 
   406     008C                     	;# 
   407     008D                     	;# 
   408     008E                     	;# 
   409     0091                     	;# 
   410     0092                     	;# 
   411     0093                     	;# 
   412     0094                     	;# 
   413     0098                     	;# 
   414     0099                     	;# 
   415     009C                     	;# 
   416     009D                     	;# 
   417     009E                     	;# 
   418     009F                     	;# 
   419     010C                     	;# 
   420     010D                     	;# 
   421     010E                     	;# 
   422     010F                     	;# 
   423     018C                     	;# 
   424     018D                     	;# 
   425                           
   426                           	psect	idataBANK0
   427     053C                     __pidataBANK0:
   428                           
   429                           ;initializer for main@F1031
   430     053C  3431               	retlw	49
   431     053D  3400               	retlw	0
   432                           
   433                           ;initializer for main@once
   434     053E  3401               	retlw	1
   435     053F  3400               	retlw	0
   436                           
   437                           ;initializer for read_matrix_keypad@once
   438     0540  3401               	retlw	1
   439     0001                     _TMR0	set	1
   440     0006                     _PORTB	set	6
   441     0008                     _PORTD	set	8
   442     0032                     _RB2	set	50
   443     0031                     _RB1	set	49
   444     0030                     _RB0	set	48
   445     0040                     _RD0	set	64
   446     0041                     _RD1	set	65
   447     0042                     _RD2	set	66
   448     0043                     _RD3	set	67
   449     005A                     _TMR0IF	set	90
   450     0037                     _RB7	set	55
   451     005D                     _TMR0IE	set	93
   452     005F                     _GIE	set	95
   453     0049                     _RE1	set	73
   454     004A                     _RE2	set	74
   455     0086                     _TRISB	set	134
   456     0088                     _TRISD	set	136
   457     040F                     _nRBPU	set	1039
   458     040B                     _PSA	set	1035
   459     040D                     _T0CS	set	1037
   460     0449                     _TRISE1	set	1097
   461     044A                     _TRISE2	set	1098
   462     0437                     _TRISB7	set	1079
   463                           
   464                           	psect	strings
   465     0307                     __pstrings:
   466     0307                     stringtab:
   467     0307                     __stringtab:
   468                           
   469                           ;	String table - string pointers are 1 byte each
   470     0307  1BFF               	btfsc	btemp+1,7
   471     0308  2B11               	ljmp	stringcode
   472     0309  1383               	bcf	3,7
   473     030A  187F               	btfsc	btemp+1,0
   474     030B  1783               	bsf	3,7
   475     030C  0800               	movf	0,w
   476     030D  0A84               	incf	4,f
   477     030E  1903               	skipnz
   478     030F  0AFF               	incf	btemp+1,f
   479     0310  0008               	return
   480     0311                     stringcode:
   481     0311                     stringdir:
   482     0311  3003               	movlw	high stringdir
   483     0312  008A               	movwf	10
   484     0313  0804               	movf	4,w
   485     0314  0A84               	incf	4,f
   486     0315  0782               	addwf	2,f
   487     0316                     __stringbase:
   488     0316  3400               	retlw	0
   489     0317                     __end_of__stringtab:
   490     0317                     STR_5:
   491     0317  3452               	retlw	82	;'R'
   492     0318  3465               	retlw	101	;'e'
   493     0319  3473               	retlw	115	;'s'
   494     031A  3465               	retlw	101	;'e'
   495     031B  3474               	retlw	116	;'t'
   496     031C  3420               	retlw	32	;' '
   497     031D  3479               	retlw	121	;'y'
   498     031E  346F               	retlw	111	;'o'
   499     031F  3475               	retlw	117	;'u'
   500     0320  3472               	retlw	114	;'r'
   501     0321  3420               	retlw	32	;' '
   502     0322  3462               	retlw	98	;'b'
   503     0323  346F               	retlw	111	;'o'
   504     0324  3461               	retlw	97	;'a'
   505     0325  3472               	retlw	114	;'r'
   506     0326  3464               	retlw	100	;'d'
   507     0327  3400               	retlw	0
   508     0328                     STR_2:
   509     0328  3443               	retlw	67	;'C'
   510     0329  3472               	retlw	114	;'r'
   511     032A  3461               	retlw	97	;'a'
   512     032B  3463               	retlw	99	;'c'
   513     032C  346B               	retlw	107	;'k'
   514     032D  3465               	retlw	101	;'e'
   515     032E  3464               	retlw	100	;'d'
   516     032F  3420               	retlw	32	;' '
   517     0330  3474               	retlw	116	;'t'
   518     0331  3468               	retlw	104	;'h'
   519     0332  3465               	retlw	101	;'e'
   520     0333  3420               	retlw	32	;' '
   521     0334  3443               	retlw	67	;'C'
   522     0335  346F               	retlw	111	;'o'
   523     0336  3464               	retlw	100	;'d'
   524     0337  3465               	retlw	101	;'e'
   525     0338  3400               	retlw	0
   526     0339                     STR_4:
   527     0339  3450               	retlw	80	;'P'
   528     033A  3461               	retlw	97	;'a'
   529     033B  3473               	retlw	115	;'s'
   530     033C  3473               	retlw	115	;'s'
   531     033D  3477               	retlw	119	;'w'
   532     033E  346F               	retlw	111	;'o'
   533     033F  3472               	retlw	114	;'r'
   534     0340  3464               	retlw	100	;'d'
   535     0341  3420               	retlw	32	;' '
   536     0342  3446               	retlw	70	;'F'
   537     0343  3461               	retlw	97	;'a'
   538     0344  3469               	retlw	105	;'i'
   539     0345  346C               	retlw	108	;'l'
   540     0346  3465               	retlw	101	;'e'
   541     0347  3464               	retlw	100	;'d'
   542     0348  3400               	retlw	0
   543     0349                     STR_6:
   544     0349  3445               	retlw	69	;'E'
   545     034A  346E               	retlw	110	;'n'
   546     034B  3474               	retlw	116	;'t'
   547     034C  3465               	retlw	101	;'e'
   548     034D  3472               	retlw	114	;'r'
   549     034E  3420               	retlw	32	;' '
   550     034F  3450               	retlw	80	;'P'
   551     0350  3461               	retlw	97	;'a'
   552     0351  3473               	retlw	115	;'s'
   553     0352  3473               	retlw	115	;'s'
   554     0353  3477               	retlw	119	;'w'
   555     0354  346F               	retlw	111	;'o'
   556     0355  3472               	retlw	114	;'r'
   557     0356  3464               	retlw	100	;'d'
   558     0357  3400               	retlw	0
   559     0358                     STR_1:
   560     0358  3445               	retlw	69	;'E'
   561     0359  3478               	retlw	120	;'x'
   562     035A  3463               	retlw	99	;'c'
   563     035B  3465               	retlw	101	;'e'
   564     035C  346C               	retlw	108	;'l'
   565     035D  346C               	retlw	108	;'l'
   566     035E  3465               	retlw	101	;'e'
   567     035F  346E               	retlw	110	;'n'
   568     0360  3474               	retlw	116	;'t'
   569     0361  3421               	retlw	33	;'!'
   570     0362  3420               	retlw	32	;' '
   571     0363  3459               	retlw	89	;'Y'
   572     0364  346F               	retlw	111	;'o'
   573     0365  3475               	retlw	117	;'u'
   574     0366  3400               	retlw	0
   575     0367                     STR_3:
   576     0367  3441               	retlw	65	;'A'
   577     0368  3474               	retlw	116	;'t'
   578     0369  3474               	retlw	116	;'t'
   579     036A  3465               	retlw	101	;'e'
   580     036B  346D               	retlw	109	;'m'
   581     036C  3470               	retlw	112	;'p'
   582     036D  3474               	retlw	116	;'t'
   583     036E  3400               	retlw	0
   584                           
   585                           	psect	cinit
   586     0011                     start_initialization:	
   587                           ; #config settings
   588                           
   589     0011                     __initialization:
   590                           
   591                           ; Initialize objects allocated to BANK0
   592     0011  120A  118A  253C  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   593     0016  00C9               	movwf	__pdataBANK0& (0+127)
   594     0017  120A  118A  253D  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   595     001C  00CA               	movwf	(__pdataBANK0+1)& (0+127)
   596     001D  120A  118A  253E  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   597     0022  00CB               	movwf	(__pdataBANK0+2)& (0+127)
   598     0023  120A  118A  253F  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   599     0028  00CC               	movwf	(__pdataBANK0+3)& (0+127)
   600     0029  120A  118A  2540  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   601     002E  00CD               	movwf	(__pdataBANK0+4)& (0+127)
   602                           
   603                           ; Clear objects allocated to BANK0
   604     002F  1383               	bcf	3,7	;select IRP bank0
   605     0030  3020               	movlw	low __pbssBANK0
   606     0031  0084               	movwf	4
   607     0032  303A               	movlw	low (__pbssBANK0+26)
   608     0033  120A  118A  2534  120A  118A  	fcall	clear_ram0
   609                           
   610                           ; Clear objects allocated to COMMON
   611     0038  01FB               	clrf	__pbssCOMMON& (0+127)
   612     0039  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   613     003A                     end_of_initialization:	
   614                           ;End of C runtime variable initialization code
   615                           
   616     003A                     __end_of__initialization:
   617     003A  0183               	clrf	3
   618     003B  120A  118A  283E   	ljmp	_main	;jump to C main() function
   619                           
   620                           	psect	bssCOMMON
   621     007B                     __pbssCOMMON:
   622     007B                     isr@count:
   623     007B                     	ds	2
   624                           
   625                           	psect	bssBANK0
   626     0020                     __pbssBANK0:
   627     0020                     main@pwd:
   628     0020                     	ds	8
   629     0028                     main@password:
   630     0028                     	ds	8
   631     0030                     main@attempt:
   632     0030                     	ds	2
   633     0032                     main@count1:
   634     0032                     	ds	2
   635     0034                     main@count:
   636     0034                     	ds	2
   637     0036                     main@flag1:
   638     0036                     	ds	2
   639     0038                     _sigma:
   640     0038                     	ds	2
   641                           
   642                           	psect	dataBANK0
   643     0049                     __pdataBANK0:
   644     0049                     main@F1031:
   645     0049                     	ds	2
   646     004B                     main@once:
   647     004B                     	ds	2
   648     004D                     read_matrix_keypad@once:
   649     004D                     	ds	1
   650                           
   651                           	psect	clrtext
   652     0534                     clear_ram0:	
   653                           ;	Called with FSR containing the base address, and
   654                           ;	W with the last address+1
   655                           
   656     0534  0064               	clrwdt	;clear the watchdog before getting into this loop
   657     0535                     clrloop0:
   658     0535  0180               	clrf	0	;clear RAM location pointed to by FSR
   659     0536  0A84               	incf	4,f	;increment pointer
   660     0537  0604               	xorwf	4,w	;XOR with final address
   661     0538  1903               	btfsc	3,2	;have we reached the end yet?
   662     0539  3400               	retlw	0	;all done for this memory range, return
   663     053A  0604               	xorwf	4,w	;XOR again to restore value
   664     053B  2D35               	goto	clrloop0	;do the next byte
   665                           
   666                           	psect	cstackCOMMON
   667     0070                     __pcstackCOMMON:
   668     0070                     ?_init_clcd:
   669     0070                     ?_init_matrix_keypad:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?_init_timer0:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ?_read_matrix_keypad:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ?_init_config:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ?_main:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0070                     ?_init_display_controller:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0070                     ?_isr:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ?_scan_keypad:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ?___awdiv:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ___awdiv@divisor:	
   697                           ; 2 bytes @ 0x0
   698                           
   699                           
   700                           ; 2 bytes @ 0x0
   701     0070                     	ds	2
   702     0072                     ___awdiv@dividend:
   703                           
   704                           ; 2 bytes @ 0x2
   705     0072                     	ds	2
   706     0074                     ??___awdiv:
   707     0074                     ___awdiv@counter:	
   708                           ; 1 bytes @ 0x4
   709                           
   710                           
   711                           ; 1 bytes @ 0x4
   712     0074                     	ds	1
   713     0075                     ___awdiv@sign:
   714                           
   715                           ; 1 bytes @ 0x5
   716     0075                     	ds	1
   717     0076                     ___awdiv@quotient:
   718                           
   719                           ; 2 bytes @ 0x6
   720     0076                     	ds	2
   721     0078                     ??_isr:
   722                           
   723                           ; 1 bytes @ 0x8
   724     0078                     	ds	3
   725                           
   726                           	psect	cstackBANK0
   727     003A                     __pcstackBANK0:
   728     003A                     ??_init_matrix_keypad:
   729     003A                     ??_init_timer0:	
   730                           ; 1 bytes @ 0x0
   731                           
   732     003A                     ?_clcd_write:	
   733                           ; 1 bytes @ 0x0
   734                           
   735     003A                     ?_clcd_write@clcd$F103:	
   736                           ; 1 bytes @ 0x0
   737                           
   738     003A                     ??_scan_keypad:	
   739                           ; 1 bytes @ 0x0
   740                           
   741     003A                     clcd_write@mode:	
   742                           ; 1 bytes @ 0x0
   743                           
   744     003A                     clcd_write@clcd$F103@mode:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     003A                     scan_keypad@i:	
   748                           ; 1 bytes @ 0x0
   749                           
   750                           
   751                           ; 2 bytes @ 0x0
   752     003A                     	ds	1
   753     003B                     ??_clcd_write:
   754     003B                     ??_clcd_write@clcd$F103:	
   755                           ; 1 bytes @ 0x1
   756                           
   757                           
   758                           ; 1 bytes @ 0x1
   759     003B                     	ds	1
   760     003C                     ??_read_matrix_keypad:
   761     003C                     read_matrix_keypad@mode:	
   762                           ; 1 bytes @ 0x2
   763                           
   764                           
   765                           ; 1 bytes @ 0x2
   766     003C                     	ds	1
   767     003D                     clcd_write@byte:
   768     003D                     clcd_write@clcd$F103@byte:	
   769                           ; 1 bytes @ 0x3
   770                           
   771     003D                     read_matrix_keypad@key:	
   772                           ; 1 bytes @ 0x3
   773                           
   774                           
   775                           ; 1 bytes @ 0x3
   776     003D                     	ds	1
   777     003E                     ?_clcd_putch:
   778     003E                     ?_clcd_print:	
   779                           ; 1 bytes @ 0x4
   780                           
   781     003E                     ??_init_display_controller:	
   782                           ; 1 bytes @ 0x4
   783                           
   784     003E                     clcd_putch@addr:	
   785                           ; 1 bytes @ 0x4
   786                           
   787     003E                     clcd_print@str:	
   788                           ; 1 bytes @ 0x4
   789                           
   790                           
   791                           ; 2 bytes @ 0x4
   792     003E                     	ds	1
   793     003F                     ??_clcd_putch:
   794     003F                     clcd_putch@data:	
   795                           ; 1 bytes @ 0x5
   796                           
   797                           
   798                           ; 1 bytes @ 0x5
   799     003F                     	ds	1
   800     0040                     ??_init_clcd:
   801     0040                     ??_init_config:	
   802                           ; 1 bytes @ 0x6
   803                           
   804     0040                     clcd_print@addr:	
   805                           ; 1 bytes @ 0x6
   806                           
   807                           
   808                           ; 1 bytes @ 0x6
   809     0040                     	ds	1
   810     0041                     ??_clcd_print:
   811     0041                     ??_main:	
   812                           ; 1 bytes @ 0x7
   813                           
   814                           
   815                           ; 1 bytes @ 0x7
   816     0041                     	ds	1
   817     0042                     main@ptr:
   818                           
   819                           ; 2 bytes @ 0x8
   820     0042                     	ds	2
   821     0044                     main@i:
   822                           
   823                           ; 4 bytes @ 0xA
   824     0044                     	ds	4
   825     0048                     main@key:
   826                           
   827                           ; 1 bytes @ 0xE
   828     0048                     	ds	1
   829                           
   830                           	psect	maintext
   831     003E                     __pmaintext:	
   832 ;;
   833 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   834 ;;
   835 ;; *************** function _main *****************
   836 ;; Defined at:
   837 ;;		line 45 in file "main.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  i               4   10[BANK0 ] unsigned long 
   842 ;;  ptr             2    8[BANK0 ] unsigned char [2]
   843 ;;  key             1   14[BANK0 ] unsigned char 
   844 ;;  cur_key         1    0        unsigned char 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : B00/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       7       0       0       0
   856 ;;      Temps:          0       1       0       0       0
   857 ;;      Totals:         0       8       0       0       0
   858 ;;Total ram usage:        8 bytes
   859 ;; Hardware stack levels required when called: 6
   860 ;; This function calls:
   861 ;;		_clcd_print
   862 ;;		_clcd_putch
   863 ;;		_clcd_write
   864 ;;		_init_config
   865 ;;		_read_matrix_keypad
   866 ;; This function is called by:
   867 ;;		Startup code after reset
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871     003E                     _main:	
   872                           ;psect for function _main
   873                           
   874     003E                     l1400:	
   875                           ;incstack = 0
   876                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   877                           
   878                           
   879                           ;main.c: 46: ;main.c: 47: ;main.c: 48:         if(flag1 == 0);main.c: 49:         {
   880     003E  1283               	bcf	3,5	;RP0=0, select bank0
   881     003F  1303               	bcf	3,6	;RP1=0, select bank0
   882     0040  084A               	movf	main@F1031+1,w
   883     0041  00C3               	movwf	main@ptr+1
   884     0042  0849               	movf	main@F1031,w
   885     0043  00C2               	movwf	main@ptr
   886     0044                     l1402:
   887                           
   888                           ;main.c: 50: ;main.c: 52:             {
   889     0044  120A  118A  24E2  120A  118A  	fcall	_init_config
   890     0049                     l1404:
   891                           
   892                           ;main.c: 56: 
   893     0049  3001               	movlw	1
   894     004A  120A  118A  24BB  120A  118A  	fcall	_read_matrix_keypad
   895     004F  1283               	bcf	3,5	;RP0=0, select bank0
   896     0050  1303               	bcf	3,6	;RP1=0, select bank0
   897     0051  00C8               	movwf	main@key
   898     0052                     l1406:
   899                           
   900                           ;main.c: 58: 
   901     0052  0A48               	incf	main@key,w
   902     0053  1903               	btfsc	3,2
   903     0054  2856               	goto	u931
   904     0055  2857               	goto	u930
   905     0056                     u931:
   906     0056  2857               	goto	l1410
   907     0057                     u930:
   908     0057                     l1408:
   909     0057                     l1410:
   910                           
   911                           ;main.c: 64:                 count++;
   912     0057  0836               	movf	main@flag1,w
   913     0058  0437               	iorwf	main@flag1+1,w
   914     0059  1D03               	btfss	3,2
   915     005A  285C               	goto	u941
   916     005B  285D               	goto	u940
   917     005C                     u941:
   918     005C  2849               	goto	l1404
   919     005D                     u940:
   920     005D                     l1412:
   921                           
   922                           ;main.c: 65:             };main.c: 67:             else if(count == 8 && count1 == count
      +                          )
   923     005D  0A48               	incf	main@key,w
   924     005E  1903               	btfsc	3,2
   925     005F  2861               	goto	u951
   926     0060  2862               	goto	u950
   927     0061                     u951:
   928     0061  289E               	goto	l1424
   929     0062                     u950:
   930     0062                     l1414:
   931     0062  0835               	movf	main@count+1,w
   932     0063  3A80               	xorlw	128
   933     0064  00FF               	movwf	btemp+1
   934     0065  3080               	movlw	128
   935     0066  027F               	subwf	btemp+1,w
   936     0067  1D03               	skipz
   937     0068  286B               	goto	u965
   938     0069  3008               	movlw	8
   939     006A  0234               	subwf	main@count,w
   940     006B                     u965:
   941     006B  1803               	skipnc
   942     006C  286E               	goto	u961
   943     006D  286F               	goto	u960
   944     006E                     u961:
   945     006E  289E               	goto	l1424
   946     006F                     u960:
   947     006F                     l1416:
   948                           
   949                           ;main.c: 68:             {;main.c: 69:                 clcd_write(0x0C, 0);
   950     006F  1283               	bcf	3,5	;RP0=0, select bank0
   951     0070  1303               	bcf	3,6	;RP1=0, select bank0
   952     0071  0834               	movf	main@count,w
   953     0072  3E20               	addlw	(low (main@pwd| 0))& (0+255)
   954     0073  0084               	movwf	4
   955     0074  0848               	movf	main@key,w
   956     0075  1383               	bcf	3,7	;select IRP bank0
   957     0076  0080               	movwf	0
   958     0077                     l1418:
   959                           
   960                           ;main.c: 73:                 clcd_print("Excellent! You",(0x80 + 1));
   961     0077  0834               	movf	main@count,w
   962     0078  3EC0               	addlw	192
   963     0079  00BE               	movwf	clcd_putch@addr
   964     007A  302A               	movlw	42
   965     007B  120A  118A  24FB  120A  118A  	fcall	_clcd_putch
   966     0080                     l1420:
   967                           
   968                           ;main.c: 76:                 flag1 = 1;
   969     0080  1283               	bcf	3,5	;RP0=0, select bank0
   970     0081  1303               	bcf	3,6	;RP1=0, select bank0
   971     0082  0834               	movf	main@count,w
   972     0083  3E28               	addlw	(low (main@password| 0))& (0+255)
   973     0084  0084               	movwf	4
   974     0085  1383               	bcf	3,7	;select IRP bank0
   975     0086  0800               	movf	0,w
   976     0087  00C1               	movwf	??_main
   977     0088  0834               	movf	main@count,w
   978     0089  3E20               	addlw	(low (main@pwd| 0))& (0+255)
   979     008A  0084               	movwf	4
   980     008B  0800               	movf	0,w
   981     008C  0641               	xorwf	??_main,w
   982     008D  1D03               	skipz
   983     008E  2890               	goto	u971
   984     008F  2891               	goto	u970
   985     0090                     u971:
   986     0090  2897               	goto	l63
   987     0091                     u970:
   988     0091                     l1422:
   989                           
   990                           ;main.c: 77:                 if(TMR0IE == 1);main.c: 78:                 {
   991     0091  3001               	movlw	1
   992     0092  07B2               	addwf	main@count1,f
   993     0093  1803               	skipnc
   994     0094  0AB3               	incf	main@count1+1,f
   995     0095  3000               	movlw	0
   996     0096  07B3               	addwf	main@count1+1,f
   997     0097                     l63:	
   998                           ;main.c: 79:                     TMR0IE = 0;
   999                           
  1000                           
  1001                           ;main.c: 80:                     RB7 = 0;
  1002     0097  3001               	movlw	1
  1003     0098  07B4               	addwf	main@count,f
  1004     0099  1803               	skipnc
  1005     009A  0AB5               	incf	main@count+1,f
  1006     009B  3000               	movlw	0
  1007     009C  07B5               	addwf	main@count+1,f
  1008                           
  1009                           ;main.c: 81:                 }
  1010     009D  2849               	goto	l1404
  1011     009E                     l1424:
  1012     009E  3008               	movlw	8
  1013     009F  1283               	bcf	3,5	;RP0=0, select bank0
  1014     00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1015     00A1  0634               	xorwf	main@count,w
  1016     00A2  0435               	iorwf	main@count+1,w
  1017     00A3  1D03               	btfss	3,2
  1018     00A4  28A6               	goto	u981
  1019     00A5  28A7               	goto	u980
  1020     00A6                     u981:
  1021     00A6  28E8               	goto	l1440
  1022     00A7                     u980:
  1023     00A7                     l1426:
  1024     00A7  0835               	movf	main@count+1,w
  1025     00A8  0633               	xorwf	main@count1+1,w
  1026     00A9  1D03               	skipz
  1027     00AA  28AD               	goto	u995
  1028     00AB  0834               	movf	main@count,w
  1029     00AC  0632               	xorwf	main@count1,w
  1030     00AD                     u995:
  1031     00AD  1D03               	skipz
  1032     00AE  28B0               	goto	u991
  1033     00AF  28B1               	goto	u990
  1034     00B0                     u991:
  1035     00B0  28E8               	goto	l1440
  1036     00B1                     u990:
  1037     00B1                     l1428:
  1038                           
  1039                           ;main.c: 84:             else if(count == 8 && count1 != count);main.c: 85:             
      +                          {
  1040     00B1  01BA               	clrf	clcd_write@mode
  1041     00B2  300C               	movlw	12
  1042     00B3  120A  118A  23D6  120A  118A  	fcall	_clcd_write
  1043                           
  1044                           ;main.c: 87: 
  1045     00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1046     00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1047     00BA  01BA               	clrf	clcd_write@mode
  1048     00BB  3001               	movlw	1
  1049     00BC  120A  118A  23D6  120A  118A  	fcall	_clcd_write
  1050     00C1                     l1430:
  1051                           
  1052                           ;main.c: 89:                     TMR0IE = 1;
  1053     00C1  3042               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1054     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1055     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1056     00C4  00BE               	movwf	clcd_print@str
  1057     00C5  3080               	movlw	128
  1058     00C6  00BF               	movwf	clcd_print@str+1
  1059     00C7  3081               	movlw	129
  1060     00C8  00C0               	movwf	clcd_print@addr
  1061     00C9  120A  118A  2488  120A  118A  	fcall	_clcd_print
  1062     00CE                     l1432:
  1063                           
  1064                           ;main.c: 90: 
  1065     00CE  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1066     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1067     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1068     00D1  00BE               	movwf	clcd_print@str
  1069     00D2  3080               	movlw	128
  1070     00D3  00BF               	movwf	clcd_print@str+1
  1071     00D4  30C0               	movlw	192
  1072     00D5  00C0               	movwf	clcd_print@addr
  1073     00D6  120A  118A  2488  120A  118A  	fcall	_clcd_print
  1074     00DB                     l1434:
  1075                           
  1076                           ;main.c: 92:                 count1 = 0;
  1077     00DB  3001               	movlw	1
  1078     00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1079     00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1080     00DE  00B6               	movwf	main@flag1
  1081     00DF  3000               	movlw	0
  1082     00E0  00B7               	movwf	main@flag1+1
  1083     00E1                     l1436:
  1084                           
  1085                           ;main.c: 93:                 count = 0;
  1086     00E1  1E8B               	btfss	11,5	;volatile
  1087     00E2  28E4               	goto	u1001
  1088     00E3  28E5               	goto	u1000
  1089     00E4                     u1001:
  1090     00E4  2849               	goto	l1404
  1091     00E5                     u1000:
  1092     00E5                     l1438:
  1093                           
  1094                           ;main.c: 94:                 once = 1;;main.c: 95: 
  1095     00E5  128B               	bcf	11,5	;volatile
  1096                           
  1097                           ;main.c: 96: 
  1098     00E6  1386               	bcf	6,7	;volatile
  1099     00E7  2849               	goto	l1404
  1100     00E8                     l1440:
  1101     00E8  3008               	movlw	8
  1102     00E9  0634               	xorwf	main@count,w
  1103     00EA  0435               	iorwf	main@count+1,w
  1104     00EB  1D03               	btfss	3,2
  1105     00EC  28EE               	goto	u1011
  1106     00ED  28EF               	goto	u1010
  1107     00EE                     u1011:
  1108     00EE  296E               	goto	l1474
  1109     00EF                     u1010:
  1110     00EF                     l1442:
  1111     00EF  0835               	movf	main@count+1,w
  1112     00F0  0633               	xorwf	main@count1+1,w
  1113     00F1  1D03               	skipz
  1114     00F2  28F5               	goto	u1025
  1115     00F3  0834               	movf	main@count,w
  1116     00F4  0632               	xorwf	main@count1,w
  1117     00F5                     u1025:
  1118     00F5  1903               	skipnz
  1119     00F6  28F8               	goto	u1021
  1120     00F7  28F9               	goto	u1020
  1121     00F8                     u1021:
  1122     00F8  296E               	goto	l1474
  1123     00F9                     u1020:
  1124     00F9                     l1444:
  1125                           
  1126                           ;main.c: 101:                 clcd_print(ptr,(0x80 + 9));;main.c: 102:                 p
      +                          tr[0] = ptr[0] + 1;
  1127     00F9  0838               	movf	_sigma,w
  1128     00FA  3E02               	addlw	2
  1129     00FB  00B8               	movwf	_sigma
  1130     00FC  0839               	movf	_sigma+1,w
  1131     00FD  1803               	skipnc
  1132     00FE  3E01               	addlw	1
  1133     00FF  3E00               	addlw	0
  1134     0100  00B9               	movwf	_sigma+1
  1135     0101                     l1446:
  1136                           
  1137                           ;main.c: 104: 
  1138     0101  1A8B               	btfsc	11,5	;volatile
  1139     0102  2904               	goto	u1031
  1140     0103  2905               	goto	u1030
  1141     0104                     u1031:
  1142     0104  2906               	goto	l1450
  1143     0105                     u1030:
  1144     0105                     l1448:
  1145                           
  1146                           ;main.c: 105:             }
  1147     0105  168B               	bsf	11,5	;volatile
  1148     0106                     l1450:
  1149                           
  1150                           ;main.c: 107:             else if(attempt == 5)
  1151     0106  3001               	movlw	1
  1152     0107  07B0               	addwf	main@attempt,f
  1153     0108  1803               	skipnc
  1154     0109  0AB1               	incf	main@attempt+1,f
  1155     010A  3000               	movlw	0
  1156     010B  07B1               	addwf	main@attempt+1,f
  1157     010C                     l1452:
  1158                           
  1159                           ;main.c: 108:             {
  1160     010C  01B2               	clrf	main@count1
  1161     010D  01B3               	clrf	main@count1+1
  1162     010E                     l1454:
  1163                           
  1164                           ;main.c: 109: 
  1165     010E  01B4               	clrf	main@count
  1166     010F  01B5               	clrf	main@count+1
  1167                           
  1168                           ;main.c: 110:                 clcd_write(0x0C, 0);
  1169     0110  3001               	movlw	1
  1170     0111  00CB               	movwf	main@once
  1171     0112  3000               	movlw	0
  1172     0113  00CC               	movwf	main@once+1
  1173     0114                     l1456:
  1174                           
  1175                           ;main.c: 114:                 flag1 = 1;
  1176     0114  01BA               	clrf	clcd_write@mode
  1177     0115  3001               	movlw	1
  1178     0116  120A  118A  23D6  120A  118A  	fcall	_clcd_write
  1179     011B                     l1458:
  1180                           
  1181                           ;main.c: 115: 
  1182     011B  1283               	bcf	3,5	;RP0=0, select bank0
  1183     011C  1303               	bcf	3,6	;RP1=0, select bank0
  1184     011D  01BA               	clrf	clcd_write@mode
  1185     011E  300C               	movlw	12
  1186     011F  120A  118A  23D6  120A  118A  	fcall	_clcd_write
  1187     0124                     l1460:
  1188                           
  1189                           ;main.c: 116:             }
  1190     0124  3051               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1191     0125  1283               	bcf	3,5	;RP0=0, select bank0
  1192     0126  1303               	bcf	3,6	;RP1=0, select bank0
  1193     0127  00BE               	movwf	clcd_print@str
  1194     0128  3080               	movlw	128
  1195     0129  00BF               	movwf	clcd_print@str+1
  1196     012A  3080               	movlw	128
  1197     012B  00C0               	movwf	clcd_print@addr
  1198     012C  120A  118A  2488  120A  118A  	fcall	_clcd_print
  1199     0131                     l1462:
  1200                           
  1201                           ;main.c: 117: 
  1202     0131  3042               	movlw	(low (main@ptr| 0))& (0+255)
  1203     0132  1283               	bcf	3,5	;RP0=0, select bank0
  1204     0133  1303               	bcf	3,6	;RP1=0, select bank0
  1205     0134  00BE               	movwf	clcd_print@str
  1206     0135  3000               	movlw	0
  1207     0136  00BF               	movwf	clcd_print@str+1
  1208     0137  3089               	movlw	137
  1209     0138  00C0               	movwf	clcd_print@addr
  1210     0139  120A  118A  2488  120A  118A  	fcall	_clcd_print
  1211     013E                     l1464:
  1212                           
  1213                           ;main.c: 118:             else if(key == 0xFF && count == 0 && once)
  1214     013E  1283               	bcf	3,5	;RP0=0, select bank0
  1215     013F  1303               	bcf	3,6	;RP1=0, select bank0
  1216     0140  0842               	movf	main@ptr,w
  1217     0141  3E01               	addlw	1
  1218     0142  00C2               	movwf	main@ptr
  1219     0143                     l1466:
  1220                           
  1221                           ;main.c: 119:             {
  1222     0143  3000               	movlw	0
  1223     0144  00C7               	movwf	main@i+3
  1224     0145  3000               	movlw	0
  1225     0146  00C6               	movwf	main@i+2
  1226     0147  3000               	movlw	0
  1227     0148  00C5               	movwf	main@i+1
  1228     0149  3000               	movlw	0
  1229     014A  00C4               	movwf	main@i
  1230     014B                     l1470:
  1231     014B  3001               	movlw	1
  1232     014C  1283               	bcf	3,5	;RP0=0, select bank0
  1233     014D  1303               	bcf	3,6	;RP1=0, select bank0
  1234     014E  07C4               	addwf	main@i,f
  1235     014F  3000               	movlw	0
  1236     0150  1803               	skipnc
  1237     0151  3001               	movlw	1
  1238     0152  07C5               	addwf	main@i+1,f
  1239     0153  3000               	movlw	0
  1240     0154  1803               	skipnc
  1241     0155  3001               	movlw	1
  1242     0156  07C6               	addwf	main@i+2,f
  1243     0157  3000               	movlw	0
  1244     0158  1803               	skipnc
  1245     0159  3001               	movlw	1
  1246     015A  07C7               	addwf	main@i+3,f
  1247     015B                     l1472:
  1248     015B  0847               	movf	main@i+3,w
  1249     015C  1D03               	btfss	3,2
  1250     015D  296D               	goto	u1040
  1251     015E  0846               	movf	main@i+2,w
  1252     015F  1D03               	btfss	3,2
  1253     0160  296D               	goto	u1040
  1254     0161  3001               	movlw	1
  1255     0162  0245               	subwf	main@i+1,w
  1256     0163  1D03               	skipz
  1257     0164  2969               	goto	u1043
  1258     0165  30F4               	movlw	244
  1259     0166  0244               	subwf	main@i,w
  1260     0167  1D03               	skipz
  1261     0168  2969               	goto	u1043
  1262     0169                     u1043:
  1263     0169  1C03               	btfss	3,0
  1264     016A  296C               	goto	u1041
  1265     016B  296D               	goto	u1040
  1266     016C                     u1041:
  1267     016C  294B               	goto	l1470
  1268     016D                     u1040:
  1269     016D  2849               	goto	l1404
  1270     016E                     l1474:
  1271     016E  3005               	movlw	5
  1272     016F  0630               	xorwf	main@attempt,w
  1273     0170  0431               	iorwf	main@attempt+1,w
  1274     0171  1D03               	btfss	3,2
  1275     0172  2974               	goto	u1051
  1276     0173  2975               	goto	u1050
  1277     0174                     u1051:
  1278     0174  29A6               	goto	l1484
  1279     0175                     u1050:
  1280     0175                     l1476:
  1281                           
  1282                           ;main.c: 124:                 clcd_write(0x0F, 0);;main.c: 126:         }
  1283     0175  01BA               	clrf	clcd_write@mode
  1284     0176  300C               	movlw	12
  1285     0177  120A  118A  23D6  120A  118A  	fcall	_clcd_write
  1286                           
  1287                           ;main.c: 127:     }
  1288     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1289     017D  1303               	bcf	3,6	;RP1=0, select bank0
  1290     017E  01BA               	clrf	clcd_write@mode
  1291     017F  3001               	movlw	1
  1292     0180  120A  118A  23D6  120A  118A  	fcall	_clcd_write
  1293     0185                     l1478:
  1294                           
  1295                           ;main.c: 128:     return;
  1296     0185  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1297     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1298     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1299     0188  00BE               	movwf	clcd_print@str
  1300     0189  3080               	movlw	128
  1301     018A  00BF               	movwf	clcd_print@str+1
  1302     018B  3080               	movlw	128
  1303     018C  00C0               	movwf	clcd_print@addr
  1304     018D  120A  118A  2488  120A  118A  	fcall	_clcd_print
  1305     0192                     l1480:
  1306                           
  1307                           ;main.c: 129: }
  1308     0192  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1309     0193  1283               	bcf	3,5	;RP0=0, select bank0
  1310     0194  1303               	bcf	3,6	;RP1=0, select bank0
  1311     0195  00BE               	movwf	clcd_print@str
  1312     0196  3080               	movlw	128
  1313     0197  00BF               	movwf	clcd_print@str+1
  1314     0198  30C0               	movlw	192
  1315     0199  00C0               	movwf	clcd_print@addr
  1316     019A  120A  118A  2488  120A  118A  	fcall	_clcd_print
  1317     019F                     l1482:
  1318     019F  3001               	movlw	1
  1319     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1320     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1321     01A2  00B6               	movwf	main@flag1
  1322     01A3  3000               	movlw	0
  1323     01A4  00B7               	movwf	main@flag1+1
  1324     01A5  2849               	goto	l1404
  1325     01A6                     l1484:
  1326     01A6  0A48               	incf	main@key,w
  1327     01A7  1D03               	btfss	3,2
  1328     01A8  29AA               	goto	u1061
  1329     01A9  29AB               	goto	u1060
  1330     01AA                     u1061:
  1331     01AA  29E0               	goto	l64
  1332     01AB                     u1060:
  1333     01AB                     l1486:
  1334     01AB  0834               	movf	main@count,w
  1335     01AC  0435               	iorwf	main@count+1,w
  1336     01AD  1D03               	btfss	3,2
  1337     01AE  29B0               	goto	u1071
  1338     01AF  29B1               	goto	u1070
  1339     01B0                     u1071:
  1340     01B0  29E0               	goto	l64
  1341     01B1                     u1070:
  1342     01B1                     l1488:
  1343     01B1  084B               	movf	main@once,w
  1344     01B2  044C               	iorwf	main@once+1,w
  1345     01B3  1903               	btfsc	3,2
  1346     01B4  29B6               	goto	u1081
  1347     01B5  29B7               	goto	u1080
  1348     01B6                     u1081:
  1349     01B6  29E0               	goto	l64
  1350     01B7                     u1080:
  1351     01B7                     l1490:
  1352     01B7  01CB               	clrf	main@once
  1353     01B8  01CC               	clrf	main@once+1
  1354     01B9                     l1492:
  1355     01B9  01BA               	clrf	clcd_write@mode
  1356     01BA  3001               	movlw	1
  1357     01BB  120A  118A  23D6  120A  118A  	fcall	_clcd_write
  1358     01C0                     l1494:
  1359     01C0  3033               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1360     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1361     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1362     01C3  00BE               	movwf	clcd_print@str
  1363     01C4  3080               	movlw	128
  1364     01C5  00BF               	movwf	clcd_print@str+1
  1365     01C6  3080               	movlw	128
  1366     01C7  00C0               	movwf	clcd_print@addr
  1367     01C8  120A  118A  2488  120A  118A  	fcall	_clcd_print
  1368     01CD                     l1496:
  1369     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1370     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1371     01CF  01BA               	clrf	clcd_write@mode
  1372     01D0  30C0               	movlw	192
  1373     01D1  120A  118A  23D6  120A  118A  	fcall	_clcd_write
  1374     01D6                     l1498:
  1375     01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1376     01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1377     01D8  01BA               	clrf	clcd_write@mode
  1378     01D9  300F               	movlw	15
  1379     01DA  120A  118A  23D6  120A  118A  	fcall	_clcd_write
  1380     01DF  2849               	goto	l1404
  1381     01E0                     l64:
  1382     01E0  2849               	goto	l1404
  1383     01E1  120A  118A  280E   	ljmp	start
  1384     01E4                     __end_of_main:
  1385                           
  1386                           	psect	text1
  1387     04BB                     __ptext1:	
  1388 ;; *************** function _read_matrix_keypad *****************
  1389 ;; Defined at:
  1390 ;;		line 118 in file "matrix_keypad.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  mode            1    wreg     unsigned char 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  mode            1    2[BANK0 ] unsigned char 
  1395 ;;  key             1    3[BANK0 ] unsigned char 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      unsigned char 
  1398 ;; Registers used:
  1399 ;;		wreg, status,2, status,0, pclath, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1405 ;;      Params:         0       0       0       0       0
  1406 ;;      Locals:         0       2       0       0       0
  1407 ;;      Temps:          0       0       0       0       0
  1408 ;;      Totals:         0       2       0       0       0
  1409 ;;Total ram usage:        2 bytes
  1410 ;; Hardware stack levels used: 1
  1411 ;; Hardware stack levels required when called: 3
  1412 ;; This function calls:
  1413 ;;		_scan_keypad
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419     04BB                     _read_matrix_keypad:	
  1420                           ;psect for function _read_matrix_keypad
  1421                           
  1422                           
  1423                           ;incstack = 0
  1424                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
  1425                           ;read_matrix_keypad@mode stored from wreg
  1426     04BB  1283               	bcf	3,5	;RP0=0, select bank0
  1427     04BC  1303               	bcf	3,6	;RP1=0, select bank0
  1428     04BD  00BC               	movwf	read_matrix_keypad@mode
  1429     04BE                     l1316:
  1430                           
  1431                           ;matrix_keypad.c: 118: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 119: {;matrix_keypad.c: 120:     static unsigned char once = 1;;matrix_keypad.c: 12
      +                          1:     unsigned char key;;matrix_keypad.c: 123:     key = scan_keypad();
  1432     04BE  120A  118A  21E4  120A  118A  	fcall	_scan_keypad
  1433     04C3  1283               	bcf	3,5	;RP0=0, select bank0
  1434     04C4  1303               	bcf	3,6	;RP1=0, select bank0
  1435     04C5  00BD               	movwf	read_matrix_keypad@key
  1436     04C6                     l1318:
  1437                           
  1438                           ;matrix_keypad.c: 125:     if (mode == 0)
  1439     04C6  083C               	movf	read_matrix_keypad@mode,w
  1440     04C7  1D03               	btfss	3,2
  1441     04C8  2CCA               	goto	u781
  1442     04C9  2CCB               	goto	u780
  1443     04CA                     u781:
  1444     04CA  2CCD               	goto	l1326
  1445     04CB                     u780:
  1446     04CB                     l1320:
  1447                           
  1448                           ;matrix_keypad.c: 126:     {;matrix_keypad.c: 127:         return key;
  1449     04CB  083D               	movf	read_matrix_keypad@key,w
  1450     04CC  2CE1               	goto	l200
  1451     04CD                     l1326:
  1452                           
  1453                           ;matrix_keypad.c: 130:     {;matrix_keypad.c: 131:         if ((key != 0xFF) && once)
  1454     04CD  0A3D               	incf	read_matrix_keypad@key,w
  1455     04CE  1903               	btfsc	3,2
  1456     04CF  2CD1               	goto	u791
  1457     04D0  2CD2               	goto	u790
  1458     04D1                     u791:
  1459     04D1  2CD9               	goto	l1338
  1460     04D2                     u790:
  1461     04D2                     l1328:
  1462     04D2  084D               	movf	read_matrix_keypad@once,w
  1463     04D3  1903               	btfsc	3,2
  1464     04D4  2CD6               	goto	u801
  1465     04D5  2CD7               	goto	u800
  1466     04D6                     u801:
  1467     04D6  2CD9               	goto	l1338
  1468     04D7                     u800:
  1469     04D7                     l1330:
  1470                           
  1471                           ;matrix_keypad.c: 132:         {;matrix_keypad.c: 133:             once = 0;
  1472     04D7  01CD               	clrf	read_matrix_keypad@once
  1473     04D8  2CCB               	goto	l1320
  1474     04D9                     l1338:
  1475     04D9  0A3D               	incf	read_matrix_keypad@key,w
  1476     04DA  1D03               	btfss	3,2
  1477     04DB  2CDD               	goto	u811
  1478     04DC  2CDE               	goto	u810
  1479     04DD                     u811:
  1480     04DD  2CE0               	goto	l1342
  1481     04DE                     u810:
  1482     04DE                     l1340:
  1483                           
  1484                           ;matrix_keypad.c: 138:         {;matrix_keypad.c: 139:             once = 1;
  1485     04DE  01CD               	clrf	read_matrix_keypad@once
  1486     04DF  0ACD               	incf	read_matrix_keypad@once,f
  1487     04E0                     l1342:
  1488                           
  1489                           ;matrix_keypad.c: 143:     return 0xFF;
  1490     04E0  30FF               	movlw	255
  1491     04E1                     l200:
  1492     04E1  0008               	return
  1493     04E2                     __end_of_read_matrix_keypad:
  1494                           
  1495                           	psect	text2
  1496     01E4                     __ptext2:	
  1497 ;; *************** function _scan_keypad *****************
  1498 ;; Defined at:
  1499 ;;		line 31 in file "matrix_keypad.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  i               2    0[BANK0 ] int 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      unsigned char 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       0       0       0       0
  1514 ;;      Locals:         0       2       0       0       0
  1515 ;;      Temps:          0       0       0       0       0
  1516 ;;      Totals:         0       2       0       0       0
  1517 ;;Total ram usage:        2 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 2
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_read_matrix_keypad
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527     01E4                     _scan_keypad:	
  1528                           ;psect for function _scan_keypad
  1529                           
  1530     01E4                     l1198:	
  1531                           ;incstack = 0
  1532                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  1533                           
  1534                           
  1535                           ;matrix_keypad.c: 33:     int i;;matrix_keypad.c: 35:     RD3 = 0;
  1536     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1537     01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1538     01E6  1188               	bcf	8,3	;volatile
  1539                           
  1540                           ;matrix_keypad.c: 36:     RD2 = 1;
  1541     01E7  1508               	bsf	8,2	;volatile
  1542                           
  1543                           ;matrix_keypad.c: 37:     RD1 = 1;
  1544     01E8  1488               	bsf	8,1	;volatile
  1545                           
  1546                           ;matrix_keypad.c: 38:     RD0 = 1;
  1547     01E9  1408               	bsf	8,0	;volatile
  1548     01EA                     l1200:
  1549                           
  1550                           ;matrix_keypad.c: 40:     for (i = 100; i--; );
  1551     01EA  3064               	movlw	100
  1552     01EB  00BA               	movwf	scan_keypad@i
  1553     01EC  3000               	movlw	0
  1554     01ED  00BB               	movwf	scan_keypad@i+1
  1555     01EE                     l1202:
  1556     01EE  30FF               	movlw	255
  1557     01EF  07BA               	addwf	scan_keypad@i,f
  1558     01F0  1803               	skipnc
  1559     01F1  0ABB               	incf	scan_keypad@i+1,f
  1560     01F2  30FF               	movlw	255
  1561     01F3  07BB               	addwf	scan_keypad@i+1,f
  1562     01F4  0A3A               	incf	scan_keypad@i,w
  1563     01F5  1D03               	skipz
  1564     01F6  29FB               	goto	u591
  1565     01F7  0A3B               	incf	scan_keypad@i+1,w
  1566     01F8  1D03               	btfss	3,2
  1567     01F9  29FB               	goto	u591
  1568     01FA  29FC               	goto	u590
  1569     01FB                     u591:
  1570     01FB  29EE               	goto	l1202
  1571     01FC                     u590:
  1572     01FC                     l164:
  1573                           
  1574                           ;matrix_keypad.c: 42:     if (RB0 == 0)
  1575     01FC  1806               	btfsc	6,0	;volatile
  1576     01FD  29FF               	goto	u601
  1577     01FE  2A00               	goto	u600
  1578     01FF                     u601:
  1579     01FF  2A02               	goto	l165
  1580     0200                     u600:
  1581     0200                     l1204:
  1582                           
  1583                           ;matrix_keypad.c: 43:     {;matrix_keypad.c: 44:         return 1;
  1584     0200  3001               	movlw	1
  1585     0201  2A87               	goto	l166
  1586     0202                     l165:	
  1587                           ;matrix_keypad.c: 46:     else if (RB1 == 0)
  1588                           
  1589     0202  1886               	btfsc	6,1	;volatile
  1590     0203  2A05               	goto	u611
  1591     0204  2A06               	goto	u610
  1592     0205                     u611:
  1593     0205  2A08               	goto	l168
  1594     0206                     u610:
  1595     0206                     l1210:
  1596                           
  1597                           ;matrix_keypad.c: 47:     {;matrix_keypad.c: 48:         return 2;
  1598     0206  3002               	movlw	2
  1599     0207  2A87               	goto	l166
  1600     0208                     l168:	
  1601                           ;matrix_keypad.c: 50:     else if (RB2 == 0)
  1602                           
  1603     0208  1906               	btfsc	6,2	;volatile
  1604     0209  2A0B               	goto	u621
  1605     020A  2A0C               	goto	u620
  1606     020B                     u621:
  1607     020B  2A0E               	goto	l167
  1608     020C                     u620:
  1609     020C                     l1216:
  1610                           
  1611                           ;matrix_keypad.c: 51:     {;matrix_keypad.c: 52:         return 3;
  1612     020C  3003               	movlw	3
  1613     020D  2A87               	goto	l166
  1614     020E                     l167:
  1615                           
  1616                           ;matrix_keypad.c: 55:     RD3 = 1;
  1617     020E  1588               	bsf	8,3	;volatile
  1618                           
  1619                           ;matrix_keypad.c: 56:     RD2 = 0;
  1620     020F  1108               	bcf	8,2	;volatile
  1621                           
  1622                           ;matrix_keypad.c: 57:     RD1 = 1;
  1623     0210  1488               	bsf	8,1	;volatile
  1624                           
  1625                           ;matrix_keypad.c: 58:     RD0 = 1;
  1626     0211  1408               	bsf	8,0	;volatile
  1627     0212                     l1220:
  1628                           
  1629                           ;matrix_keypad.c: 60:     for (i = 100; i--; );
  1630     0212  3064               	movlw	100
  1631     0213  00BA               	movwf	scan_keypad@i
  1632     0214  3000               	movlw	0
  1633     0215  00BB               	movwf	scan_keypad@i+1
  1634     0216                     l1222:
  1635     0216  30FF               	movlw	255
  1636     0217  07BA               	addwf	scan_keypad@i,f
  1637     0218  1803               	skipnc
  1638     0219  0ABB               	incf	scan_keypad@i+1,f
  1639     021A  30FF               	movlw	255
  1640     021B  07BB               	addwf	scan_keypad@i+1,f
  1641     021C  0A3A               	incf	scan_keypad@i,w
  1642     021D  1D03               	skipz
  1643     021E  2A23               	goto	u631
  1644     021F  0A3B               	incf	scan_keypad@i+1,w
  1645     0220  1D03               	btfss	3,2
  1646     0221  2A23               	goto	u631
  1647     0222  2A24               	goto	u630
  1648     0223                     u631:
  1649     0223  2A16               	goto	l1222
  1650     0224                     u630:
  1651     0224                     l173:
  1652                           
  1653                           ;matrix_keypad.c: 62:     if (RB0 == 0)
  1654     0224  1806               	btfsc	6,0	;volatile
  1655     0225  2A27               	goto	u641
  1656     0226  2A28               	goto	u640
  1657     0227                     u641:
  1658     0227  2A2A               	goto	l174
  1659     0228                     u640:
  1660     0228                     l1224:
  1661                           
  1662                           ;matrix_keypad.c: 63:     {;matrix_keypad.c: 64:         return 4;
  1663     0228  3004               	movlw	4
  1664     0229  2A87               	goto	l166
  1665     022A                     l174:	
  1666                           ;matrix_keypad.c: 66:     else if (RB1 == 0)
  1667                           
  1668     022A  1886               	btfsc	6,1	;volatile
  1669     022B  2A2D               	goto	u651
  1670     022C  2A2E               	goto	u650
  1671     022D                     u651:
  1672     022D  2A30               	goto	l176
  1673     022E                     u650:
  1674     022E                     l1230:
  1675                           
  1676                           ;matrix_keypad.c: 67:     {;matrix_keypad.c: 68:         return 5;
  1677     022E  3005               	movlw	5
  1678     022F  2A87               	goto	l166
  1679     0230                     l176:	
  1680                           ;matrix_keypad.c: 70:     else if (RB2 == 0)
  1681                           
  1682     0230  1906               	btfsc	6,2	;volatile
  1683     0231  2A33               	goto	u661
  1684     0232  2A34               	goto	u660
  1685     0233                     u661:
  1686     0233  2A36               	goto	l175
  1687     0234                     u660:
  1688     0234                     l1236:
  1689                           
  1690                           ;matrix_keypad.c: 71:     {;matrix_keypad.c: 72:         return 6;
  1691     0234  3006               	movlw	6
  1692     0235  2A87               	goto	l166
  1693     0236                     l175:
  1694                           
  1695                           ;matrix_keypad.c: 75:     RD3 = 1;
  1696     0236  1588               	bsf	8,3	;volatile
  1697                           
  1698                           ;matrix_keypad.c: 76:     RD2 = 1;
  1699     0237  1508               	bsf	8,2	;volatile
  1700                           
  1701                           ;matrix_keypad.c: 77:     RD1 = 0;
  1702     0238  1088               	bcf	8,1	;volatile
  1703                           
  1704                           ;matrix_keypad.c: 78:     RD0 = 1;
  1705     0239  1408               	bsf	8,0	;volatile
  1706     023A                     l1240:
  1707                           
  1708                           ;matrix_keypad.c: 80:     for (i = 100; i--; );
  1709     023A  3064               	movlw	100
  1710     023B  00BA               	movwf	scan_keypad@i
  1711     023C  3000               	movlw	0
  1712     023D  00BB               	movwf	scan_keypad@i+1
  1713     023E                     l1242:
  1714     023E  30FF               	movlw	255
  1715     023F  07BA               	addwf	scan_keypad@i,f
  1716     0240  1803               	skipnc
  1717     0241  0ABB               	incf	scan_keypad@i+1,f
  1718     0242  30FF               	movlw	255
  1719     0243  07BB               	addwf	scan_keypad@i+1,f
  1720     0244  0A3A               	incf	scan_keypad@i,w
  1721     0245  1D03               	skipz
  1722     0246  2A4B               	goto	u671
  1723     0247  0A3B               	incf	scan_keypad@i+1,w
  1724     0248  1D03               	btfss	3,2
  1725     0249  2A4B               	goto	u671
  1726     024A  2A4C               	goto	u670
  1727     024B                     u671:
  1728     024B  2A3E               	goto	l1242
  1729     024C                     u670:
  1730     024C                     l181:
  1731                           
  1732                           ;matrix_keypad.c: 82:     if (RB0 == 0)
  1733     024C  1806               	btfsc	6,0	;volatile
  1734     024D  2A4F               	goto	u681
  1735     024E  2A50               	goto	u680
  1736     024F                     u681:
  1737     024F  2A52               	goto	l182
  1738     0250                     u680:
  1739     0250                     l1244:
  1740                           
  1741                           ;matrix_keypad.c: 83:     {;matrix_keypad.c: 84:         return 7;
  1742     0250  3007               	movlw	7
  1743     0251  2A87               	goto	l166
  1744     0252                     l182:	
  1745                           ;matrix_keypad.c: 86:     else if (RB1 == 0)
  1746                           
  1747     0252  1886               	btfsc	6,1	;volatile
  1748     0253  2A55               	goto	u691
  1749     0254  2A56               	goto	u690
  1750     0255                     u691:
  1751     0255  2A58               	goto	l184
  1752     0256                     u690:
  1753     0256                     l1250:
  1754                           
  1755                           ;matrix_keypad.c: 87:     {;matrix_keypad.c: 88:         return 8;
  1756     0256  3008               	movlw	8
  1757     0257  2A87               	goto	l166
  1758     0258                     l184:	
  1759                           ;matrix_keypad.c: 90:     else if (RB2 == 0)
  1760                           
  1761     0258  1906               	btfsc	6,2	;volatile
  1762     0259  2A5B               	goto	u701
  1763     025A  2A5C               	goto	u700
  1764     025B                     u701:
  1765     025B  2A5E               	goto	l183
  1766     025C                     u700:
  1767     025C                     l1256:
  1768                           
  1769                           ;matrix_keypad.c: 91:     {;matrix_keypad.c: 92:         return 9;
  1770     025C  3009               	movlw	9
  1771     025D  2A87               	goto	l166
  1772     025E                     l183:
  1773                           
  1774                           ;matrix_keypad.c: 95:     RD3 = 1;
  1775     025E  1588               	bsf	8,3	;volatile
  1776                           
  1777                           ;matrix_keypad.c: 96:     RD2 = 1;
  1778     025F  1508               	bsf	8,2	;volatile
  1779                           
  1780                           ;matrix_keypad.c: 97:     RD1 = 1;
  1781     0260  1488               	bsf	8,1	;volatile
  1782                           
  1783                           ;matrix_keypad.c: 98:     RD0 = 0;
  1784     0261  1008               	bcf	8,0	;volatile
  1785     0262                     l1260:
  1786                           
  1787                           ;matrix_keypad.c: 100:     for (i = 100; i--; );
  1788     0262  3064               	movlw	100
  1789     0263  00BA               	movwf	scan_keypad@i
  1790     0264  3000               	movlw	0
  1791     0265  00BB               	movwf	scan_keypad@i+1
  1792     0266                     l1262:
  1793     0266  30FF               	movlw	255
  1794     0267  07BA               	addwf	scan_keypad@i,f
  1795     0268  1803               	skipnc
  1796     0269  0ABB               	incf	scan_keypad@i+1,f
  1797     026A  30FF               	movlw	255
  1798     026B  07BB               	addwf	scan_keypad@i+1,f
  1799     026C  0A3A               	incf	scan_keypad@i,w
  1800     026D  1D03               	skipz
  1801     026E  2A73               	goto	u711
  1802     026F  0A3B               	incf	scan_keypad@i+1,w
  1803     0270  1D03               	btfss	3,2
  1804     0271  2A73               	goto	u711
  1805     0272  2A74               	goto	u710
  1806     0273                     u711:
  1807     0273  2A66               	goto	l1262
  1808     0274                     u710:
  1809     0274                     l189:
  1810                           
  1811                           ;matrix_keypad.c: 102:     if (RB0 == 0)
  1812     0274  1806               	btfsc	6,0	;volatile
  1813     0275  2A77               	goto	u721
  1814     0276  2A78               	goto	u720
  1815     0277                     u721:
  1816     0277  2A7A               	goto	l190
  1817     0278                     u720:
  1818     0278                     l1264:
  1819                           
  1820                           ;matrix_keypad.c: 103:     {;matrix_keypad.c: 104:         return '*';
  1821     0278  302A               	movlw	42
  1822     0279  2A87               	goto	l166
  1823     027A                     l190:	
  1824                           ;matrix_keypad.c: 106:     else if (RB1 == 0)
  1825                           
  1826     027A  1886               	btfsc	6,1	;volatile
  1827     027B  2A7D               	goto	u731
  1828     027C  2A7E               	goto	u730
  1829     027D                     u731:
  1830     027D  2A80               	goto	l192
  1831     027E                     u730:
  1832     027E                     l1270:
  1833                           
  1834                           ;matrix_keypad.c: 107:     {;matrix_keypad.c: 108:         return 0;
  1835     027E  3000               	movlw	0
  1836     027F  2A87               	goto	l166
  1837     0280                     l192:	
  1838                           ;matrix_keypad.c: 110:     else if (RB2 == 0)
  1839                           
  1840     0280  1906               	btfsc	6,2	;volatile
  1841     0281  2A83               	goto	u741
  1842     0282  2A84               	goto	u740
  1843     0283                     u741:
  1844     0283  2A86               	goto	l1280
  1845     0284                     u740:
  1846     0284                     l1276:
  1847                           
  1848                           ;matrix_keypad.c: 111:     {;matrix_keypad.c: 112:         return '#';
  1849     0284  3023               	movlw	35
  1850     0285  2A87               	goto	l166
  1851     0286                     l1280:
  1852                           
  1853                           ;matrix_keypad.c: 115:     return 0xFF;
  1854     0286  30FF               	movlw	255
  1855     0287                     l166:
  1856     0287  0008               	return
  1857     0288                     __end_of_scan_keypad:
  1858                           
  1859                           	psect	text3
  1860     04E2                     __ptext3:	
  1861 ;; *************** function _init_config *****************
  1862 ;; Defined at:
  1863 ;;		line 35 in file "main.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;		None
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0, pclath, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1877 ;;      Params:         0       0       0       0       0
  1878 ;;      Locals:         0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0
  1880 ;;      Totals:         0       0       0       0       0
  1881 ;;Total ram usage:        0 bytes
  1882 ;; Hardware stack levels used: 1
  1883 ;; Hardware stack levels required when called: 5
  1884 ;; This function calls:
  1885 ;;		_init_clcd
  1886 ;;		_init_matrix_keypad
  1887 ;;		_init_timer0
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893     04E2                     _init_config:	
  1894                           ;psect for function _init_config
  1895                           
  1896     04E2                     l1304:	
  1897                           ;incstack = 0
  1898                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1899                           
  1900                           
  1901                           ;main.c: 36:     init_config();
  1902     04E2  1683               	bsf	3,5	;RP0=1, select bank1
  1903     04E3  1303               	bcf	3,6	;RP1=0, select bank1
  1904     04E4  1386               	bcf	6,7	;volatile
  1905     04E5                     l1306:
  1906                           
  1907                           ;main.c: 37: 
  1908     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1909     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1910     04E7  0806               	movf	6,w	;volatile
  1911     04E8  397F               	andlw	127
  1912     04E9  0086               	movwf	6	;volatile
  1913     04EA                     l1308:
  1914                           
  1915                           ;main.c: 38:     while (1) {
  1916     04EA  178B               	bsf	11,7	;volatile
  1917     04EB                     l1310:
  1918                           
  1919                           ;main.c: 39: 
  1920     04EB  120A  118A  2520  120A  118A  	fcall	_init_clcd
  1921     04F0                     l1312:
  1922                           
  1923                           ;main.c: 40:         key = read_matrix_keypad(1);
  1924     04F0  120A  118A  2510  120A  118A  	fcall	_init_matrix_keypad
  1925     04F5                     l1314:
  1926                           
  1927                           ;main.c: 41: 
  1928     04F5  120A  118A  252B  120A  118A  	fcall	_init_timer0
  1929     04FA                     l38:
  1930     04FA  0008               	return
  1931     04FB                     __end_of_init_config:
  1932                           
  1933                           	psect	text4
  1934     052B                     __ptext4:	
  1935 ;; *************** function _init_timer0 *****************
  1936 ;; Defined at:
  1937 ;;		line 10 in file "timer.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1951 ;;      Params:         0       0       0       0       0
  1952 ;;      Locals:         0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0
  1954 ;;      Totals:         0       0       0       0       0
  1955 ;;Total ram usage:        0 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; Hardware stack levels required when called: 2
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_init_config
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965     052B                     _init_timer0:	
  1966                           ;psect for function _init_timer0
  1967                           
  1968     052B                     l1194:	
  1969                           ;incstack = 0
  1970                           ; Regs used in _init_timer0: [wreg]
  1971                           
  1972                           
  1973                           ;timer.c: 13:     T0CS = 0;
  1974     052B  1683               	bsf	3,5	;RP0=1, select bank1
  1975     052C  1303               	bcf	3,6	;RP1=0, select bank1
  1976     052D  1281               	bcf	1,5	;volatile
  1977                           
  1978                           ;timer.c: 16:     PSA = 1;
  1979     052E  1581               	bsf	1,3	;volatile
  1980     052F                     l1196:
  1981                           
  1982                           ;timer.c: 18:     TMR0 = 6;
  1983     052F  3006               	movlw	6
  1984     0530  1283               	bcf	3,5	;RP0=0, select bank0
  1985     0531  1303               	bcf	3,6	;RP1=0, select bank0
  1986     0532  0081               	movwf	1	;volatile
  1987     0533                     l136:
  1988     0533  0008               	return
  1989     0534                     __end_of_init_timer0:
  1990                           
  1991                           	psect	text5
  1992     0510                     __ptext5:	
  1993 ;; *************** function _init_matrix_keypad *****************
  1994 ;; Defined at:
  1995 ;;		line 11 in file "matrix_keypad.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2009 ;;      Params:         0       0       0       0       0
  2010 ;;      Locals:         0       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0
  2012 ;;      Totals:         0       0       0       0       0
  2013 ;;Total ram usage:        0 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; Hardware stack levels required when called: 2
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_init_config
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023     0510                     _init_matrix_keypad:	
  2024                           ;psect for function _init_matrix_keypad
  2025                           
  2026     0510                     l1182:	
  2027                           ;incstack = 0
  2028                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  2029                           
  2030                           
  2031                           ;matrix_keypad.c: 15:     TRISB = TRISB | 0x07;
  2032     0510  1683               	bsf	3,5	;RP0=1, select bank1
  2033     0511  1303               	bcf	3,6	;RP1=0, select bank1
  2034     0512  0806               	movf	6,w	;volatile
  2035     0513  3807               	iorlw	7
  2036     0514  0086               	movwf	6	;volatile
  2037                           
  2038                           ;matrix_keypad.c: 19:     TRISD = TRISD & 0xF0;
  2039     0515  0808               	movf	8,w	;volatile
  2040     0516  39F0               	andlw	240
  2041     0517  0088               	movwf	8	;volatile
  2042     0518                     l1184:
  2043                           
  2044                           ;matrix_keypad.c: 22:     nRBPU = 0;
  2045     0518  1381               	bcf	1,7	;volatile
  2046     0519                     l1186:
  2047                           
  2048                           ;matrix_keypad.c: 25:     RD3 = 1;
  2049     0519  1283               	bcf	3,5	;RP0=0, select bank0
  2050     051A  1303               	bcf	3,6	;RP1=0, select bank0
  2051     051B  1588               	bsf	8,3	;volatile
  2052     051C                     l1188:
  2053                           
  2054                           ;matrix_keypad.c: 26:     RD2 = 1;
  2055     051C  1508               	bsf	8,2	;volatile
  2056     051D                     l1190:
  2057                           
  2058                           ;matrix_keypad.c: 27:     RD1 = 1;
  2059     051D  1488               	bsf	8,1	;volatile
  2060     051E                     l1192:
  2061                           
  2062                           ;matrix_keypad.c: 28:     RD0 = 1;
  2063     051E  1408               	bsf	8,0	;volatile
  2064     051F                     l159:
  2065     051F  0008               	return
  2066     0520                     __end_of_init_matrix_keypad:
  2067                           
  2068                           	psect	text6
  2069     0520                     __ptext6:	
  2070 ;; *************** function _init_clcd *****************
  2071 ;; Defined at:
  2072 ;;		line 51 in file "clcd.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, pclath, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2086 ;;      Params:         0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0
  2089 ;;      Totals:         0       0       0       0       0
  2090 ;;Total ram usage:        0 bytes
  2091 ;; Hardware stack levels used: 1
  2092 ;; Hardware stack levels required when called: 4
  2093 ;; This function calls:
  2094 ;;		_init_display_controller
  2095 ;; This function is called by:
  2096 ;;		_init_config
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100     0520                     _init_clcd:	
  2101                           ;psect for function _init_clcd
  2102                           
  2103     0520                     l1174:	
  2104                           ;incstack = 0
  2105                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  2106                           
  2107                           
  2108                           ;clcd.c: 54:     TRISD = 0x00;
  2109     0520  1683               	bsf	3,5	;RP0=1, select bank1
  2110     0521  1303               	bcf	3,6	;RP1=0, select bank1
  2111     0522  0188               	clrf	8	;volatile
  2112     0523                     l1176:
  2113                           
  2114                           ;clcd.c: 57:     TRISE2 = 0;
  2115     0523  1109               	bcf	9,2	;volatile
  2116     0524                     l1178:
  2117                           
  2118                           ;clcd.c: 58:     TRISE1 = 0;
  2119     0524  1089               	bcf	9,1	;volatile
  2120     0525                     l1180:
  2121                           
  2122                           ;clcd.c: 60:     init_display_controller();
  2123     0525  120A  118A  2288  120A  118A  	fcall	_init_display_controller
  2124     052A                     l101:
  2125     052A  0008               	return
  2126     052B                     __end_of_init_clcd:
  2127                           
  2128                           	psect	text7
  2129     0288                     __ptext7:	
  2130 ;; *************** function _init_display_controller *****************
  2131 ;; Defined at:
  2132 ;;		line 28 in file "clcd.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, status,2, status,0, pclath, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2146 ;;      Params:         0       0       0       0       0
  2147 ;;      Locals:         0       0       0       0       0
  2148 ;;      Temps:          0       2       0       0       0
  2149 ;;      Totals:         0       2       0       0       0
  2150 ;;Total ram usage:        2 bytes
  2151 ;; Hardware stack levels used: 1
  2152 ;; Hardware stack levels required when called: 3
  2153 ;; This function calls:
  2154 ;;		_clcd_write@clcd$F103
  2155 ;; This function is called by:
  2156 ;;		_init_clcd
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160     0288                     _init_display_controller:	
  2161                           ;psect for function _init_display_controller
  2162                           
  2163     0288                     l1150:	
  2164                           ;incstack = 0
  2165                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  2166                           
  2167                           
  2168                           ;clcd.c: 31:     _delay((unsigned long)((30)*(20000000/4000.0)));
  2169     0288  30C3               	movlw	195
  2170     0289  1283               	bcf	3,5	;RP0=0, select bank0
  2171     028A  1303               	bcf	3,6	;RP1=0, select bank0
  2172     028B  00BF               	movwf	??_init_display_controller+1
  2173     028C  30CC               	movlw	204
  2174     028D  00BE               	movwf	??_init_display_controller
  2175     028E                     u1117:
  2176     028E  0BBE               	decfsz	??_init_display_controller,f
  2177     028F  2A8E               	goto	u1117
  2178     0290  0BBF               	decfsz	??_init_display_controller+1,f
  2179     0291  2A8E               	goto	u1117
  2180     0292  0000               	nop
  2181     0293                     l1152:
  2182                           
  2183                           ;clcd.c: 34:     clcd_write(0x33, 0);
  2184     0293  1283               	bcf	3,5	;RP0=0, select bank0
  2185     0294  1303               	bcf	3,6	;RP1=0, select bank0
  2186     0295  01BA               	clrf	clcd_write@clcd$F103@mode
  2187     0296  3033               	movlw	51
  2188     0297  120A  118A  2414  120A  118A  	fcall	_clcd_write@clcd$F103
  2189     029C                     l1154:
  2190                           
  2191                           ;clcd.c: 35:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2192     029C  301B               	movlw	27
  2193     029D  1283               	bcf	3,5	;RP0=0, select bank0
  2194     029E  1303               	bcf	3,6	;RP1=0, select bank0
  2195     029F  00BF               	movwf	??_init_display_controller+1
  2196     02A0  309D               	movlw	157
  2197     02A1  00BE               	movwf	??_init_display_controller
  2198     02A2                     u1127:
  2199     02A2  0BBE               	decfsz	??_init_display_controller,f
  2200     02A3  2AA2               	goto	u1127
  2201     02A4  0BBF               	decfsz	??_init_display_controller+1,f
  2202     02A5  2AA2               	goto	u1127
  2203     02A6  2AA7               	nop2
  2204                           
  2205                           ;clcd.c: 36:     clcd_write(0x33, 0);
  2206     02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2207     02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2208     02A9  01BA               	clrf	clcd_write@clcd$F103@mode
  2209     02AA  3033               	movlw	51
  2210     02AB  120A  118A  2414  120A  118A  	fcall	_clcd_write@clcd$F103
  2211     02B0                     l1156:
  2212                           
  2213                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2214     02B0  30A5               	movlw	165
  2215     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2216     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2217     02B3  00BE               	movwf	??_init_display_controller
  2218     02B4                     u1137:
  2219     02B4  0BBE               	decfsz	??_init_display_controller,f
  2220     02B5  2AB4               	goto	u1137
  2221     02B6  2AB7               	nop2
  2222     02B7                     l1158:
  2223                           
  2224                           ;clcd.c: 38:     clcd_write(0x33, 0);
  2225     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2226     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2227     02B9  01BA               	clrf	clcd_write@clcd$F103@mode
  2228     02BA  3033               	movlw	51
  2229     02BB  120A  118A  2414  120A  118A  	fcall	_clcd_write@clcd$F103
  2230     02C0                     l1160:
  2231                           
  2232                           ;clcd.c: 39:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  2233     02C0  2AC1               	nop2	;2 cycle nop
  2234     02C1  2AC2               	nop2	;2 cycle nop
  2235     02C2  0000               	nop
  2236     02C3                     l1162:
  2237                           
  2238                           ;clcd.c: 41:     clcd_write(0x02, 0);
  2239     02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2240     02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2241     02C5  01BA               	clrf	clcd_write@clcd$F103@mode
  2242     02C6  3002               	movlw	2
  2243     02C7  120A  118A  2414  120A  118A  	fcall	_clcd_write@clcd$F103
  2244     02CC                     l1164:
  2245                           
  2246                           ;clcd.c: 42:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2247     02CC  30A5               	movlw	165
  2248     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2249     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2250     02CF  00BE               	movwf	??_init_display_controller
  2251     02D0                     u1147:
  2252     02D0  0BBE               	decfsz	??_init_display_controller,f
  2253     02D1  2AD0               	goto	u1147
  2254     02D2  2AD3               	nop2
  2255                           
  2256                           ;clcd.c: 43:     clcd_write(0x28, 0);
  2257     02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2258     02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2259     02D5  01BA               	clrf	clcd_write@clcd$F103@mode
  2260     02D6  3028               	movlw	40
  2261     02D7  120A  118A  2414  120A  118A  	fcall	_clcd_write@clcd$F103
  2262     02DC                     l1166:
  2263                           
  2264                           ;clcd.c: 44:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2265     02DC  30A5               	movlw	165
  2266     02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2267     02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2268     02DF  00BE               	movwf	??_init_display_controller
  2269     02E0                     u1157:
  2270     02E0  0BBE               	decfsz	??_init_display_controller,f
  2271     02E1  2AE0               	goto	u1157
  2272     02E2  2AE3               	nop2
  2273     02E3                     l1168:
  2274                           
  2275                           ;clcd.c: 45:     clcd_write(0x01, 0);
  2276     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2277     02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2278     02E5  01BA               	clrf	clcd_write@clcd$F103@mode
  2279     02E6  3001               	movlw	1
  2280     02E7  120A  118A  2414  120A  118A  	fcall	_clcd_write@clcd$F103
  2281                           
  2282                           ;clcd.c: 46:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2283     02EC  3004               	movlw	4
  2284     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2285     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2286     02EF  00BF               	movwf	??_init_display_controller+1
  2287     02F0  303D               	movlw	61
  2288     02F1  00BE               	movwf	??_init_display_controller
  2289     02F2                     u1167:
  2290     02F2  0BBE               	decfsz	??_init_display_controller,f
  2291     02F3  2AF2               	goto	u1167
  2292     02F4  0BBF               	decfsz	??_init_display_controller+1,f
  2293     02F5  2AF2               	goto	u1167
  2294     02F6                     l1170:
  2295                           
  2296                           ;clcd.c: 47:     clcd_write(0x0C, 0);
  2297     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2298     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2299     02F8  01BA               	clrf	clcd_write@clcd$F103@mode
  2300     02F9  300C               	movlw	12
  2301     02FA  120A  118A  2414  120A  118A  	fcall	_clcd_write@clcd$F103
  2302     02FF                     l1172:
  2303                           
  2304                           ;clcd.c: 48:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2305     02FF  30A5               	movlw	165
  2306     0300  1283               	bcf	3,5	;RP0=0, select bank0
  2307     0301  1303               	bcf	3,6	;RP1=0, select bank0
  2308     0302  00BE               	movwf	??_init_display_controller
  2309     0303                     u1177:
  2310     0303  0BBE               	decfsz	??_init_display_controller,f
  2311     0304  2B03               	goto	u1177
  2312     0305  2B06               	nop2
  2313     0306                     l98:
  2314     0306  0008               	return
  2315     0307                     __end_of_init_display_controller:
  2316                           
  2317                           	psect	text8
  2318     03D6                     __ptext8:	
  2319 ;; *************** function _clcd_write *****************
  2320 ;; Defined at:
  2321 ;;		line 18 in file "main.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  byte            1    wreg     unsigned char 
  2324 ;;  mode            1    0[BANK0 ] unsigned char 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  byte            1    3[BANK0 ] unsigned char 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2336 ;;      Params:         0       1       0       0       0
  2337 ;;      Locals:         0       1       0       0       0
  2338 ;;      Temps:          0       2       0       0       0
  2339 ;;      Totals:         0       4       0       0       0
  2340 ;;Total ram usage:        4 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 2
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_main
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350     03D6                     _clcd_write:	
  2351                           ;psect for function _clcd_write
  2352                           
  2353                           
  2354                           ;incstack = 0
  2355                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  2356                           ;clcd_write@byte stored from wreg
  2357     03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2358     03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2359     03D8  00BD               	movwf	clcd_write@byte
  2360     03D9                     l1284:
  2361                           
  2362                           ;main.c: 18: ;main.c: 19: static void init_config(void) {;main.c: 20:     TRISB7 = 0;
  2363     03D9  183A               	btfsc	clcd_write@mode,0
  2364     03DA  2BDC               	goto	u751
  2365     03DB  2BE0               	goto	u750
  2366     03DC                     u751:
  2367     03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2368     03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2369     03DE  1509               	bsf	9,2	;volatile
  2370     03DF  2BE3               	goto	u764
  2371     03E0                     u750:
  2372     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2373     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2374     03E2  1109               	bcf	9,2	;volatile
  2375     03E3                     u764:
  2376     03E3                     l1286:
  2377                           
  2378                           ;main.c: 22:     GIE = 1;
  2379     03E3  083D               	movf	clcd_write@byte,w
  2380     03E4  39F0               	andlw	240
  2381     03E5  0088               	movwf	8	;volatile
  2382     03E6                     l1288:
  2383                           
  2384                           ;main.c: 23:     init_clcd();
  2385     03E6  1489               	bsf	9,1	;volatile
  2386     03E7                     l1290:
  2387                           
  2388                           ;main.c: 24:     init_matrix_keypad();
  2389     03E7  30A5               	movlw	165
  2390     03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2391     03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2392     03EA  00BB               	movwf	??_clcd_write
  2393     03EB                     u1187:
  2394     03EB  0BBB               	decfsz	??_clcd_write,f
  2395     03EC  2BEB               	goto	u1187
  2396     03ED  2BEE               	nop2
  2397     03EE                     l1292:
  2398                           
  2399                           ;main.c: 25:     init_timer0();
  2400     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2401     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2402     03F0  1089               	bcf	9,1	;volatile
  2403     03F1                     l1294:
  2404                           
  2405                           ;main.c: 27: }
  2406     03F1  083D               	movf	clcd_write@byte,w
  2407     03F2  390F               	andlw	15
  2408     03F3  00BB               	movwf	??_clcd_write
  2409     03F4  3003               	movlw	3
  2410     03F5                     u775:
  2411     03F5  1003               	clrc
  2412     03F6  0DBB               	rlf	??_clcd_write,f
  2413     03F7  3EFF               	addlw	-1
  2414     03F8  1D03               	skipz
  2415     03F9  2BF5               	goto	u775
  2416     03FA  1003               	clrc
  2417     03FB  0D3B               	rlf	??_clcd_write,w
  2418     03FC  0088               	movwf	8	;volatile
  2419     03FD                     l1296:
  2420                           
  2421                           ;main.c: 28: 
  2422     03FD  1489               	bsf	9,1	;volatile
  2423     03FE                     l1298:
  2424                           
  2425                           ;main.c: 29: void main(void) {
  2426     03FE  30A5               	movlw	165
  2427     03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2428     0400  1303               	bcf	3,6	;RP1=0, select bank0
  2429     0401  00BB               	movwf	??_clcd_write
  2430     0402                     u1197:
  2431     0402  0BBB               	decfsz	??_clcd_write,f
  2432     0403  2C02               	goto	u1197
  2433     0404  2C05               	nop2
  2434     0405                     l1300:
  2435                           
  2436                           ;main.c: 30:     unsigned char key,cur_key;
  2437     0405  1283               	bcf	3,5	;RP0=0, select bank0
  2438     0406  1303               	bcf	3,6	;RP1=0, select bank0
  2439     0407  1089               	bcf	9,1	;volatile
  2440     0408                     l1302:
  2441                           
  2442                           ;main.c: 32:     static int flag1 = 0, count = 0, count1 = 0, attempt, once = 1;
  2443     0408  301B               	movlw	27
  2444     0409  1283               	bcf	3,5	;RP0=0, select bank0
  2445     040A  1303               	bcf	3,6	;RP1=0, select bank0
  2446     040B  00BC               	movwf	??_clcd_write+1
  2447     040C  309D               	movlw	157
  2448     040D  00BB               	movwf	??_clcd_write
  2449     040E                     u1207:
  2450     040E  0BBB               	decfsz	??_clcd_write,f
  2451     040F  2C0E               	goto	u1207
  2452     0410  0BBC               	decfsz	??_clcd_write+1,f
  2453     0411  2C0E               	goto	u1207
  2454     0412  2C13               	nop2
  2455     0413                     l35:
  2456     0413  0008               	return
  2457     0414                     __end_of_clcd_write:
  2458                           
  2459                           	psect	text9
  2460     04FB                     __ptext9:	
  2461 ;; *************** function _clcd_putch *****************
  2462 ;; Defined at:
  2463 ;;		line 63 in file "clcd.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  data            1    wreg     const unsigned char 
  2466 ;;  addr            1    4[BANK0 ] unsigned char 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  data            1    5[BANK0 ] const unsigned char 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0, pclath, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2478 ;;      Params:         0       1       0       0       0
  2479 ;;      Locals:         0       1       0       0       0
  2480 ;;      Temps:          0       0       0       0       0
  2481 ;;      Totals:         0       2       0       0       0
  2482 ;;Total ram usage:        2 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; Hardware stack levels required when called: 3
  2485 ;; This function calls:
  2486 ;;		_clcd_write@clcd$F103
  2487 ;; This function is called by:
  2488 ;;		_main
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492     04FB                     _clcd_putch:	
  2493                           ;psect for function _clcd_putch
  2494                           
  2495                           
  2496                           ;incstack = 0
  2497                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  2498                           ;clcd_putch@data stored from wreg
  2499     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2500     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2501     04FD  00BF               	movwf	clcd_putch@data
  2502     04FE                     l1346:
  2503                           
  2504                           ;clcd.c: 63: void clcd_putch(const char data, unsigned char addr);clcd.c: 64: {;clcd.c: 
      +                          65:     clcd_write(addr, 0);
  2505     04FE  01BA               	clrf	clcd_write@clcd$F103@mode
  2506     04FF  083E               	movf	clcd_putch@addr,w
  2507     0500  120A  118A  2414  120A  118A  	fcall	_clcd_write@clcd$F103
  2508                           
  2509                           ;clcd.c: 66:     clcd_write(data, 1);
  2510     0505  1283               	bcf	3,5	;RP0=0, select bank0
  2511     0506  1303               	bcf	3,6	;RP1=0, select bank0
  2512     0507  01BA               	clrf	clcd_write@clcd$F103@mode
  2513     0508  0ABA               	incf	clcd_write@clcd$F103@mode,f
  2514     0509  083F               	movf	clcd_putch@data,w
  2515     050A  120A  118A  2414  120A  118A  	fcall	_clcd_write@clcd$F103
  2516     050F                     l104:
  2517     050F  0008               	return
  2518     0510                     __end_of_clcd_putch:
  2519                           
  2520                           	psect	text10
  2521     0488                     __ptext10:	
  2522 ;; *************** function _clcd_print *****************
  2523 ;; Defined at:
  2524 ;;		line 69 in file "clcd.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  str             2    4[BANK0 ] PTR const unsigned char 
  2527 ;;		 -> STR_6(15), STR_5(17), STR_4(16), STR_3(8), 
  2528 ;;		 -> STR_2(17), STR_1(15), main@ptr(2), 
  2529 ;;  addr            1    6[BANK0 ] unsigned char 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2541 ;;      Params:         0       3       0       0       0
  2542 ;;      Locals:         0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0
  2544 ;;      Totals:         0       3       0       0       0
  2545 ;;Total ram usage:        3 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 3
  2548 ;; This function calls:
  2549 ;;		_clcd_write@clcd$F103
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555     0488                     _clcd_print:	
  2556                           ;psect for function _clcd_print
  2557                           
  2558     0488                     l1348:	
  2559                           ;incstack = 0
  2560                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2561                           
  2562                           
  2563                           ;clcd.c: 69: void clcd_print(const char *str, unsigned char addr);clcd.c: 70: {;clcd.c: 
      +                          71:     clcd_write(addr, 0);
  2564     0488  1283               	bcf	3,5	;RP0=0, select bank0
  2565     0489  1303               	bcf	3,6	;RP1=0, select bank0
  2566     048A  01BA               	clrf	clcd_write@clcd$F103@mode
  2567     048B  0840               	movf	clcd_print@addr,w
  2568     048C  120A  118A  2414  120A  118A  	fcall	_clcd_write@clcd$F103
  2569                           
  2570                           ;clcd.c: 73:     while (*str != '\0')
  2571     0491  2CAA               	goto	l1354
  2572     0492                     l1350:
  2573                           
  2574                           ;clcd.c: 74:     {;clcd.c: 75:         clcd_write(*str, 1);
  2575     0492  01BA               	clrf	clcd_write@clcd$F103@mode
  2576     0493  0ABA               	incf	clcd_write@clcd$F103@mode,f
  2577     0494  083F               	movf	clcd_print@str+1,w
  2578     0495  00FF               	movwf	btemp+1
  2579     0496  083E               	movf	clcd_print@str,w
  2580     0497  0084               	movwf	4
  2581     0498  120A  118A  2307  120A  118A  	fcall	stringtab
  2582     049D  120A  118A  2414  120A  118A  	fcall	_clcd_write@clcd$F103
  2583     04A2                     l1352:
  2584                           
  2585                           ;clcd.c: 76:         str++;
  2586     04A2  3001               	movlw	1
  2587     04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2588     04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2589     04A5  07BE               	addwf	clcd_print@str,f
  2590     04A6  1803               	skipnc
  2591     04A7  0ABF               	incf	clcd_print@str+1,f
  2592     04A8  3000               	movlw	0
  2593     04A9  07BF               	addwf	clcd_print@str+1,f
  2594     04AA                     l1354:
  2595                           
  2596                           ;clcd.c: 73:     while (*str != '\0')
  2597     04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2598     04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2599     04AC  083F               	movf	clcd_print@str+1,w
  2600     04AD  00FF               	movwf	btemp+1
  2601     04AE  083E               	movf	clcd_print@str,w
  2602     04AF  0084               	movwf	4
  2603     04B0  120A  118A  2307  120A  118A  	fcall	stringtab
  2604     04B5  3A00               	xorlw	0
  2605     04B6  1D03               	skipz
  2606     04B7  2CB9               	goto	u821
  2607     04B8  2CBA               	goto	u820
  2608     04B9                     u821:
  2609     04B9  2C92               	goto	l1350
  2610     04BA                     u820:
  2611     04BA                     l110:
  2612     04BA  0008               	return
  2613     04BB                     __end_of_clcd_print:
  2614                           
  2615                           	psect	text11
  2616     0414                     __ptext11:	
  2617 ;; *************** function _clcd_write@clcd$F103 *****************
  2618 ;; Defined at:
  2619 ;;		line 11 in file "clcd.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  byte            1    wreg     unsigned char 
  2622 ;;  mode            1    0[BANK0 ] unsigned char 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  byte            1    3[BANK0 ] unsigned char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2, status,0
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2634 ;;      Params:         0       1       0       0       0
  2635 ;;      Locals:         0       1       0       0       0
  2636 ;;      Temps:          0       2       0       0       0
  2637 ;;      Totals:         0       4       0       0       0
  2638 ;;Total ram usage:        4 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 2
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_init_display_controller
  2645 ;;		_clcd_putch
  2646 ;;		_clcd_print
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650     0414                     _clcd_write@clcd$F103:	
  2651                           ;psect for function _clcd_write@clcd$F103
  2652                           
  2653                           
  2654                           ;incstack = 0
  2655                           ; Regs used in _clcd_write@clcd$F103: [wreg+status,2+status,0]
  2656                           ;clcd_write@clcd$F103@byte stored from wreg
  2657     0414  1283               	bcf	3,5	;RP0=0, select bank0
  2658     0415  1303               	bcf	3,6	;RP1=0, select bank0
  2659     0416  00BD               	movwf	clcd_write@clcd$F103@byte
  2660     0417                     l1130:
  2661                           
  2662                           ;clcd.c: 11: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 12: 
      +                          {;clcd.c: 13:     RE2 = mode;
  2663     0417  183A               	btfsc	clcd_write@clcd$F103@mode,0
  2664     0418  2C1A               	goto	u561
  2665     0419  2C1E               	goto	u560
  2666     041A                     u561:
  2667     041A  1283               	bcf	3,5	;RP0=0, select bank0
  2668     041B  1303               	bcf	3,6	;RP1=0, select bank0
  2669     041C  1509               	bsf	9,2	;volatile
  2670     041D  2C21               	goto	u574
  2671     041E                     u560:
  2672     041E  1283               	bcf	3,5	;RP0=0, select bank0
  2673     041F  1303               	bcf	3,6	;RP1=0, select bank0
  2674     0420  1109               	bcf	9,2	;volatile
  2675     0421                     u574:
  2676     0421                     l1132:
  2677                           
  2678                           ;clcd.c: 15:     PORTD = byte & 0xF0;
  2679     0421  083D               	movf	clcd_write@clcd$F103@byte,w
  2680     0422  39F0               	andlw	240
  2681     0423  0088               	movwf	8	;volatile
  2682     0424                     l1134:
  2683                           
  2684                           ;clcd.c: 16:     RE1 = 1;
  2685     0424  1489               	bsf	9,1	;volatile
  2686     0425                     l1136:
  2687                           
  2688                           ;clcd.c: 17:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2689     0425  30A5               	movlw	165
  2690     0426  1283               	bcf	3,5	;RP0=0, select bank0
  2691     0427  1303               	bcf	3,6	;RP1=0, select bank0
  2692     0428  00BB               	movwf	??_clcd_write@clcd$F103
  2693     0429                     u1217:
  2694     0429  0BBB               	decfsz	??_clcd_write@clcd$F103,f
  2695     042A  2C29               	goto	u1217
  2696     042B  2C2C               	nop2
  2697     042C                     l1138:
  2698                           
  2699                           ;clcd.c: 18:     RE1 = 0;
  2700     042C  1283               	bcf	3,5	;RP0=0, select bank0
  2701     042D  1303               	bcf	3,6	;RP1=0, select bank0
  2702     042E  1089               	bcf	9,1	;volatile
  2703     042F                     l1140:
  2704                           
  2705                           ;clcd.c: 20:     PORTD = (byte & 0x0F) << 4;
  2706     042F  083D               	movf	clcd_write@clcd$F103@byte,w
  2707     0430  390F               	andlw	15
  2708     0431  00BB               	movwf	??_clcd_write@clcd$F103
  2709     0432  3003               	movlw	3
  2710     0433                     u585:
  2711     0433  1003               	clrc
  2712     0434  0DBB               	rlf	??_clcd_write@clcd$F103,f
  2713     0435  3EFF               	addlw	-1
  2714     0436  1D03               	skipz
  2715     0437  2C33               	goto	u585
  2716     0438  1003               	clrc
  2717     0439  0D3B               	rlf	??_clcd_write@clcd$F103,w
  2718     043A  0088               	movwf	8	;volatile
  2719     043B                     l1142:
  2720                           
  2721                           ;clcd.c: 21:     RE1 = 1;
  2722     043B  1489               	bsf	9,1	;volatile
  2723     043C                     l1144:
  2724                           
  2725                           ;clcd.c: 22:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2726     043C  30A5               	movlw	165
  2727     043D  1283               	bcf	3,5	;RP0=0, select bank0
  2728     043E  1303               	bcf	3,6	;RP1=0, select bank0
  2729     043F  00BB               	movwf	??_clcd_write@clcd$F103
  2730     0440                     u1227:
  2731     0440  0BBB               	decfsz	??_clcd_write@clcd$F103,f
  2732     0441  2C40               	goto	u1227
  2733     0442  2C43               	nop2
  2734     0443                     l1146:
  2735                           
  2736                           ;clcd.c: 23:     RE1 = 0;
  2737     0443  1283               	bcf	3,5	;RP0=0, select bank0
  2738     0444  1303               	bcf	3,6	;RP1=0, select bank0
  2739     0445  1089               	bcf	9,1	;volatile
  2740     0446                     l1148:
  2741                           
  2742                           ;clcd.c: 25:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2743     0446  301B               	movlw	27
  2744     0447  1283               	bcf	3,5	;RP0=0, select bank0
  2745     0448  1303               	bcf	3,6	;RP1=0, select bank0
  2746     0449  00BC               	movwf	??_clcd_write@clcd$F103+1
  2747     044A  309D               	movlw	157
  2748     044B  00BB               	movwf	??_clcd_write@clcd$F103
  2749     044C                     u1237:
  2750     044C  0BBB               	decfsz	??_clcd_write@clcd$F103,f
  2751     044D  2C4C               	goto	u1237
  2752     044E  0BBC               	decfsz	??_clcd_write@clcd$F103+1,f
  2753     044F  2C4C               	goto	u1237
  2754     0450  2C51               	nop2
  2755     0451                     l95:
  2756     0451  0008               	return
  2757     0452                     __end_of_clcd_write@clcd$F103:
  2758                           
  2759                           	psect	text12
  2760     0452                     __ptext12:	
  2761 ;; *************** function _isr *****************
  2762 ;; Defined at:
  2763 ;;		line 11 in file "isr.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2777 ;;      Params:         0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0
  2779 ;;      Temps:          3       0       0       0       0
  2780 ;;      Totals:         3       0       0       0       0
  2781 ;;Total ram usage:        3 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 1
  2784 ;; This function calls:
  2785 ;;		___awdiv
  2786 ;; This function is called by:
  2787 ;;		Interrupt level 1
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791     0452                     _isr:	
  2792                           ;psect for function _isr
  2793                           
  2794     0452                     i1l1500:
  2795                           
  2796                           ;isr.c: 13:     static unsigned int count = 0;;isr.c: 15:     if (TMR0IF == 1)
  2797     0452  1D0B               	btfss	11,2	;volatile
  2798     0453  2C55               	goto	u109_21
  2799     0454  2C56               	goto	u109_20
  2800     0455                     u109_21:
  2801     0455  2C7F               	goto	i1l127
  2802     0456                     u109_20:
  2803     0456                     i1l1502:
  2804                           
  2805                           ;isr.c: 16:     {;isr.c: 18:         TMR0 = TMR0 + 6 + 2;
  2806     0456  1283               	bcf	3,5	;RP0=0, select bank0
  2807     0457  1303               	bcf	3,6	;RP1=0, select bank0
  2808     0458  0801               	movf	1,w	;volatile
  2809     0459  3E08               	addlw	8
  2810     045A  0081               	movwf	1	;volatile
  2811     045B                     i1l1504:
  2812                           
  2813                           ;isr.c: 20:         if (++count == (20000/sigma))
  2814     045B  0839               	movf	_sigma+1,w
  2815     045C  00F1               	movwf	___awdiv@divisor+1
  2816     045D  0838               	movf	_sigma,w
  2817     045E  00F0               	movwf	___awdiv@divisor
  2818     045F  3020               	movlw	32
  2819     0460  00F2               	movwf	___awdiv@dividend
  2820     0461  304E               	movlw	78
  2821     0462  00F3               	movwf	___awdiv@dividend+1
  2822     0463  120A  118A  236F  120A  118A  	fcall	___awdiv
  2823     0468  3001               	movlw	1
  2824     0469  07FB               	addwf	isr@count,f
  2825     046A  1803               	skipnc
  2826     046B  0AFC               	incf	isr@count+1,f
  2827     046C  3000               	movlw	0
  2828     046D  07FC               	addwf	isr@count+1,f
  2829     046E  0871               	movf	?___awdiv+1,w
  2830     046F  067C               	xorwf	isr@count+1,w
  2831     0470  1D03               	skipz
  2832     0471  2C74               	goto	u110_25
  2833     0472  0870               	movf	?___awdiv,w
  2834     0473  067B               	xorwf	isr@count,w
  2835     0474                     u110_25:
  2836     0474  1D03               	skipz
  2837     0475  2C77               	goto	u110_21
  2838     0476  2C78               	goto	u110_20
  2839     0477                     u110_21:
  2840     0477  2C7E               	goto	i1l1510
  2841     0478                     u110_20:
  2842     0478                     i1l1506:
  2843                           
  2844                           ;isr.c: 21:         {;isr.c: 22:             count = 0;
  2845     0478  01FB               	clrf	isr@count
  2846     0479  01FC               	clrf	isr@count+1
  2847     047A                     i1l1508:
  2848                           
  2849                           ;isr.c: 23:             RB7 = !RB7;
  2850     047A  3080               	movlw	128
  2851     047B  1283               	bcf	3,5	;RP0=0, select bank0
  2852     047C  1303               	bcf	3,6	;RP1=0, select bank0
  2853     047D  0686               	xorwf	6,f
  2854     047E                     i1l1510:
  2855                           
  2856                           ;isr.c: 26:         TMR0IF = 0;
  2857     047E  110B               	bcf	11,2	;volatile
  2858     047F                     i1l127:
  2859     047F  087A               	movf	??_isr+2,w
  2860     0480  00FF               	movwf	btemp+1
  2861     0481  0879               	movf	??_isr+1,w
  2862     0482  008A               	movwf	10
  2863     0483  0E78               	swapf	??_isr,w
  2864     0484  0083               	movwf	3
  2865     0485  0EFE               	swapf	btemp,f
  2866     0486  0E7E               	swapf	btemp,w
  2867     0487  0009               	retfie
  2868     0488                     __end_of_isr:
  2869                           
  2870                           	psect	intentry
  2871     0004                     __pintentry:	
  2872                           ;incstack = 0
  2873                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2874                           
  2875     0004                     interrupt_function:
  2876     007E                     saved_w	set	btemp
  2877     0004  00FE               	movwf	btemp
  2878     0005  0E03               	swapf	3,w
  2879     0006  00F8               	movwf	??_isr
  2880     0007  080A               	movf	10,w
  2881     0008  00F9               	movwf	??_isr+1
  2882     0009  087F               	movf	btemp+1,w
  2883     000A  00FA               	movwf	??_isr+2
  2884     000B  120A  118A  2C52   	ljmp	_isr
  2885                           
  2886                           	psect	text13
  2887     036F                     __ptext13:	
  2888 ;; *************** function ___awdiv *****************
  2889 ;; Defined at:
  2890 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  divisor         2    0[COMMON] int 
  2893 ;;  dividend        2    2[COMMON] int 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  quotient        2    6[COMMON] int 
  2896 ;;  sign            1    5[COMMON] unsigned char 
  2897 ;;  counter         1    4[COMMON] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  2    0[COMMON] int 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0, btemp+1
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2907 ;;      Params:         4       0       0       0       0
  2908 ;;      Locals:         4       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0
  2910 ;;      Totals:         8       0       0       0       0
  2911 ;;Total ram usage:        8 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_isr
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920     036F                     ___awdiv:	
  2921                           ;psect for function ___awdiv
  2922                           
  2923     036F                     i1l1356:	
  2924                           ;incstack = 0
  2925                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2926                           
  2927     036F  01F5               	clrf	___awdiv@sign
  2928     0370                     i1l1358:
  2929     0370  1FF1               	btfss	___awdiv@divisor+1,7
  2930     0371  2B73               	goto	u83_21
  2931     0372  2B74               	goto	u83_20
  2932     0373                     u83_21:
  2933     0373  2B7B               	goto	i1l1364
  2934     0374                     u83_20:
  2935     0374                     i1l1360:
  2936     0374  09F0               	comf	___awdiv@divisor,f
  2937     0375  09F1               	comf	___awdiv@divisor+1,f
  2938     0376  0AF0               	incf	___awdiv@divisor,f
  2939     0377  1903               	skipnz
  2940     0378  0AF1               	incf	___awdiv@divisor+1,f
  2941     0379                     i1l1362:
  2942     0379  01F5               	clrf	___awdiv@sign
  2943     037A  0AF5               	incf	___awdiv@sign,f
  2944     037B                     i1l1364:
  2945     037B  1FF3               	btfss	___awdiv@dividend+1,7
  2946     037C  2B7E               	goto	u84_21
  2947     037D  2B7F               	goto	u84_20
  2948     037E                     u84_21:
  2949     037E  2B88               	goto	i1l1370
  2950     037F                     u84_20:
  2951     037F                     i1l1366:
  2952     037F  09F2               	comf	___awdiv@dividend,f
  2953     0380  09F3               	comf	___awdiv@dividend+1,f
  2954     0381  0AF2               	incf	___awdiv@dividend,f
  2955     0382  1903               	skipnz
  2956     0383  0AF3               	incf	___awdiv@dividend+1,f
  2957     0384                     i1l1368:
  2958     0384  3001               	movlw	1
  2959     0385  00FF               	movwf	btemp+1
  2960     0386  087F               	movf	btemp+1,w
  2961     0387  06F5               	xorwf	___awdiv@sign,f
  2962     0388                     i1l1370:
  2963     0388  01F6               	clrf	___awdiv@quotient
  2964     0389  01F7               	clrf	___awdiv@quotient+1
  2965     038A                     i1l1372:
  2966     038A  0870               	movf	___awdiv@divisor,w
  2967     038B  0471               	iorwf	___awdiv@divisor+1,w
  2968     038C  1903               	btfsc	3,2
  2969     038D  2B8F               	goto	u85_21
  2970     038E  2B90               	goto	u85_20
  2971     038F                     u85_21:
  2972     038F  2BC7               	goto	i1l1392
  2973     0390                     u85_20:
  2974     0390                     i1l1374:
  2975     0390  01F4               	clrf	___awdiv@counter
  2976     0391  0AF4               	incf	___awdiv@counter,f
  2977     0392  2B9E               	goto	i1l1380
  2978     0393                     i1l1376:
  2979     0393  3001               	movlw	1
  2980     0394                     u86_25:
  2981     0394  1003               	clrc
  2982     0395  0DF0               	rlf	___awdiv@divisor,f
  2983     0396  0DF1               	rlf	___awdiv@divisor+1,f
  2984     0397  3EFF               	addlw	-1
  2985     0398  1D03               	skipz
  2986     0399  2B94               	goto	u86_25
  2987     039A                     i1l1378:
  2988     039A  3001               	movlw	1
  2989     039B  00FF               	movwf	btemp+1
  2990     039C  087F               	movf	btemp+1,w
  2991     039D  07F4               	addwf	___awdiv@counter,f
  2992     039E                     i1l1380:
  2993     039E  1FF1               	btfss	___awdiv@divisor+1,7
  2994     039F  2BA1               	goto	u87_21
  2995     03A0  2BA2               	goto	u87_20
  2996     03A1                     u87_21:
  2997     03A1  2B93               	goto	i1l1376
  2998     03A2                     u87_20:
  2999     03A2                     i1l1382:
  3000     03A2  3001               	movlw	1
  3001     03A3                     u88_25:
  3002     03A3  1003               	clrc
  3003     03A4  0DF6               	rlf	___awdiv@quotient,f
  3004     03A5  0DF7               	rlf	___awdiv@quotient+1,f
  3005     03A6  3EFF               	addlw	-1
  3006     03A7  1D03               	skipz
  3007     03A8  2BA3               	goto	u88_25
  3008     03A9  0871               	movf	___awdiv@divisor+1,w
  3009     03AA  0273               	subwf	___awdiv@dividend+1,w
  3010     03AB  1D03               	skipz
  3011     03AC  2BAF               	goto	u89_25
  3012     03AD  0870               	movf	___awdiv@divisor,w
  3013     03AE  0272               	subwf	___awdiv@dividend,w
  3014     03AF                     u89_25:
  3015     03AF  1C03               	skipc
  3016     03B0  2BB2               	goto	u89_21
  3017     03B1  2BB3               	goto	u89_20
  3018     03B2                     u89_21:
  3019     03B2  2BBA               	goto	i1l1388
  3020     03B3                     u89_20:
  3021     03B3                     i1l1384:
  3022     03B3  0870               	movf	___awdiv@divisor,w
  3023     03B4  02F2               	subwf	___awdiv@dividend,f
  3024     03B5  0871               	movf	___awdiv@divisor+1,w
  3025     03B6  1C03               	skipc
  3026     03B7  03F3               	decf	___awdiv@dividend+1,f
  3027     03B8  02F3               	subwf	___awdiv@dividend+1,f
  3028     03B9                     i1l1386:
  3029     03B9  1476               	bsf	___awdiv@quotient,0
  3030     03BA                     i1l1388:
  3031     03BA  3001               	movlw	1
  3032     03BB                     u90_25:
  3033     03BB  1003               	clrc
  3034     03BC  0CF1               	rrf	___awdiv@divisor+1,f
  3035     03BD  0CF0               	rrf	___awdiv@divisor,f
  3036     03BE  3EFF               	addlw	-1
  3037     03BF  1D03               	skipz
  3038     03C0  2BBB               	goto	u90_25
  3039     03C1                     i1l1390:
  3040     03C1  3001               	movlw	1
  3041     03C2  02F4               	subwf	___awdiv@counter,f
  3042     03C3  1D03               	btfss	3,2
  3043     03C4  2BC6               	goto	u91_21
  3044     03C5  2BC7               	goto	u91_20
  3045     03C6                     u91_21:
  3046     03C6  2BA2               	goto	i1l1382
  3047     03C7                     u91_20:
  3048     03C7                     i1l1392:
  3049     03C7  0875               	movf	___awdiv@sign,w
  3050     03C8  1903               	btfsc	3,2
  3051     03C9  2BCB               	goto	u92_21
  3052     03CA  2BCC               	goto	u92_20
  3053     03CB                     u92_21:
  3054     03CB  2BD1               	goto	i1l1396
  3055     03CC                     u92_20:
  3056     03CC                     i1l1394:
  3057     03CC  09F6               	comf	___awdiv@quotient,f
  3058     03CD  09F7               	comf	___awdiv@quotient+1,f
  3059     03CE  0AF6               	incf	___awdiv@quotient,f
  3060     03CF  1903               	skipnz
  3061     03D0  0AF7               	incf	___awdiv@quotient+1,f
  3062     03D1                     i1l1396:
  3063     03D1  0877               	movf	___awdiv@quotient+1,w
  3064     03D2  00F1               	movwf	?___awdiv+1
  3065     03D3  0876               	movf	___awdiv@quotient,w
  3066     03D4  00F0               	movwf	?___awdiv
  3067     03D5                     i1l443:
  3068     03D5  0008               	return
  3069     03D6                     __end_of___awdiv:
  3070     007E                     btemp	set	126	;btemp
  3071     007E                     wtemp0	set	126
  3072                           
  3073                           	psect	config
  3074                           
  3075                           ;Config register CONFIG @ 0x2007
  3076                           ;	Oscillator Selection bits
  3077                           ;	FOSC = 0x3, unprogrammed default
  3078                           ;	Watchdog Timer Enable bit
  3079                           ;	WDTE = OFF, WDT disabled
  3080                           ;	Power-up Timer Enable bit
  3081                           ;	PWRTE = 0x1, unprogrammed default
  3082                           ;	Brown-out Reset Enable bit
  3083                           ;	BOREN = 0x1, unprogrammed default
  3084                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3085                           ;	LVP = 0x1, unprogrammed default
  3086                           ;	Data EEPROM Memory Code Protection bit
  3087                           ;	CPD = 0x1, unprogrammed default
  3088                           ;	Flash Program Memory Write Enable bits
  3089                           ;	WRT = 0x3, unprogrammed default
  3090                           ;	In-Circuit Debugger Mode bit
  3091                           ;	DEBUG = 0x1, unprogrammed default
  3092                           ;	Flash Program Memory Code Protection bit
  3093                           ;	CP = 0x1, unprogrammed default
  3094     2007                     	org	8199
  3095     2007  3FFB               	dw	16379

Data Sizes:
    Strings     88
    Constant    0
    Data        5
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     15      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 17
		 -> main@ptr(BANK0[2]), STR_1(CODE[15]), STR_2(CODE[17]), STR_3(CODE[8]), 
		 -> STR_4(CODE[16]), STR_5(CODE[17]), STR_6(CODE[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv

Critical Paths under _main in BANK0

    _main->_clcd_print
    _read_matrix_keypad->_scan_keypad
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write@clcd$F103
    _clcd_putch->_clcd_write@clcd$F103
    _clcd_print->_clcd_write@clcd$F103

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    5116
                                              7 BANK0      8     8      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                        _init_config
                 _read_matrix_keypad
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   2     2      0     203
                                              2 BANK0      2     2      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      92
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     902
                          _init_clcd
                 _init_matrix_keypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 BANK0      2     2      0
               _clcd_write@clcd$F103
 ---------------------------------------------------------------------------------
 (1) _clcd_write                                           4     3      1     750
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1    1022
                                              4 BANK0      2     1      1
               _clcd_write@clcd$F103
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     0      3    2033
                                              4 BANK0      3     0      3
               _clcd_write@clcd$F103
 ---------------------------------------------------------------------------------
 (4) _clcd_write@clcd$F103                                 4     3      1     902
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0     452
                                              8 COMMON     3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write@clcd$F103
   _clcd_putch
     _clcd_write@clcd$F103
   _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write@clcd$F103
     _init_matrix_keypad
     _init_timer0
   _read_matrix_keypad
     _scan_keypad

 _isr (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B      12        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Oct 27 12:31:14 2023

                              pc 0002                   clcd_print@addr 0040                               l35 0413  
                             l38 04FA                               l63 0097                               l64 01E0  
                             l95 0451                               l98 0306                     ___awdiv@sign 0075  
                             fsr 0004               _init_matrix_keypad 0510                              l101 052A  
                            l110 04BA                              l104 050F                              l200 04E1  
                            l136 0533                              l164 01FC                              l181 024C  
                            l173 0224                              l165 0202                              l190 027A  
                            l182 0252                              l174 022A                              l166 0287  
                            l159 051F                              l183 025E                              l175 0236  
                            l167 020E                              l192 0280                              l184 0258  
                            l176 0230                              l168 0208                              l189 0274  
                            _GIE 005F                              _RB0 0030                              _RB1 0031  
                            _RB2 0032                              _RD0 0040                              _RD1 0041  
                            _RD2 0042                              _RE1 0049                              _RB7 0037  
                            _RD3 0043                              _RE2 004A                              u600 0200  
                            u601 01FF                              u610 0206                              u611 0205  
                            u700 025C                              u620 020C                              u701 025B  
                            u621 020B                              u710 0274                              u630 0224  
                            u711 0273                              u631 0223                              u560 041E  
                            u720 0278                              u640 0228                              u800 04D7  
                            u561 041A                              u721 0277                              u641 0227  
                            u801 04D6                              u730 027E                              u650 022E  
                            u810 04DE                              u731 027D                              u651 022D  
                            u811 04DD                              u820 04BA                              u740 0284  
                            u660 0234                              u821 04B9                              u741 0283  
                            u661 0233                              u574 0421                              u750 03E0  
                            u670 024C                              u590 01FC                              u751 03DC  
                            u671 024B                              u591 01FB                              _PSA 040B  
                            u680 0250                              u585 0433                              u681 024F  
                            u690 0256                              u930 0057                              u691 0255  
                            u931 0056                              u764 03E3                              u780 04CB  
                            u940 005D                              u781 04CA                              u941 005C  
                            u790 04D2                              u950 0062                              u775 03F5  
                            u791 04D1                              u951 0061                              u960 006F  
                            u961 006E                              u970 0091                              u971 0090  
                            u980 00A7                              u981 00A6                              u965 006B  
                            u990 00B1                              u991 00B0                              u995 00AD  
                            _isr 0452                   clcd_putch@addr 003E                              fsr0 0004  
                 clcd_putch@data 003F                              indf 0000           ??_clcd_write@clcd$F103 003B  
            ?_init_matrix_keypad 0070                             l1200 01EA                             l1130 0417  
                           l1210 0206                             l1202 01EE                             l1140 042F  
                           l1132 0421                             l1300 0405                             l1220 0212  
                           l1204 0200                             l1142 043B                             l1134 0424  
                           l1302 0408                             l1150 0288                             l1310 04EB  
                           l1230 022E                             l1222 0216                             l1144 043C  
                           l1136 0425                             l1160 02C0                             l1152 0293  
                           l1312 04F0                             l1304 04E2                             l1240 023A  
                           l1224 0228                             l1216 020C                             l1320 04CB  
                           l1400 003E                             l1146 0443                             l1138 042C  
                           l1170 02F6                             l1162 02C3                             l1154 029C  
                           l1314 04F5                             l1306 04E5                             l1250 0256  
                           l1242 023E                             l1330 04D7                             l1410 0057  
                           l1402 0044                             l1148 0446                             l1172 02FF  
                           l1164 02CC                             l1156 02B0                             l1180 0525  
                           l1308 04EA                             l1260 0262                             l1244 0250  
                           l1236 0234                             l1340 04DE                             l1316 04BE  
                           l1420 0080                             l1412 005D                             l1404 0049  
                           l1350 0492                             l1166 02DC                             l1158 02B7  
                           l1174 0520                             l1190 051D                             l1182 0510  
                           l1270 027E                             l1262 0266                             l1342 04E0  
                           l1326 04CD                             l1318 04C6                             l1430 00C1  
                           l1422 0091                             l1414 0062                             l1406 0052  
                           l1352 04A2                             l1168 02E3                             l1176 0523  
                           l1192 051E                             l1184 0518                             l1280 0286  
                           l1264 0278                             l1256 025C                             l1328 04D2  
                           l1432 00CE                             l1440 00E8                             l1416 006F  
                           l1424 009E                             l1408 0057                             l1354 04AA  
                           l1346 04FE                             l1290 03E7                             l1178 0524  
                           l1186 0519                             l1194 052B                             l1338 04D9  
                           l1450 0106                             l1442 00EF                             l1434 00DB  
                           l1426 00A7                             l1418 0077                             l1348 0488  
                           l1292 03EE                             l1284 03D9                             l1188 051C  
                           l1196 052F                             l1276 0284                             l1460 0124  
                           l1452 010C                             l1444 00F9                             l1436 00E1  
                           l1428 00B1                             l1294 03F1                             l1286 03E3  
                           l1198 01E4                             l1470 014B                             l1462 0131  
                           l1454 010E                             l1446 0101                             l1438 00E5  
                           l1296 03FD                             l1288 03E6                             l1480 0192  
                           l1472 015B                             l1464 013E                             l1456 0114  
                           l1448 0105                             l1298 03FE                             l1490 01B7  
                           l1482 019F                             l1466 0143                             l1458 011B  
                           l1474 016E                             l1492 01B9                             l1476 0175  
                           l1484 01A6                             l1494 01C0                             l1486 01AB  
                           l1478 0185                             l1496 01CD                             l1488 01B1  
                           l1498 01D6                             ?_isr 0070                             STR_1 0358  
                           STR_2 0328                             STR_3 0367                             STR_4 0339  
                           STR_5 0317                             STR_6 0349                      main@attempt 0030  
                           u1000 00E5                             u1001 00E4                             _T0CS 040D  
                           u1010 00EF                             u1011 00EE                             u1020 00F9  
                           u1021 00F8                             u1030 0105                             u1031 0104  
                           u1040 016D                             u1041 016C                             u1025 00F5  
                           u1050 0175                             u1051 0174                             u1043 0169  
                           u1060 01AB                             u1117 028E                             u1061 01AA  
                           u1070 01B1                             u1207 040E                             u1127 02A2  
                           u1071 01B0                             u1080 01B7                             u1217 0429  
                           u1137 02B4                             u1081 01B6                             u1227 0440  
                           u1147 02D0                             u1237 044C                             u1157 02E0  
                           u1167 02F2                             u1177 0303                             u1187 03EB  
                           u1197 0402                             _TMR0 0001                             _main 003E  
                           btemp 007E                             start 000E             ??_init_matrix_keypad 003A  
                 clcd_write@byte 003D                   clcd_write@mode 003A                            ??_isr 0078  
                          ?_main 0070                  __end_of___awdiv 03D6                  ___awdiv@divisor 0070  
                          i1l127 047F                            i1l443 03D5                     ?_init_config 0070  
                ___awdiv@counter 0074                            _PORTB 0006                            _PORTD 0008  
                          _TRISB 0086                            _TRISD 0088                            u90_25 03BB  
                          u91_20 03C7                            u83_20 0374                            u91_21 03C6  
                          u83_21 0373                            u92_20 03CC                            u84_20 037F  
                          u92_21 03CB                            u84_21 037E                            u85_20 0390  
                          u85_21 038F                            u86_25 0394                            u87_20 03A2  
                          u87_21 03A1                            u88_25 03A3                            u89_20 03B3  
                          u89_21 03B2                            u89_25 03AF                     ?_init_timer0 0070  
                          _nRBPU 040F               _read_matrix_keypad 04BB                     main@password 0028  
                          _sigma 0038                            main@i 0044                            pclath 000A  
       clcd_write@clcd$F103@byte 003D         clcd_write@clcd$F103@mode 003A              ?_read_matrix_keypad 0070  
                          status 0003                            wtemp0 007E                     ?_scan_keypad 0070  
                __initialization 0011                     __end_of_main 01E4             ??_read_matrix_keypad 003C  
                         ??_main 0041                 ___awdiv@dividend 0072                           u110_20 0478  
                         u110_21 0477                           u110_25 0474                           i1l1500 0452  
                         i1l1510 047E                           i1l1502 0456                           i1l1360 0374  
                         i1l1504 045B                           i1l1370 0388                           i1l1362 0379  
                         i1l1506 0478                           i1l1380 039E                           i1l1372 038A  
                         i1l1364 037B                           i1l1356 036F                           i1l1508 047A  
                         i1l1390 03C1                           i1l1382 03A2                           i1l1374 0390  
                         i1l1366 037F                           i1l1358 0370                           i1l1384 03B3  
                         i1l1376 0393                           i1l1392 03C7                           i1l1368 0384  
                         i1l1394 03CC                           i1l1386 03B9                           i1l1378 039A  
                         i1l1396 03D1                           i1l1388 03BA                           u109_20 0456  
                         u109_21 0455                           _TMR0IE 005D                           _TMR0IF 005A  
                         _TRISB7 0437                           _TRISE1 0449                           _TRISE2 044A  
        _init_display_controller 0288                        ??___awdiv 0074                 ___awdiv@quotient 0076  
                         saved_w 007E          __end_of__initialization 003A                   __pcstackCOMMON 0070  
                   __pidataBANK0 053C                       __pbssBANK0 0020        ??_init_display_controller 003E  
                     _clcd_print 0488                       _clcd_putch 04FB                       _clcd_write 03D6  
                     __pmaintext 003E                       __pintentry 0004                       __stringtab 0307  
                        ___awdiv 036F                          __ptext1 04BB                          __ptext2 01E4  
                        __ptext3 04E2                          __ptext4 052B                          __ptext5 0510  
                        __ptext6 0520                          __ptext7 0288                          __ptext8 03D6  
                        __ptext9 04FB  __end_of_init_display_controller 0307                __end_of_init_clcd 052B  
                        main@key 0048                          clrloop0 0535                          main@pwd 0020  
                        main@ptr 0042             end_of_initialization 003A                      ?_clcd_print 003E  
                    ?_clcd_putch 003E                      ?_clcd_write 003A                    clcd_print@str 003E  
                     main@count1 0032              start_initialization 0011                     scan_keypad@i 003A  
         read_matrix_keypad@mode 003C           read_matrix_keypad@once 004D                      __end_of_isr 0488  
                    __pdataBANK0 0049                    ??_init_config 0040                    ??_init_timer0 003A  
                    __pbssCOMMON 007B                        ___latbits 0002                    __pcstackBANK0 003A  
                  ??_scan_keypad 003A     __end_of_clcd_write@clcd$F103 0452                         ?___awdiv 0070  
                      __pstrings 0307                        _init_clcd 0520              __end_of_init_config 04FB  
            __end_of_init_timer0 0534         ?_init_display_controller 0070                interrupt_function 0004  
                      clear_ram0 0534                     ??_clcd_print 0041                     ??_clcd_putch 003F  
     __end_of_init_matrix_keypad 0520                     ??_clcd_write 003B                        main@F1031 0049  
            __end_of_scan_keypad 0288                      __stringbase 0316                        main@flag1 0036  
                      main@count 0034               __end_of_clcd_print 04BB               __end_of_clcd_putch 0510  
             __end_of_clcd_write 0414                       ?_init_clcd 0070            read_matrix_keypad@key 003D  
     __end_of_read_matrix_keypad 04E2               __end_of__stringtab 0317                      _init_config 04E2  
                    _init_timer0 052B                         __ptext10 0488                         __ptext11 0414  
                       __ptext12 0452                         __ptext13 036F             _clcd_write@clcd$F103 0414  
                    _scan_keypad 01E4                         main@once 004B                         isr@count 007B  
                    ??_init_clcd 0040            ?_clcd_write@clcd$F103 003A                         intlevel1 0000  
                      stringcode 0311                         stringdir 0311                         stringtab 0307  
