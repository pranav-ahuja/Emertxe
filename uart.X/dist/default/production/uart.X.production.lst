

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Oct 27 17:24:19 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 22/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0008                     	;# 
   183     0009                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     0088                     	;# 
   214     0089                     	;# 
   215     008C                     	;# 
   216     008D                     	;# 
   217     008E                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     010C                     	;# 
   229     010D                     	;# 
   230     010E                     	;# 
   231     010F                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234     0000                     	;# 
   235     0001                     	;# 
   236     0002                     	;# 
   237     0003                     	;# 
   238     0004                     	;# 
   239     0005                     	;# 
   240     0006                     	;# 
   241     0007                     	;# 
   242     0008                     	;# 
   243     0009                     	;# 
   244     000A                     	;# 
   245     000B                     	;# 
   246     000C                     	;# 
   247     000D                     	;# 
   248     000E                     	;# 
   249     000E                     	;# 
   250     000F                     	;# 
   251     0010                     	;# 
   252     0011                     	;# 
   253     0012                     	;# 
   254     0013                     	;# 
   255     0014                     	;# 
   256     0015                     	;# 
   257     0015                     	;# 
   258     0016                     	;# 
   259     0017                     	;# 
   260     0018                     	;# 
   261     0019                     	;# 
   262     001A                     	;# 
   263     001B                     	;# 
   264     001B                     	;# 
   265     001C                     	;# 
   266     001D                     	;# 
   267     001E                     	;# 
   268     001F                     	;# 
   269     0081                     	;# 
   270     0085                     	;# 
   271     0086                     	;# 
   272     0087                     	;# 
   273     0088                     	;# 
   274     0089                     	;# 
   275     008C                     	;# 
   276     008D                     	;# 
   277     008E                     	;# 
   278     0091                     	;# 
   279     0092                     	;# 
   280     0093                     	;# 
   281     0094                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     010C                     	;# 
   289     010D                     	;# 
   290     010E                     	;# 
   291     010F                     	;# 
   292     018C                     	;# 
   293     018D                     	;# 
   294     001A                     _RCREG	set	26
   295     0019                     _TXREG	set	25
   296     00C1                     _OERR	set	193
   297     0065                     _RCIF	set	101
   298     0064                     _TXIF	set	100
   299     00C4                     _CREN	set	196
   300     00C7                     _SPEN	set	199
   301     005E                     _PEIE	set	94
   302     005F                     _GIE	set	95
   303     0041                     _RD1	set	65
   304     0099                     _SPBRG	set	153
   305     0086                     _TRISB	set	134
   306     0088                     _TRISD	set	136
   307     0465                     _RCIE	set	1125
   308     04C2                     _BRGH	set	1218
   309     04C5                     _TXEN	set	1221
   310                           
   311                           	psect	strings
   312     0145                     __pstrings:
   313     0145                     stringtab:
   314     0145                     __stringtab:
   315     0145                     stringcode:	
   316                           ;	String table - string pointers are 1 byte each
   317                           
   318     0145                     stringdir:
   319     0145  3001               	movlw	high stringdir
   320     0146  008A               	movwf	10
   321     0147  0804               	movf	4,w
   322     0148  0A84               	incf	4,f
   323     0149  0782               	addwf	2,f
   324     014A                     __stringbase:
   325     014A  3400               	retlw	0
   326     014B                     __end_of__stringtab:
   327     014B                     STR_1:
   328     014B  3455               	retlw	85	;'U'
   329     014C  3441               	retlw	65	;'A'
   330     014D  3452               	retlw	82	;'R'
   331     014E  3454               	retlw	84	;'T'
   332     014F  3420               	retlw	32	;' '
   333     0150  3454               	retlw	84	;'T'
   334     0151  3445               	retlw	69	;'E'
   335     0152  3453               	retlw	83	;'S'
   336     0153  3454               	retlw	84	;'T'
   337     0154  3420               	retlw	32	;' '
   338     0155  3443               	retlw	67	;'C'
   339     0156  344F               	retlw	79	;'O'
   340     0157  3444               	retlw	68	;'D'
   341     0158  3445               	retlw	69	;'E'
   342     0159  340A               	retlw	10
   343     015A  340D               	retlw	13
   344     015B  3400               	retlw	0
   345                           
   346                           	psect	cinit
   347     000F                     start_initialization:	
   348                           ; #config settings
   349                           
   350     000F                     __initialization:
   351                           
   352                           ; Clear objects allocated to BANK0
   353     000F  1283               	bcf	3,5	;RP0=0, select bank0
   354     0010  1303               	bcf	3,6	;RP1=0, select bank0
   355     0011  01B1               	clrf	__pbssBANK0& (0+127)
   356     0012                     end_of_initialization:	
   357                           ;End of C runtime variable initialization code
   358                           
   359     0012                     __end_of__initialization:
   360     0012  0183               	clrf	3
   361     0013  120A  118A  287E   	ljmp	_main	;jump to C main() function
   362                           
   363                           	psect	bssBANK0
   364     0031                     __pbssBANK0:
   365     0031                     _ch:
   366     0031                     	ds	1
   367                           
   368                           	psect	cstackCOMMON
   369     0070                     __pcstackCOMMON:
   370     0070                     ?_puts:
   371     0070                     ?_putchar:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ?_init_config:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     ?_main:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0070                     ?_isr:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ??_isr:	
   384                           ; 1 bytes @ 0x0
   385                           
   386                           
   387                           ; 1 bytes @ 0x0
   388     0070                     	ds	2
   389     0072                     ??_putchar:
   390     0072                     ?___lldiv:	
   391                           ; 1 bytes @ 0x2
   392                           
   393     0072                     putchar@ch:	
   394                           ; 4 bytes @ 0x2
   395                           
   396     0072                     ___lldiv@divisor:	
   397                           ; 1 bytes @ 0x2
   398                           
   399                           
   400                           ; 4 bytes @ 0x2
   401     0072                     	ds	1
   402     0073                     ??_puts:
   403     0073                     puts@str:	
   404                           ; 1 bytes @ 0x3
   405                           
   406                           
   407                           ; 1 bytes @ 0x3
   408     0073                     	ds	3
   409     0076                     ___lldiv@dividend:
   410                           
   411                           ; 4 bytes @ 0x6
   412     0076                     	ds	4
   413     007A                     ??___lldiv:
   414                           
   415                           ; 1 bytes @ 0xA
   416     007A                     	ds	1
   417     007B                     ??_init_config:
   418     007B                     ??_main:	
   419                           ; 1 bytes @ 0xB
   420                           
   421                           
   422                           	psect	cstackBANK0
   423     0020                     __pcstackBANK0:	
   424                           ; 1 bytes @ 0xB
   425                           
   426     0020                     ___lldiv@quotient:
   427                           
   428                           ; 4 bytes @ 0x0
   429     0020                     	ds	4
   430     0024                     ___lldiv@counter:
   431                           
   432                           ; 1 bytes @ 0x4
   433     0024                     	ds	1
   434     0025                     ?_init_uart:
   435     0025                     init_uart@baud_rate:	
   436                           ; 1 bytes @ 0x5
   437                           
   438                           
   439                           ; 4 bytes @ 0x5
   440     0025                     	ds	4
   441     0029                     ??_init_uart:
   442                           
   443                           ; 1 bytes @ 0x9
   444     0029                     	ds	4
   445     002D                     main@wait:
   446                           
   447                           ; 4 bytes @ 0xD
   448     002D                     	ds	4
   449                           
   450                           	psect	maintext
   451     007E                     __pmaintext:	
   452 ;;
   453 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   454 ;;
   455 ;; *************** function _main *****************
   456 ;; Defined at:
   457 ;;		line 26 in file "main.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;  wait            4   13[BANK0 ] unsigned long 
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : B00/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   471 ;;      Params:         0       0       0       0       0
   472 ;;      Locals:         0       4       0       0       0
   473 ;;      Temps:          0       0       0       0       0
   474 ;;      Totals:         0       4       0       0       0
   475 ;;Total ram usage:        4 bytes
   476 ;; Hardware stack levels required when called: 4
   477 ;; This function calls:
   478 ;;		_init_config
   479 ;;		_putchar
   480 ;; This function is called by:
   481 ;;		Startup code after reset
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485     007E                     _main:	
   486                           ;psect for function _main
   487                           
   488     007E                     l749:	
   489                           ;incstack = 0
   490                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   491                           
   492                           
   493                           ;main.c: 27: 
   494     007E  120A  118A  2128  120A  118A  	fcall	_init_config
   495     0083                     l751:
   496                           
   497                           ;main.c: 28:         if(wait++ == 100000)
   498     0083  3000               	movlw	0
   499     0084  1283               	bcf	3,5	;RP0=0, select bank0
   500     0085  1303               	bcf	3,6	;RP1=0, select bank0
   501     0086  00B0               	movwf	main@wait+3
   502     0087  3000               	movlw	0
   503     0088  00AF               	movwf	main@wait+2
   504     0089  3000               	movlw	0
   505     008A  00AE               	movwf	main@wait+1
   506     008B  3000               	movlw	0
   507     008C  00AD               	movwf	main@wait
   508     008D                     l753:
   509                           
   510                           ;main.c: 32:         }
   511     008D  1283               	bcf	3,5	;RP0=0, select bank0
   512     008E  1303               	bcf	3,6	;RP1=0, select bank0
   513     008F  0831               	movf	_ch,w
   514     0090  1903               	btfsc	3,2
   515     0091  2893               	goto	u251
   516     0092  2894               	goto	u250
   517     0093                     u251:
   518     0093  28A3               	goto	l759
   519     0094                     u250:
   520     0094                     l755:
   521                           
   522                           ;main.c: 33: ;main.c: 34:     }
   523     0094  0831               	movf	_ch,w
   524     0095  120A  118A  2171  120A  118A  	fcall	_putchar
   525                           
   526                           ;main.c: 35:     return;
   527     009A  300A               	movlw	10
   528     009B  120A  118A  2171  120A  118A  	fcall	_putchar
   529     00A0                     l757:
   530                           
   531                           ;main.c: 36: }
   532     00A0  1283               	bcf	3,5	;RP0=0, select bank0
   533     00A1  1303               	bcf	3,6	;RP1=0, select bank0
   534     00A2  01B1               	clrf	_ch
   535     00A3                     l759:
   536     00A3  3001               	movlw	1
   537     00A4  07AD               	addwf	main@wait,f
   538     00A5  3000               	movlw	0
   539     00A6  1803               	skipnc
   540     00A7  3001               	movlw	1
   541     00A8  07AE               	addwf	main@wait+1,f
   542     00A9  3000               	movlw	0
   543     00AA  1803               	skipnc
   544     00AB  3001               	movlw	1
   545     00AC  07AF               	addwf	main@wait+2,f
   546     00AD  3000               	movlw	0
   547     00AE  1803               	skipnc
   548     00AF  3001               	movlw	1
   549     00B0  07B0               	addwf	main@wait+3,f
   550     00B1  30A1               	movlw	161
   551     00B2  062D               	xorwf	main@wait,w
   552     00B3  3086               	movlw	134
   553     00B4  1903               	skipnz
   554     00B5  062E               	xorwf	main@wait+1,w
   555     00B6  1D03               	skipz
   556     00B7  28BD               	goto	u261
   557     00B8  032F               	decf	main@wait+2,w
   558     00B9  0430               	iorwf	main@wait+3,w
   559     00BA  1D03               	btfss	3,2
   560     00BB  28BD               	goto	u261
   561     00BC  28BE               	goto	u260
   562     00BD                     u261:
   563     00BD  288D               	goto	l753
   564     00BE                     u260:
   565     00BE                     l761:
   566     00BE  3000               	movlw	0
   567     00BF  1283               	bcf	3,5	;RP0=0, select bank0
   568     00C0  1303               	bcf	3,6	;RP1=0, select bank0
   569     00C1  00B0               	movwf	main@wait+3
   570     00C2  3000               	movlw	0
   571     00C3  00AF               	movwf	main@wait+2
   572     00C4  3000               	movlw	0
   573     00C5  00AE               	movwf	main@wait+1
   574     00C6  3000               	movlw	0
   575     00C7  00AD               	movwf	main@wait
   576     00C8  3002               	movlw	2
   577     00C9  0688               	xorwf	8,f
   578     00CA  288D               	goto	l753
   579     00CB  120A  118A  280C   	ljmp	start
   580     00CE                     __end_of_main:
   581                           
   582                           	psect	text1
   583     0128                     __ptext1:	
   584 ;; *************** function _init_config *****************
   585 ;; Defined at:
   586 ;;		line 12 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0
   603 ;;      Totals:         0       0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; Hardware stack levels required when called: 3
   607 ;; This function calls:
   608 ;;		_init_uart
   609 ;;		_puts
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615     0128                     _init_config:	
   616                           ;psect for function _init_config
   617                           
   618     0128                     l737:	
   619                           ;incstack = 0
   620                           ; Regs used in _init_config: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   621                           
   622                           
   623                           ;main.c: 14: void main(void) {
   624     0128  1683               	bsf	3,5	;RP0=1, select bank1
   625     0129  1303               	bcf	3,6	;RP1=0, select bank1
   626     012A  0188               	clrf	8	;volatile
   627                           
   628                           ;main.c: 15:     init_config();
   629     012B  0186               	clrf	6	;volatile
   630     012C                     l739:
   631                           
   632                           ;main.c: 16:     unsigned long int wait = 0;
   633     012C  1283               	bcf	3,5	;RP0=0, select bank0
   634     012D  1303               	bcf	3,6	;RP1=0, select bank0
   635     012E  1088               	bcf	8,1	;volatile
   636     012F                     l741:
   637                           
   638                           ;main.c: 18:     while (1) {
   639     012F  3000               	movlw	0
   640     0130  00A8               	movwf	init_uart@baud_rate+3
   641     0131  3000               	movlw	0
   642     0132  00A7               	movwf	init_uart@baud_rate+2
   643     0133  3025               	movlw	37
   644     0134  00A6               	movwf	init_uart@baud_rate+1
   645     0135  3080               	movlw	128
   646     0136  00A5               	movwf	init_uart@baud_rate
   647     0137  120A  118A  20CE  120A  118A  	fcall	_init_uart
   648     013C                     l743:
   649                           
   650                           ;main.c: 20:         if(ch != '\0')
   651     013C  178B               	bsf	11,7	;volatile
   652     013D                     l745:
   653                           
   654                           ;main.c: 21:         {
   655     013D  170B               	bsf	11,6	;volatile
   656     013E                     l747:
   657                           
   658                           ;main.c: 23:             putchar('\n');
   659     013E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   660     013F  120A  118A  2109  120A  118A  	fcall	_puts
   661     0144                     l21:
   662     0144  0008               	return
   663     0145                     __end_of_init_config:
   664                           
   665                           	psect	text2
   666     0109                     __ptext2:	
   667 ;; *************** function _puts *****************
   668 ;; Defined at:
   669 ;;		line 49 in file "uart.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  str             1    wreg     PTR const unsigned char 
   672 ;;		 -> STR_1(17), 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  str             1    3[COMMON] PTR const unsigned char 
   675 ;;		 -> STR_1(17), 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         1       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0
   688 ;;      Totals:         1       0       0       0       0
   689 ;;Total ram usage:        1 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 2
   692 ;; This function calls:
   693 ;;		_putchar
   694 ;; This function is called by:
   695 ;;		_init_config
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699     0109                     _puts:	
   700                           ;psect for function _puts
   701                           
   702                           
   703                           ;incstack = 0
   704                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   705                           ;puts@str stored from wreg
   706     0109  00F3               	movwf	puts@str
   707     010A                     l729:
   708                           
   709                           ;uart.c: 49: void puts(const char *str);uart.c: 50: {;uart.c: 51:     while(*str)
   710     010A  291B               	goto	l735
   711     010B                     l731:
   712                           
   713                           ;uart.c: 52:     {;uart.c: 53:         putchar(*str++);
   714     010B  0873               	movf	puts@str,w
   715     010C  0084               	movwf	4
   716     010D  120A  118A  2145  120A  118A  	fcall	stringdir
   717     0112  120A  118A  2171  120A  118A  	fcall	_putchar
   718     0117                     l733:
   719     0117  3001               	movlw	1
   720     0118  00FF               	movwf	btemp+1
   721     0119  087F               	movf	btemp+1,w
   722     011A  07F3               	addwf	puts@str,f
   723     011B                     l735:
   724                           
   725                           ;uart.c: 51:     while(*str)
   726     011B  0873               	movf	puts@str,w
   727     011C  0084               	movwf	4
   728     011D  120A  118A  2145  120A  118A  	fcall	stringdir
   729     0122  3A00               	xorlw	0
   730     0123  1D03               	skipz
   731     0124  2926               	goto	u241
   732     0125  2927               	goto	u240
   733     0126                     u241:
   734     0126  290B               	goto	l731
   735     0127                     u240:
   736     0127                     l62:
   737     0127  0008               	return
   738     0128                     __end_of_puts:
   739                           
   740                           	psect	text3
   741     0171                     __ptext3:	
   742 ;; *************** function _putchar *****************
   743 ;; Defined at:
   744 ;;		line 40 in file "uart.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  ch              1    wreg     unsigned char 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  ch              1    2[COMMON] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         1       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         1       0       0       0       0
   762 ;;Total ram usage:        1 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; Hardware stack levels required when called: 1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_main
   769 ;;		_puts
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773     0171                     _putchar:	
   774                           ;psect for function _putchar
   775                           
   776                           
   777                           ;incstack = 0
   778                           ; Regs used in _putchar: [wreg]
   779                           ;putchar@ch stored from wreg
   780     0171  00F2               	movwf	putchar@ch
   781     0172                     l697:
   782                           
   783                           ;uart.c: 40: void putchar(unsigned char ch);uart.c: 41: {;uart.c: 42:     TXREG = ch;
   784     0172  0872               	movf	putchar@ch,w
   785     0173  1283               	bcf	3,5	;RP0=0, select bank0
   786     0174  1303               	bcf	3,6	;RP1=0, select bank0
   787     0175  0099               	movwf	25	;volatile
   788     0176                     l53:	
   789                           ;uart.c: 44:     while(TXIF != 1);
   790                           
   791     0176  1E0C               	btfss	12,4	;volatile
   792     0177  2979               	goto	u151
   793     0178  297A               	goto	u150
   794     0179                     u151:
   795     0179  2976               	goto	l53
   796     017A                     u150:
   797     017A                     l55:
   798                           
   799                           ;uart.c: 46:     TXIF = 0;
   800     017A  120C               	bcf	12,4	;volatile
   801     017B                     l56:
   802     017B  0008               	return
   803     017C                     __end_of_putchar:
   804                           
   805                           	psect	text4
   806     00CE                     __ptext4:	
   807 ;; *************** function _init_uart *****************
   808 ;; Defined at:
   809 ;;		line 10 in file "uart.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  baud_rate       4    5[BANK0 ] unsigned long 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       4       0       0       0
   824 ;;      Locals:         0       0       0       0       0
   825 ;;      Temps:          0       4       0       0       0
   826 ;;      Totals:         0       8       0       0       0
   827 ;;Total ram usage:        8 bytes
   828 ;; Hardware stack levels used: 1
   829 ;; Hardware stack levels required when called: 2
   830 ;; This function calls:
   831 ;;		___lldiv
   832 ;; This function is called by:
   833 ;;		_init_config
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837     00CE                     _init_uart:	
   838                           ;psect for function _init_uart
   839                           
   840     00CE                     l725:	
   841                           ;incstack = 0
   842                           ; Regs used in _init_uart: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   843                           
   844                           
   845                           ;uart.c: 14:     SPEN = 1;
   846     00CE  1283               	bcf	3,5	;RP0=0, select bank0
   847     00CF  1303               	bcf	3,6	;RP1=0, select bank0
   848     00D0  1798               	bsf	24,7	;volatile
   849                           
   850                           ;uart.c: 16:     TXEN = 1;
   851     00D1  1683               	bsf	3,5	;RP0=1, select bank1
   852     00D2  1303               	bcf	3,6	;RP1=0, select bank1
   853     00D3  1698               	bsf	24,5	;volatile
   854                           
   855                           ;uart.c: 18:     BRGH = 1;
   856     00D4  1518               	bsf	24,2	;volatile
   857                           
   858                           ;uart.c: 22:     CREN = 1;
   859     00D5  1283               	bcf	3,5	;RP0=0, select bank0
   860     00D6  1303               	bcf	3,6	;RP1=0, select bank0
   861     00D7  1618               	bsf	24,4	;volatile
   862                           
   863                           ;uart.c: 24:     RCIE = 1;
   864     00D8  1683               	bsf	3,5	;RP0=1, select bank1
   865     00D9  1303               	bcf	3,6	;RP1=0, select bank1
   866     00DA  168C               	bsf	12,5	;volatile
   867     00DB                     l727:
   868                           
   869                           ;uart.c: 28:     SPBRG = (20000000 /(16 * baud_rate) - 1);
   870     00DB  1283               	bcf	3,5	;RP0=0, select bank0
   871     00DC  1303               	bcf	3,6	;RP1=0, select bank0
   872     00DD  0825               	movf	init_uart@baud_rate,w
   873     00DE  00A9               	movwf	??_init_uart
   874     00DF  0826               	movf	init_uart@baud_rate+1,w
   875     00E0  00AA               	movwf	??_init_uart+1
   876     00E1  0827               	movf	init_uart@baud_rate+2,w
   877     00E2  00AB               	movwf	??_init_uart+2
   878     00E3  0828               	movf	init_uart@baud_rate+3,w
   879     00E4  00AC               	movwf	??_init_uart+3
   880     00E5  3004               	movlw	4
   881     00E6                     u235:
   882     00E6  1003               	clrc
   883     00E7  0DA9               	rlf	??_init_uart,f
   884     00E8  0DAA               	rlf	??_init_uart+1,f
   885     00E9  0DAB               	rlf	??_init_uart+2,f
   886     00EA  0DAC               	rlf	??_init_uart+3,f
   887     00EB                     u230:
   888     00EB  3EFF               	addlw	-1
   889     00EC  1D03               	skipz
   890     00ED  28E6               	goto	u235
   891     00EE  082C               	movf	??_init_uart+3,w
   892     00EF  00F5               	movwf	___lldiv@divisor+3
   893     00F0  082B               	movf	??_init_uart+2,w
   894     00F1  00F4               	movwf	___lldiv@divisor+2
   895     00F2  082A               	movf	??_init_uart+1,w
   896     00F3  00F3               	movwf	___lldiv@divisor+1
   897     00F4  0829               	movf	??_init_uart,w
   898     00F5  00F2               	movwf	___lldiv@divisor
   899     00F6  3001               	movlw	1
   900     00F7  00F9               	movwf	___lldiv@dividend+3
   901     00F8  3031               	movlw	49
   902     00F9  00F8               	movwf	___lldiv@dividend+2
   903     00FA  302D               	movlw	45
   904     00FB  00F7               	movwf	___lldiv@dividend+1
   905     00FC  3000               	movlw	0
   906     00FD  00F6               	movwf	___lldiv@dividend
   907     00FE  120A  118A  2016  120A  118A  	fcall	___lldiv
   908     0103  0872               	movf	?___lldiv,w
   909     0104  3EFF               	addlw	255
   910     0105  1683               	bsf	3,5	;RP0=1, select bank1
   911     0106  1303               	bcf	3,6	;RP1=0, select bank1
   912     0107  0099               	movwf	25	;volatile
   913     0108                     l50:
   914     0108  0008               	return
   915     0109                     __end_of_init_uart:
   916                           
   917                           	psect	text5
   918     0016                     __ptext5:	
   919 ;; *************** function ___lldiv *****************
   920 ;; Defined at:
   921 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  divisor         4    2[COMMON] unsigned long 
   924 ;;  dividend        4    6[COMMON] unsigned long 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  quotient        4    0[BANK0 ] unsigned long 
   927 ;;  counter         1    4[BANK0 ] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  4    2[COMMON] unsigned long 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, btemp+1
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         8       0       0       0       0
   938 ;;      Locals:         0       5       0       0       0
   939 ;;      Temps:          1       0       0       0       0
   940 ;;      Totals:         9       5       0       0       0
   941 ;;Total ram usage:       14 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_init_uart
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951     0016                     ___lldiv:	
   952                           ;psect for function ___lldiv
   953                           
   954     0016                     l699:	
   955                           ;incstack = 0
   956                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
   957                           
   958     0016  3000               	movlw	0
   959     0017  1283               	bcf	3,5	;RP0=0, select bank0
   960     0018  1303               	bcf	3,6	;RP1=0, select bank0
   961     0019  00A3               	movwf	___lldiv@quotient+3
   962     001A  3000               	movlw	0
   963     001B  00A2               	movwf	___lldiv@quotient+2
   964     001C  3000               	movlw	0
   965     001D  00A1               	movwf	___lldiv@quotient+1
   966     001E  3000               	movlw	0
   967     001F  00A0               	movwf	___lldiv@quotient
   968     0020  0875               	movf	___lldiv@divisor+3,w
   969     0021  0474               	iorwf	___lldiv@divisor+2,w
   970     0022  0473               	iorwf	___lldiv@divisor+1,w
   971     0023  0472               	iorwf	___lldiv@divisor,w
   972     0024  1903               	skipnz
   973     0025  2827               	goto	u161
   974     0026  2828               	goto	u160
   975     0027                     u161:
   976     0027  2875               	goto	l721
   977     0028                     u160:
   978     0028                     l701:
   979     0028  01A4               	clrf	___lldiv@counter
   980     0029  0AA4               	incf	___lldiv@counter,f
   981     002A  2838               	goto	l707
   982     002B                     l703:
   983     002B  3001               	movlw	1
   984     002C  00FA               	movwf	??___lldiv
   985     002D                     u175:
   986     002D  1003               	clrc
   987     002E  0DF2               	rlf	___lldiv@divisor,f
   988     002F  0DF3               	rlf	___lldiv@divisor+1,f
   989     0030  0DF4               	rlf	___lldiv@divisor+2,f
   990     0031  0DF5               	rlf	___lldiv@divisor+3,f
   991     0032  0BFA               	decfsz	??___lldiv,f
   992     0033  282D               	goto	u175
   993     0034                     l705:
   994     0034  3001               	movlw	1
   995     0035  00FF               	movwf	btemp+1
   996     0036  087F               	movf	btemp+1,w
   997     0037  07A4               	addwf	___lldiv@counter,f
   998     0038                     l707:
   999     0038  1FF5               	btfss	___lldiv@divisor+3,7
  1000     0039  283B               	goto	u181
  1001     003A  283C               	goto	u180
  1002     003B                     u181:
  1003     003B  282B               	goto	l703
  1004     003C                     u180:
  1005     003C                     l709:
  1006     003C  3001               	movlw	1
  1007     003D  00FA               	movwf	??___lldiv
  1008     003E                     u195:
  1009     003E  1003               	clrc
  1010     003F  0DA0               	rlf	___lldiv@quotient,f
  1011     0040  0DA1               	rlf	___lldiv@quotient+1,f
  1012     0041  0DA2               	rlf	___lldiv@quotient+2,f
  1013     0042  0DA3               	rlf	___lldiv@quotient+3,f
  1014     0043  0BFA               	decfsz	??___lldiv,f
  1015     0044  283E               	goto	u195
  1016     0045                     l711:
  1017     0045  0875               	movf	___lldiv@divisor+3,w
  1018     0046  0279               	subwf	___lldiv@dividend+3,w
  1019     0047  1D03               	skipz
  1020     0048  2853               	goto	u205
  1021     0049  0874               	movf	___lldiv@divisor+2,w
  1022     004A  0278               	subwf	___lldiv@dividend+2,w
  1023     004B  1D03               	skipz
  1024     004C  2853               	goto	u205
  1025     004D  0873               	movf	___lldiv@divisor+1,w
  1026     004E  0277               	subwf	___lldiv@dividend+1,w
  1027     004F  1D03               	skipz
  1028     0050  2853               	goto	u205
  1029     0051  0872               	movf	___lldiv@divisor,w
  1030     0052  0276               	subwf	___lldiv@dividend,w
  1031     0053                     u205:
  1032     0053  1C03               	skipc
  1033     0054  2856               	goto	u201
  1034     0055  2857               	goto	u200
  1035     0056                     u201:
  1036     0056  2866               	goto	l717
  1037     0057                     u200:
  1038     0057                     l713:
  1039     0057  0872               	movf	___lldiv@divisor,w
  1040     0058  02F6               	subwf	___lldiv@dividend,f
  1041     0059  0873               	movf	___lldiv@divisor+1,w
  1042     005A  1C03               	skipc
  1043     005B  0F73               	incfsz	___lldiv@divisor+1,w
  1044     005C  02F7               	subwf	___lldiv@dividend+1,f
  1045     005D  0874               	movf	___lldiv@divisor+2,w
  1046     005E  1C03               	skipc
  1047     005F  0F74               	incfsz	___lldiv@divisor+2,w
  1048     0060  02F8               	subwf	___lldiv@dividend+2,f
  1049     0061  0875               	movf	___lldiv@divisor+3,w
  1050     0062  1C03               	skipc
  1051     0063  0F75               	incfsz	___lldiv@divisor+3,w
  1052     0064  02F9               	subwf	___lldiv@dividend+3,f
  1053     0065                     l715:
  1054     0065  1420               	bsf	___lldiv@quotient,0
  1055     0066                     l717:
  1056     0066  3001               	movlw	1
  1057     0067                     u215:
  1058     0067  1003               	clrc
  1059     0068  0CF5               	rrf	___lldiv@divisor+3,f
  1060     0069  0CF4               	rrf	___lldiv@divisor+2,f
  1061     006A  0CF3               	rrf	___lldiv@divisor+1,f
  1062     006B  0CF2               	rrf	___lldiv@divisor,f
  1063     006C  3EFF               	addlw	-1
  1064     006D  1D03               	skipz
  1065     006E  2867               	goto	u215
  1066     006F                     l719:
  1067     006F  3001               	movlw	1
  1068     0070  02A4               	subwf	___lldiv@counter,f
  1069     0071  1D03               	btfss	3,2
  1070     0072  2874               	goto	u221
  1071     0073  2875               	goto	u220
  1072     0074                     u221:
  1073     0074  283C               	goto	l709
  1074     0075                     u220:
  1075     0075                     l721:
  1076     0075  0823               	movf	___lldiv@quotient+3,w
  1077     0076  00F5               	movwf	?___lldiv+3
  1078     0077  0822               	movf	___lldiv@quotient+2,w
  1079     0078  00F4               	movwf	?___lldiv+2
  1080     0079  0821               	movf	___lldiv@quotient+1,w
  1081     007A  00F3               	movwf	?___lldiv+1
  1082     007B  0820               	movf	___lldiv@quotient,w
  1083     007C  00F2               	movwf	?___lldiv
  1084     007D                     l199:
  1085     007D  0008               	return
  1086     007E                     __end_of___lldiv:
  1087                           
  1088                           	psect	text6
  1089     015C                     __ptext6:	
  1090 ;; *************** function _isr *****************
  1091 ;; Defined at:
  1092 ;;		line 10 in file "isr.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0
  1108 ;;      Temps:          2       0       0       0       0
  1109 ;;      Totals:         2       0       0       0       0
  1110 ;;Total ram usage:        2 bytes
  1111 ;; Hardware stack levels used: 1
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		Interrupt level 1
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119     015C                     _isr:	
  1120                           ;psect for function _isr
  1121                           
  1122     015C                     i1l763:
  1123                           
  1124                           ;isr.c: 12:     if(RCIF == 1)
  1125     015C  1283               	bcf	3,5	;RP0=0, select bank0
  1126     015D  1303               	bcf	3,6	;RP1=0, select bank0
  1127     015E  1E8C               	btfss	12,5	;volatile
  1128     015F  2961               	goto	u27_21
  1129     0160  2962               	goto	u27_20
  1130     0161                     u27_21:
  1131     0161  296A               	goto	i1l77
  1132     0162                     u27_20:
  1133     0162                     i1l765:
  1134                           
  1135                           ;isr.c: 13:     {;isr.c: 14:         if(OERR == 1)
  1136     0162  1C98               	btfss	24,1	;volatile
  1137     0163  2965               	goto	u28_21
  1138     0164  2966               	goto	u28_20
  1139     0165                     u28_21:
  1140     0165  2967               	goto	i1l769
  1141     0166                     u28_20:
  1142     0166                     i1l767:
  1143                           
  1144                           ;isr.c: 15:             OERR = 0;
  1145     0166  1098               	bcf	24,1	;volatile
  1146     0167                     i1l769:
  1147                           
  1148                           ;isr.c: 17:         ch = RCREG;
  1149     0167  081A               	movf	26,w	;volatile
  1150     0168  00B1               	movwf	_ch
  1151     0169                     i1l771:
  1152                           
  1153                           ;isr.c: 18:         RCIF = 0;
  1154     0169  128C               	bcf	12,5	;volatile
  1155     016A                     i1l77:
  1156     016A  0871               	movf	??_isr+1,w
  1157     016B  008A               	movwf	10
  1158     016C  0E70               	swapf	??_isr,w
  1159     016D  0083               	movwf	3
  1160     016E  0EFE               	swapf	btemp,f
  1161     016F  0E7E               	swapf	btemp,w
  1162     0170  0009               	retfie
  1163     0171                     __end_of_isr:
  1164     007E                     btemp	set	126	;btemp
  1165     007E                     wtemp0	set	126
  1166                           
  1167                           	psect	intentry
  1168     0004                     __pintentry:	
  1169                           ;incstack = 0
  1170                           ; Regs used in _isr: [wreg]
  1171                           
  1172     0004                     interrupt_function:
  1173     007E                     saved_w	set	btemp
  1174     0004  00FE               	movwf	btemp
  1175     0005  0E03               	swapf	3,w
  1176     0006  00F0               	movwf	??_isr
  1177     0007  080A               	movf	10,w
  1178     0008  00F1               	movwf	??_isr+1
  1179     0009  120A  118A  295C   	ljmp	_isr
  1180                           
  1181                           	psect	config
  1182                           
  1183                           ;Config register CONFIG @ 0x2007
  1184                           ;	Oscillator Selection bits
  1185                           ;	FOSC = 0x3, unprogrammed default
  1186                           ;	Watchdog Timer Enable bit
  1187                           ;	WDTE = OFF, WDT disabled
  1188                           ;	Power-up Timer Enable bit
  1189                           ;	PWRTE = 0x1, unprogrammed default
  1190                           ;	Brown-out Reset Enable bit
  1191                           ;	BOREN = 0x1, unprogrammed default
  1192                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1193                           ;	LVP = 0x1, unprogrammed default
  1194                           ;	Data EEPROM Memory Code Protection bit
  1195                           ;	CPD = 0x1, unprogrammed default
  1196                           ;	Flash Program Memory Write Enable bits
  1197                           ;	WRT = 0x3, unprogrammed default
  1198                           ;	In-Circuit Debugger Mode bit
  1199                           ;	DEBUG = 0x1, unprogrammed default
  1200                           ;	Flash Program Memory Code Protection bit
  1201                           ;	CP = 0x1, unprogrammed default
  1202     2007                     	org	8199
  1203     2007  3FFB               	dw	16379

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     17      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    puts@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _puts->_putchar
    _init_uart->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _init_config->_init_uart
    _init_uart->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     558
                                             13 BANK0      4     4      0
                        _init_config
                            _putchar
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     512
                          _init_uart
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 1     1      0     100
                                              3 COMMON     1     1      0
                            _putchar
 ---------------------------------------------------------------------------------
 (1) _putchar                                              1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_uart
       ___lldiv
     _puts
       _putchar
   _putchar

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Oct 27 17:24:19 2023

                      pc 0002                       l21 0144                       l50 0108  
                     l53 0176                       l62 0127                       l55 017A  
                     l56 017B                       _ch 0031                       fsr 0004  
                    l701 0028                      l199 007D                      l711 0045  
                    l703 002B                      l713 0057                      l705 0034  
                    l721 0075                      l715 0065                      l707 0038  
                    l731 010B                      l717 0066                      l709 003C  
                    l725 00CE                      l733 0117                      l741 012F  
                    l719 006F                      l727 00DB                      l735 011B  
                    l743 013C                      l751 0083                      l729 010A  
                    l745 013D                      l737 0128                      l761 00BE  
                    l753 008D                      l747 013E                      l739 012C  
                    l755 0094                      l757 00A0                      l749 007E  
                    l759 00A3                      l697 0172                      l699 0016  
                    _GIE 005F                      _RD1 0041                      u200 0057  
                    u201 0056                      u220 0075                      u221 0074  
                    u205 0053                      u230 00EB                      u150 017A  
                    u215 0067                      u151 0179                      u160 0028  
                    u240 0127                      u161 0027                      u241 0126  
                    u250 0094                      u235 00E6                      u251 0093  
                    u180 003C                      u260 00BE                      u181 003B  
                    u261 00BD                      u175 002D                      u195 003E  
                    _isr 015C                      fsr0 0004                     ?_isr 0070  
                   STR_1 014B                     _BRGH 04C2                     _CREN 00C4  
                   _PEIE 005E                     _RCIE 0465                     _RCIF 0065  
                   i1l77 016A                     _OERR 00C1                     _SPEN 00C7  
                   _TXEN 04C5                     _TXIF 0064                     _main 007E  
                   btemp 007E                     _puts 0109                     start 000C  
                  ??_isr 0070                    ?_main 0070                    ?_puts 0070  
        __end_of___lldiv 007E             ?_init_config 0070                    i1l771 0169  
                  i1l763 015C                    i1l765 0162                    i1l767 0166  
                  i1l769 0167                    _RCREG 001A                    _SPBRG 0099  
                  u27_20 0162                    u27_21 0161                    u28_20 0166  
                  u28_21 0165                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019                    pclath 000A          __end_of_putchar 017C  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00CE             __end_of_puts 0128                   ??_main 007B  
                 ??_puts 0073                ??___lldiv 007A                   saved_w 007E  
              ??_putchar 0072  __end_of__initialization 0012           __pcstackCOMMON 0070  
     init_uart@baud_rate 0025               __pbssBANK0 0031               __pmaintext 007E  
             __pintentry 0004               __stringtab 0145                  ___lldiv 0016  
                __ptext1 0128                  __ptext2 0109                  __ptext3 0171  
                __ptext4 00CE                  __ptext5 0016                  __ptext6 015C  
      __end_of_init_uart 0109                  _putchar 0171     end_of_initialization 0012  
        ___lldiv@divisor 0072          ___lldiv@counter 0024                  puts@str 0073  
    start_initialization 000F              __end_of_isr 0171            ??_init_config 007B  
              ___latbits 0002            __pcstackBANK0 0020                 ?___lldiv 0072  
              __pstrings 0145                 ?_putchar 0070      __end_of_init_config 0145  
              _init_uart 00CE        interrupt_function 0004              __stringbase 014A  
             ?_init_uart 0025       __end_of__stringtab 014B              _init_config 0128  
               main@wait 002D                putchar@ch 0072              ??_init_uart 0029  
               intlevel1 0000         ___lldiv@dividend 0076                stringcode 0145  
       ___lldiv@quotient 0020                 stringdir 0145                 stringtab 0145  
