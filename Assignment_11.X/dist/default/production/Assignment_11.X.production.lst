

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Oct 26 21:51:25 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 22/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0008                     	;# 
   183     0009                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     0088                     	;# 
   214     0089                     	;# 
   215     008C                     	;# 
   216     008D                     	;# 
   217     008E                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     010C                     	;# 
   229     010D                     	;# 
   230     010E                     	;# 
   231     010F                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234                           
   235                           	psect	idataBANK0
   236     06A3                     __pidataBANK0:
   237                           
   238                           ;initializer for main@F1186
   239     06A3  345F               	retlw	95
   240     06A4  345F               	retlw	95
   241     06A5  3447               	retlw	71
   242     06A6  346F               	retlw	111
   243     06A7  346F               	retlw	111
   244     06A8  3464               	retlw	100
   245     06A9  3420               	retlw	32
   246     06AA  344D               	retlw	77
   247     06AB  346F               	retlw	111
   248     06AC  3472               	retlw	114
   249     06AD  346E               	retlw	110
   250     06AE  3469               	retlw	105
   251     06AF  346E               	retlw	110
   252     06B0  3467               	retlw	103
   253     06B1  345F               	retlw	95
   254     06B2  345F               	retlw	95
   255     06B3  3400               	retlw	0
   256     0008                     _PORTD	set	8
   257     0049                     _RE1	set	73
   258     004A                     _RE2	set	74
   259     0088                     _TRISD	set	136
   260     0449                     _TRISE1	set	1097
   261     044A                     _TRISE2	set	1098
   262                           
   263                           	psect	strings
   264     0003                     __pstrings:
   265     0003                     stringtab:
   266     0003                     __stringtab:
   267                           
   268                           ;	String table - string pointers are 1 byte each
   269     0003  1BFF               	btfsc	btemp+1,7
   270     0004  280D               	ljmp	stringcode
   271     0005  1383               	bcf	3,7
   272     0006  187F               	btfsc	btemp+1,0
   273     0007  1783               	bsf	3,7
   274     0008  0800               	movf	0,w
   275     0009  0A84               	incf	4,f
   276     000A  1903               	skipnz
   277     000B  0AFF               	incf	btemp+1,f
   278     000C  0008               	return
   279     000D                     stringcode:
   280     000D                     stringdir:
   281     000D  3000               	movlw	high stringdir
   282     000E  008A               	movwf	10
   283     000F  0804               	movf	4,w
   284     0010  0A84               	incf	4,f
   285     0011  0782               	addwf	2,f
   286     0012                     __stringbase:
   287     0012  3400               	retlw	0
   288     0013                     __end_of__stringtab:
   289     0013                     STR_1:
   290     0013  3452               	retlw	82	;'R'
   291     0014  3469               	retlw	105	;'i'
   292     0015  3467               	retlw	103	;'g'
   293     0016  3468               	retlw	104	;'h'
   294     0017  3474               	retlw	116	;'t'
   295     0018  3420               	retlw	32	;' '
   296     0019  3453               	retlw	83	;'S'
   297     001A  3463               	retlw	99	;'c'
   298     001B  3472               	retlw	114	;'r'
   299     001C  346F               	retlw	111	;'o'
   300     001D  346C               	retlw	108	;'l'
   301     001E  346C               	retlw	108	;'l'
   302     001F  3469               	retlw	105	;'i'
   303     0020  346E               	retlw	110	;'n'
   304     0021  3467               	retlw	103	;'g'
   305     0022  3400               	retlw	0
   306                           
   307                           	psect	cinit
   308     07EE                     start_initialization:	
   309                           ; #config settings
   310                           
   311     07EE                     __initialization:
   312                           
   313                           ; Initialize objects allocated to BANK0
   314     07EE  1383               	bcf	3,7	;select IRP bank0
   315     07EF  3047               	movlw	low (__pdataBANK0+17)
   316     07F0  00FD               	movwf	btemp+-1
   317     07F1  3006               	movlw	high __pidataBANK0
   318     07F2  00FE               	movwf	btemp
   319     07F3  30A3               	movlw	low __pidataBANK0
   320     07F4  00FF               	movwf	btemp+1
   321     07F5  3036               	movlw	low __pdataBANK0
   322     07F6  0084               	movwf	4
   323     07F7  120A  118A  26B8  120A  118A  	fcall	init_ram0
   324     07FC                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327     07FC                     __end_of__initialization:
   328     07FC  0183               	clrf	3
   329     07FD  120A  118A  2F76   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	dataBANK0
   332     0036                     __pdataBANK0:
   333     0036                     main@F1186:
   334     0036                     	ds	17
   335                           
   336                           	psect	inittext
   337     06B4                     init_fetch0:	
   338                           ;	Called with low address in FSR and high address in W
   339                           
   340     06B4  087E               	movf	btemp,w
   341     06B5  008A               	movwf	10
   342     06B6  087F               	movf	btemp+1,w
   343     06B7  0082               	movwf	2
   344     06B8                     init_ram0:	
   345                           ;Called with:
   346                           ;	high address of idata address in btemp 
   347                           ;	low address of idata address in btemp+1 
   348                           ;	low address of data in FSR
   349                           ;	high address + 1 of data in btemp-1
   350                           
   351     06B8  120A  118A  26B4  120A  118A  	fcall	init_fetch0
   352     06BD  0080               	movwf	0
   353     06BE  0A84               	incf	4,f
   354     06BF  0804               	movf	4,w
   355     06C0  067D               	xorwf	btemp+-1,w
   356     06C1  1903               	btfsc	3,2
   357     06C2  3400               	retlw	0
   358     06C3  0AFF               	incf	btemp+1,f
   359     06C4  1903               	btfsc	3,2
   360     06C5  0AFE               	incf	btemp,f
   361     06C6  2EB8               	goto	init_ram0
   362                           
   363                           	psect	cstackCOMMON
   364     0070                     __pcstackCOMMON:
   365     0070                     ?_init_display_controller:
   366     0070                     ?_clcd_write:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ?_init_display:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ?_init_config:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     ?_main:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     clcd_write@byte:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383     0070                     	ds	1
   384     0071                     ??_clcd_write:
   385                           
   386                           ; 1 bytes @ 0x1
   387     0071                     	ds	2
   388     0073                     clcd_write@mode:
   389                           
   390                           ; 1 bytes @ 0x3
   391     0073                     	ds	1
   392     0074                     ??_init_display_controller:
   393     0074                     ?_clcd_putstr:	
   394                           ; 1 bytes @ 0x4
   395                           
   396     0074                     clcd_putstr@str:	
   397                           ; 1 bytes @ 0x4
   398                           
   399                           
   400                           ; 2 bytes @ 0x4
   401     0074                     	ds	2
   402     0076                     ??_init_display:
   403     0076                     ??_init_config:	
   404                           ; 1 bytes @ 0x6
   405                           
   406     0076                     clcd_putstr@addr:	
   407                           ; 1 bytes @ 0x6
   408                           
   409                           
   410                           ; 1 bytes @ 0x6
   411     0076                     	ds	1
   412     0077                     ??_clcd_putstr:
   413     0077                     ??_main:	
   414                           ; 1 bytes @ 0x7
   415                           
   416                           
   417                           ; 1 bytes @ 0x7
   418     0077                     	ds	4
   419                           
   420                           	psect	cstackBANK0
   421     0020                     __pcstackBANK0:
   422     0020                     main@str:
   423                           
   424                           ; 17 bytes @ 0x0
   425     0020                     	ds	17
   426     0031                     main@wait:
   427                           
   428                           ; 2 bytes @ 0x11
   429     0031                     	ds	2
   430     0033                     main@temp:
   431                           
   432                           ; 1 bytes @ 0x13
   433     0033                     	ds	1
   434     0034                     main@i:
   435                           
   436                           ; 2 bytes @ 0x14
   437     0034                     	ds	2
   438                           
   439                           	psect	maintext
   440     0776                     __pmaintext:	
   441 ;;
   442 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   443 ;;
   444 ;; *************** function _main *****************
   445 ;; Defined at:
   446 ;;		line 17 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  i               2   20[BANK0 ] int 
   451 ;;  str            17    0[BANK0 ] unsigned char [17]
   452 ;;  wait            2   17[BANK0 ] int 
   453 ;;  temp            1   19[BANK0 ] unsigned char 
   454 ;;  prekey          1    0        unsigned char 
   455 ;;  key             1    0        unsigned char 
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : B00/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0      22       0       0       0
   467 ;;      Temps:          4       0       0       0       0
   468 ;;      Totals:         4      22       0       0       0
   469 ;;Total ram usage:       26 bytes
   470 ;; Hardware stack levels required when called: 4
   471 ;; This function calls:
   472 ;;		_clcd_putstr
   473 ;;		_init_config
   474 ;; This function is called by:
   475 ;;		Startup code after reset
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479     0776                     _main:	
   480                           ;psect for function _main
   481                           
   482     0776                     l726:	
   483                           ;incstack = 0
   484                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   485                           
   486                           
   487                           ;main.c: 18:             temp = str[15];
   488     0776  120A  118A  2692  120A  118A  	fcall	_init_config
   489     077B                     l728:
   490                           
   491                           ;main.c: 19:             for(int i = 15; i >0; i--)
   492     077B  3020               	movlw	main@str& (0+255)
   493     077C  0084               	movwf	4
   494     077D  3036               	movlw	low main@F1186
   495     077E  00F7               	movwf	??_main
   496     077F  0804               	movf	4,w
   497     0780  00F8               	movwf	??_main+1
   498     0781  3011               	movlw	17
   499     0782  00F9               	movwf	??_main+2
   500     0783                     u100:
   501     0783  0877               	movf	??_main,w
   502     0784  0084               	movwf	4
   503     0785  1383               	bcf	3,7	;select IRP bank0
   504     0786  0800               	movf	0,w
   505     0787  00FA               	movwf	??_main+3
   506     0788  0AF7               	incf	??_main,f
   507     0789  0878               	movf	??_main+1,w
   508     078A  0084               	movwf	4
   509     078B  087A               	movf	??_main+3,w
   510     078C  0080               	movwf	0
   511     078D  0AF8               	incf	??_main+1,f
   512     078E  0BF9               	decfsz	??_main+2,f
   513     078F  2F83               	goto	u100
   514     0790                     l730:
   515                           
   516                           ;main.c: 20:             {;main.c: 21:                 str[i] = str[i-1];
   517     0790  1283               	bcf	3,5	;RP0=0, select bank0
   518     0791  1303               	bcf	3,6	;RP1=0, select bank0
   519     0792  01B1               	clrf	main@wait
   520     0793  01B2               	clrf	main@wait+1
   521     0794                     l732:
   522                           
   523                           ;main.c: 26:         }
   524     0794  3001               	movlw	1
   525     0795  1283               	bcf	3,5	;RP0=0, select bank0
   526     0796  1303               	bcf	3,6	;RP1=0, select bank0
   527     0797  07B1               	addwf	main@wait,f
   528     0798  1803               	skipnc
   529     0799  0AB2               	incf	main@wait+1,f
   530     079A  3000               	movlw	0
   531     079B  07B2               	addwf	main@wait+1,f
   532     079C  3089               	movlw	137
   533     079D  0631               	xorwf	main@wait,w
   534     079E  3013               	movlw	19
   535     079F  1903               	skipnz
   536     07A0  0632               	xorwf	main@wait+1,w
   537     07A1  1D03               	btfss	3,2
   538     07A2  2FA4               	goto	u111
   539     07A3  2FA5               	goto	u110
   540     07A4                     u111:
   541     07A4  2F94               	goto	l732
   542     07A5                     u110:
   543     07A5                     l734:
   544                           
   545                           ;main.c: 27: ;main.c: 28:     }
   546     07A5  01B1               	clrf	main@wait
   547     07A6  01B2               	clrf	main@wait+1
   548     07A7                     l736:
   549                           
   550                           ;main.c: 29:     return;
   551     07A7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   552     07A8  00F4               	movwf	clcd_putstr@str
   553     07A9  3080               	movlw	128
   554     07AA  00F5               	movwf	clcd_putstr@str+1
   555     07AB  3080               	movlw	128
   556     07AC  00F6               	movwf	clcd_putstr@addr
   557     07AD  120A  118A  26E7  120A  118A  	fcall	_clcd_putstr
   558     07B2                     l738:
   559                           
   560                           ;main.c: 30: }
   561     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   562     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   563     07B4  082F               	movf	main@str+15,w
   564     07B5  00B3               	movwf	main@temp
   565     07B6                     l740:
   566     07B6  300F               	movlw	15
   567     07B7  00B4               	movwf	main@i
   568     07B8  3000               	movlw	0
   569     07B9  00B5               	movwf	main@i+1
   570     07BA                     l746:
   571     07BA  1283               	bcf	3,5	;RP0=0, select bank0
   572     07BB  1303               	bcf	3,6	;RP1=0, select bank0
   573     07BC  0834               	movf	main@i,w
   574     07BD  3EFF               	addlw	255
   575     07BE  3E20               	addlw	(low (main@str| 0))& (0+255)
   576     07BF  0084               	movwf	4
   577     07C0  1383               	bcf	3,7	;select IRP bank0
   578     07C1  0800               	movf	0,w
   579     07C2  00FF               	movwf	btemp+1
   580     07C3  0834               	movf	main@i,w
   581     07C4  3E20               	addlw	(low (main@str| 0))& (0+255)
   582     07C5  0084               	movwf	4
   583     07C6  087F               	movf	btemp+1,w
   584     07C7  0080               	movwf	0
   585     07C8                     l748:
   586     07C8  30FF               	movlw	255
   587     07C9  07B4               	addwf	main@i,f
   588     07CA  1803               	skipnc
   589     07CB  0AB5               	incf	main@i+1,f
   590     07CC  30FF               	movlw	255
   591     07CD  07B5               	addwf	main@i+1,f
   592     07CE                     l750:
   593     07CE  0835               	movf	main@i+1,w
   594     07CF  3A80               	xorlw	128
   595     07D0  00FF               	movwf	btemp+1
   596     07D1  3080               	movlw	128
   597     07D2  027F               	subwf	btemp+1,w
   598     07D3  1D03               	skipz
   599     07D4  2FD7               	goto	u125
   600     07D5  3001               	movlw	1
   601     07D6  0234               	subwf	main@i,w
   602     07D7                     u125:
   603     07D7  1803               	skipnc
   604     07D8  2FDA               	goto	u121
   605     07D9  2FDB               	goto	u120
   606     07DA                     u121:
   607     07DA  2FBA               	goto	l746
   608     07DB                     u120:
   609     07DB                     l752:
   610     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   611     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   612     07DD  0833               	movf	main@temp,w
   613     07DE  00A0               	movwf	main@str
   614     07DF                     l754:
   615     07DF  3020               	movlw	(low (main@str| 0))& (0+255)
   616     07E0  00F4               	movwf	clcd_putstr@str
   617     07E1  3000               	movlw	0
   618     07E2  00F5               	movwf	clcd_putstr@str+1
   619     07E3  30C0               	movlw	192
   620     07E4  00F6               	movwf	clcd_putstr@addr
   621     07E5  120A  118A  26E7  120A  118A  	fcall	_clcd_putstr
   622     07EA  2F94               	goto	l732
   623     07EB  120A  118A  2800   	ljmp	start
   624     07EE                     __end_of_main:
   625                           
   626                           	psect	text1
   627     0692                     __ptext1:	
   628 ;; *************** function _init_config *****************
   629 ;; Defined at:
   630 ;;		line 12 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; Hardware stack levels required when called: 3
   651 ;; This function calls:
   652 ;;		_init_display
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658     0692                     _init_config:	
   659                           ;psect for function _init_config
   660                           
   661     0692                     l722:	
   662                           ;incstack = 0
   663                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   664                           
   665                           
   666                           ;main.c: 14:         if(wait++ == 5000)
   667     0692  120A  118A  2698  120A  118A  	fcall	_init_display
   668     0697                     l43:
   669     0697  0008               	return
   670     0698                     __end_of_init_config:
   671                           
   672                           	psect	text2
   673     0698                     __ptext2:	
   674 ;; *************** function _init_display *****************
   675 ;; Defined at:
   676 ;;		line 10 in file "clcd.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2, status,0, pclath, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0
   693 ;;      Totals:         0       0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; Hardware stack levels required when called: 2
   697 ;; This function calls:
   698 ;;		_init_display_controller
   699 ;; This function is called by:
   700 ;;		_init_config
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704     0698                     _init_display:	
   705                           ;psect for function _init_display
   706                           
   707     0698                     l706:	
   708                           ;incstack = 0
   709                           ; Regs used in _init_display: [wreg+status,2+status,0+pclath+cstack]
   710                           
   711                           
   712                           ;clcd.c: 12:     TRISD = 0x00;
   713     0698  1683               	bsf	3,5	;RP0=1, select bank1
   714     0699  1303               	bcf	3,6	;RP1=0, select bank1
   715     069A  0188               	clrf	8	;volatile
   716     069B                     l708:
   717                           
   718                           ;clcd.c: 13:     TRISE2 = 0;
   719     069B  1109               	bcf	9,2	;volatile
   720     069C                     l710:
   721                           
   722                           ;clcd.c: 14:     TRISE1 = 0;
   723     069C  1089               	bcf	9,1	;volatile
   724     069D                     l712:
   725                           
   726                           ;clcd.c: 16:     init_display_controller();
   727     069D  120A  118A  2717  120A  118A  	fcall	_init_display_controller
   728     06A2                     l21:
   729     06A2  0008               	return
   730     06A3                     __end_of_init_display:
   731                           
   732                           	psect	text3
   733     0717                     __ptext3:	
   734 ;; *************** function _init_display_controller *****************
   735 ;; Defined at:
   736 ;;		line 19 in file "clcd.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0, pclath, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0
   752 ;;      Temps:          2       0       0       0       0
   753 ;;      Totals:         2       0       0       0       0
   754 ;;Total ram usage:        2 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; Hardware stack levels required when called: 1
   757 ;; This function calls:
   758 ;;		_clcd_write
   759 ;; This function is called by:
   760 ;;		_init_display
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764     0717                     _init_display_controller:	
   765                           ;psect for function _init_display_controller
   766                           
   767     0717                     l686:	
   768                           ;incstack = 0
   769                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   770                           
   771                           
   772                           ;clcd.c: 21:     _delay((unsigned long)((30)*(20000000/4000.0)));
   773     0717  30C3               	movlw	195
   774     0718  00F5               	movwf	??_init_display_controller+1
   775     0719  30CD               	movlw	205
   776     071A  00F4               	movwf	??_init_display_controller
   777     071B                     u137:
   778     071B  0BF4               	decfsz	??_init_display_controller,f
   779     071C  2F1B               	goto	u137
   780     071D  0BF5               	decfsz	??_init_display_controller+1,f
   781     071E  2F1B               	goto	u137
   782     071F                     l688:
   783                           
   784                           ;clcd.c: 23:     clcd_write(0, 0x33);
   785     071F  3033               	movlw	51
   786     0720  00F0               	movwf	clcd_write@byte
   787     0721  3000               	movlw	0
   788     0722  120A  118A  26C7  120A  118A  	fcall	_clcd_write
   789     0727                     l690:
   790                           
   791                           ;clcd.c: 24:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   792     0727  301B               	movlw	27
   793     0728  00F5               	movwf	??_init_display_controller+1
   794     0729  309E               	movlw	158
   795     072A  00F4               	movwf	??_init_display_controller
   796     072B                     u147:
   797     072B  0BF4               	decfsz	??_init_display_controller,f
   798     072C  2F2B               	goto	u147
   799     072D  0BF5               	decfsz	??_init_display_controller+1,f
   800     072E  2F2B               	goto	u147
   801     072F  0000               	nop
   802                           
   803                           ;clcd.c: 26:     clcd_write(0, 0x33);
   804     0730  3033               	movlw	51
   805     0731  00F0               	movwf	clcd_write@byte
   806     0732  3000               	movlw	0
   807     0733  120A  118A  26C7  120A  118A  	fcall	_clcd_write
   808     0738                     l692:
   809                           
   810                           ;clcd.c: 27:     _delay((unsigned long)((200)*(20000000/4000000.0)));
   811     0738  30C7               	movlw	199
   812     0739  00F4               	movwf	??_init_display_controller
   813     073A                     u157:
   814     073A  2F3B               	nop2
   815     073B  0BF4               	decfsz	??_init_display_controller,f
   816     073C  2F3A               	goto	u157
   817     073D  2F3E               	nop2
   818     073E  2F3F               	nop2
   819     073F                     l694:
   820                           
   821                           ;clcd.c: 29:     clcd_write(0, 0x33);
   822     073F  3033               	movlw	51
   823     0740  00F0               	movwf	clcd_write@byte
   824     0741  3000               	movlw	0
   825     0742  120A  118A  26C7  120A  118A  	fcall	_clcd_write
   826     0747                     l696:
   827                           
   828                           ;clcd.c: 30:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   829     0747  2F48               	nop2	;2 cycle nop
   830     0748  2F49               	nop2	;2 cycle nop
   831     0749  0000               	nop
   832     074A                     l698:
   833                           
   834                           ;clcd.c: 32:     clcd_write(0, 0x38);
   835     074A  3038               	movlw	56
   836     074B  00F0               	movwf	clcd_write@byte
   837     074C  3000               	movlw	0
   838     074D  120A  118A  26C7  120A  118A  	fcall	_clcd_write
   839     0752                     l700:
   840                           
   841                           ;clcd.c: 33:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   842     0752  30A6               	movlw	166
   843     0753  00F4               	movwf	??_init_display_controller
   844     0754                     u167:
   845     0754  0BF4               	decfsz	??_init_display_controller,f
   846     0755  2F54               	goto	u167
   847     0756  0000               	nop
   848                           
   849                           ;clcd.c: 35:     clcd_write(0, 0x01);
   850     0757  01F0               	clrf	clcd_write@byte
   851     0758  0AF0               	incf	clcd_write@byte,f
   852     0759  3000               	movlw	0
   853     075A  120A  118A  26C7  120A  118A  	fcall	_clcd_write
   854     075F                     l702:
   855                           
   856                           ;clcd.c: 36:     _delay((unsigned long)((500)*(20000000/4000000.0)));
   857     075F  3004               	movlw	4
   858     0760  00F5               	movwf	??_init_display_controller+1
   859     0761  303D               	movlw	61
   860     0762  00F4               	movwf	??_init_display_controller
   861     0763                     u177:
   862     0763  0BF4               	decfsz	??_init_display_controller,f
   863     0764  2F63               	goto	u177
   864     0765  0BF5               	decfsz	??_init_display_controller+1,f
   865     0766  2F63               	goto	u177
   866     0767  2F68               	nop2
   867     0768                     l704:
   868                           
   869                           ;clcd.c: 38:     clcd_write(0, 0x0C);
   870     0768  300C               	movlw	12
   871     0769  00F0               	movwf	clcd_write@byte
   872     076A  3000               	movlw	0
   873     076B  120A  118A  26C7  120A  118A  	fcall	_clcd_write
   874                           
   875                           ;clcd.c: 39:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   876     0770  30A6               	movlw	166
   877     0771  00F4               	movwf	??_init_display_controller
   878     0772                     u187:
   879     0772  0BF4               	decfsz	??_init_display_controller,f
   880     0773  2F72               	goto	u187
   881     0774  0000               	nop
   882     0775                     l24:
   883     0775  0008               	return
   884     0776                     __end_of_init_display_controller:
   885                           
   886                           	psect	text4
   887     06E7                     __ptext4:	
   888 ;; *************** function _clcd_putstr *****************
   889 ;; Defined at:
   890 ;;		line 62 in file "clcd.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  str             2    4[COMMON] PTR unsigned char 
   893 ;;		 -> STR_1(16), main@str(17), 
   894 ;;  addr            1    6[COMMON] unsigned char 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         3       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0
   909 ;;      Totals:         3       0       0       0       0
   910 ;;Total ram usage:        3 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; Hardware stack levels required when called: 1
   913 ;; This function calls:
   914 ;;		_clcd_write
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920     06E7                     _clcd_putstr:	
   921                           ;psect for function _clcd_putstr
   922                           
   923     06E7                     l714:	
   924                           ;incstack = 0
   925                           ; Regs used in _clcd_putstr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   926                           
   927                           
   928                           ;clcd.c: 62: void clcd_putstr(char *str, char addr);clcd.c: 63: {;clcd.c: 64:     clcd_w
      +                          rite(0, addr);
   929     06E7  0876               	movf	clcd_putstr@addr,w
   930     06E8  00F0               	movwf	clcd_write@byte
   931     06E9  3000               	movlw	0
   932     06EA  120A  118A  26C7  120A  118A  	fcall	_clcd_write
   933                           
   934                           ;clcd.c: 66:     while(*str != '\0')
   935     06EF  2F06               	goto	l720
   936     06F0                     l716:
   937                           
   938                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(1, *str);
   939     06F0  0875               	movf	clcd_putstr@str+1,w
   940     06F1  00FF               	movwf	btemp+1
   941     06F2  0874               	movf	clcd_putstr@str,w
   942     06F3  0084               	movwf	4
   943     06F4  120A  118A  2003  120A  118A  	fcall	stringtab
   944     06F9  00F0               	movwf	clcd_write@byte
   945     06FA  3001               	movlw	1
   946     06FB  120A  118A  26C7  120A  118A  	fcall	_clcd_write
   947     0700                     l718:
   948                           
   949                           ;clcd.c: 69:         str++;
   950     0700  3001               	movlw	1
   951     0701  07F4               	addwf	clcd_putstr@str,f
   952     0702  1803               	skipnc
   953     0703  0AF5               	incf	clcd_putstr@str+1,f
   954     0704  3000               	movlw	0
   955     0705  07F5               	addwf	clcd_putstr@str+1,f
   956     0706                     l720:
   957                           
   958                           ;clcd.c: 66:     while(*str != '\0')
   959     0706  0875               	movf	clcd_putstr@str+1,w
   960     0707  1283               	bcf	3,5	;RP0=0, select bank0
   961     0708  1303               	bcf	3,6	;RP1=0, select bank0
   962     0709  00FF               	movwf	btemp+1
   963     070A  0874               	movf	clcd_putstr@str,w
   964     070B  0084               	movwf	4
   965     070C  120A  118A  2003  120A  118A  	fcall	stringtab
   966     0711  3A00               	xorlw	0
   967     0712  1D03               	skipz
   968     0713  2F15               	goto	u91
   969     0714  2F16               	goto	u90
   970     0715                     u91:
   971     0715  2EF0               	goto	l716
   972     0716                     u90:
   973     0716                     l36:
   974     0716  0008               	return
   975     0717                     __end_of_clcd_putstr:
   976                           
   977                           	psect	text5
   978     06C7                     __ptext5:	
   979 ;; *************** function _clcd_write *****************
   980 ;; Defined at:
   981 ;;		line 42 in file "clcd.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  mode            1    wreg     unsigned char 
   984 ;;  byte            1    0[COMMON] unsigned char 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  mode            1    3[COMMON] unsigned char 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         1       0       0       0       0
   997 ;;      Locals:         1       0       0       0       0
   998 ;;      Temps:          2       0       0       0       0
   999 ;;      Totals:         4       0       0       0       0
  1000 ;;Total ram usage:        4 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_init_display_controller
  1006 ;;		_clcd_putstr
  1007 ;;		_clcd_putch
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011     06C7                     _clcd_write:	
  1012                           ;psect for function _clcd_write
  1013                           
  1014                           
  1015                           ;incstack = 0
  1016                           ; Regs used in _clcd_write: [wreg]
  1017                           ;clcd_write@mode stored from wreg
  1018     06C7  00F3               	movwf	clcd_write@mode
  1019     06C8                     l678:
  1020                           
  1021                           ;clcd.c: 42: void clcd_write(char mode, char byte);clcd.c: 43: {;clcd.c: 44:     RE2 = m
      +                          ode;
  1022     06C8  1873               	btfsc	clcd_write@mode,0
  1023     06C9  2ECB               	goto	u71
  1024     06CA  2ECF               	goto	u70
  1025     06CB                     u71:
  1026     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1027     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1028     06CD  1509               	bsf	9,2	;volatile
  1029     06CE  2ED2               	goto	u84
  1030     06CF                     u70:
  1031     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1032     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1033     06D1  1109               	bcf	9,2	;volatile
  1034     06D2                     u84:
  1035     06D2                     l680:
  1036                           
  1037                           ;clcd.c: 46:     PORTD = byte;
  1038     06D2  0870               	movf	clcd_write@byte,w
  1039     06D3  0088               	movwf	8	;volatile
  1040     06D4                     l682:
  1041                           
  1042                           ;clcd.c: 48:     RE1 = 1;
  1043     06D4  1489               	bsf	9,1	;volatile
  1044                           
  1045                           ;clcd.c: 49:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1046     06D5  30A6               	movlw	166
  1047     06D6  00F1               	movwf	??_clcd_write
  1048     06D7                     u197:
  1049     06D7  0BF1               	decfsz	??_clcd_write,f
  1050     06D8  2ED7               	goto	u197
  1051     06D9  0000               	nop
  1052     06DA                     l684:
  1053                           
  1054                           ;clcd.c: 50:     RE1 = 0;
  1055     06DA  1283               	bcf	3,5	;RP0=0, select bank0
  1056     06DB  1303               	bcf	3,6	;RP1=0, select bank0
  1057     06DC  1089               	bcf	9,1	;volatile
  1058                           
  1059                           ;clcd.c: 51:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1060     06DD  301B               	movlw	27
  1061     06DE  00F2               	movwf	??_clcd_write+1
  1062     06DF  309E               	movlw	158
  1063     06E0  00F1               	movwf	??_clcd_write
  1064     06E1                     u207:
  1065     06E1  0BF1               	decfsz	??_clcd_write,f
  1066     06E2  2EE1               	goto	u207
  1067     06E3  0BF2               	decfsz	??_clcd_write+1,f
  1068     06E4  2EE1               	goto	u207
  1069     06E5  0000               	nop
  1070     06E6                     l27:
  1071     06E6  0008               	return
  1072     06E7                     __end_of_clcd_write:
  1073     007E                     btemp	set	126	;btemp
  1074     007E                     wtemp0	set	126
  1075                           
  1076                           	psect	config
  1077                           
  1078                           ;Config register CONFIG @ 0x2007
  1079                           ;	Oscillator Selection bits
  1080                           ;	FOSC = 0x3, unprogrammed default
  1081                           ;	Watchdog Timer Enable bit
  1082                           ;	WDTE = OFF, WDT disabled
  1083                           ;	Power-up Timer Enable bit
  1084                           ;	PWRTE = 0x1, unprogrammed default
  1085                           ;	Brown-out Reset Enable bit
  1086                           ;	BOREN = 0x1, unprogrammed default
  1087                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1088                           ;	LVP = 0x1, unprogrammed default
  1089                           ;	Data EEPROM Memory Code Protection bit
  1090                           ;	CPD = 0x1, unprogrammed default
  1091                           ;	Flash Program Memory Write Enable bits
  1092                           ;	WRT = 0x3, unprogrammed default
  1093                           ;	In-Circuit Debugger Mode bit
  1094                           ;	DEBUG = 0x1, unprogrammed default
  1095                           ;	Flash Program Memory Code Protection bit
  1096                           ;	CP = 0x1, unprogrammed default
  1097     2007                     	org	8199
  1098     2007  3FFB               	dw	16379

Data Sizes:
    Strings     16
    Constant    0
    Data        17
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     22      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_putstr@str	PTR unsigned char  size(2) Largest target is 17
		 -> main@str(BANK0[17]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_clcd_putstr
    _init_display->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putstr->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    2212
                                              7 COMMON     4     4      0
                                              0 BANK0     22    22      0
                        _clcd_putstr
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     804
                       _init_display
 ---------------------------------------------------------------------------------
 (2) _init_display                                         0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putstr                                          3     0      3    1175
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_putstr
     _clcd_write
   _init_config
     _init_display
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      27       5       48.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      32      12        0.0%
ABS                  0      0      32       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Oct 26 21:51:25 2023

                              pc 0002                               l21 06A2                               l24 0775  
                             l27 06E6                               l43 0697                               l36 0716  
                             u70 06CF                               u71 06CB                               u90 0716  
                             u91 0715                               u84 06D2                               fsr 0004  
                            l700 0752                              l702 075F                              l710 069C  
                            l720 0706                              l704 0768                              l712 069D  
                            l714 06E7                              l706 0698                              l722 0692  
                            l730 0790                              l716 06F0                              l708 069B  
                            l740 07B6                              l732 0794                              l718 0700  
                            l750 07CE                              l734 07A5                              l726 0776  
                            l680 06D2                              l752 07DB                              l736 07A7  
                            l728 077B                              l682 06D4                              l690 0727  
                            l754 07DF                              l746 07BA                              l738 07B2  
                            l684 06DA                              l692 0738                              l748 07C8  
                            l678 06C8                              l694 073F                              l686 0717  
                            l696 0747                              l688 071F                              l698 074A  
                            _RE1 0049                              u100 0783                              _RE2 004A  
                            u110 07A5                              u111 07A4                              u120 07DB  
                            u121 07DA                              u125 07D7                              u207 06E1  
                            u137 071B                              u147 072B                              u157 073A  
                            u167 0754                              u177 0763                              u187 0772  
                            u197 06D7                              fsr0 0004                              indf 0000  
                           STR_1 0013                             _main 0776                             btemp 007E  
                           start 0000                   clcd_putstr@str 0074                   clcd_write@byte 0070  
                 clcd_write@mode 0073                            ?_main 0070                     ?_init_config 0070  
                          _PORTD 0008                            _TRISD 0088                            main@i 0034  
                          pclath 000A                  clcd_putstr@addr 0076                            status 0003  
                          wtemp0 007E                  __initialization 07EE                     __end_of_main 07EE  
                         ??_main 0077                    ?_init_display 0070                           _TRISE1 0449  
                         _TRISE2 044A          _init_display_controller 0717                   ??_init_display 0076  
        __end_of__initialization 07FC                   __pcstackCOMMON 0070                     __pidataBANK0 06A3  
      ??_init_display_controller 0074                       _clcd_write 06C7                       __pmaintext 0776  
                     __stringtab 0003             __end_of_init_display 06A3                          __ptext1 0692  
                        __ptext2 0698                          __ptext3 0717                          __ptext4 06E7  
                        __ptext5 06C7  __end_of_init_display_controller 0776                          main@str 0020  
           end_of_initialization 07FC                    ??_clcd_putstr 0077                      ?_clcd_write 0070  
            __end_of_clcd_putstr 0717              start_initialization 07EE                       init_fetch0 06B4  
                    __pdataBANK0 0036                    ??_init_config 0076                        ___latbits 0002  
                  __pcstackBANK0 0020                     _init_display 0698                      _clcd_putstr 06E7  
                      __pstrings 0003              __end_of_init_config 0698         ?_init_display_controller 0070  
                   ??_clcd_write 0071                        main@F1186 0036                      __stringbase 0012  
             __end_of_clcd_write 06E7               __end_of__stringtab 0013                      _init_config 0692  
                       main@temp 0033                         main@wait 0031                         init_ram0 06B8  
                   ?_clcd_putstr 0074                        stringcode 000D                         stringdir 000D  
                       stringtab 0003  
