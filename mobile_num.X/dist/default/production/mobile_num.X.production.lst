

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Oct 27 18:51:26 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 22/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177     0000                     	;# 
   178     0001                     	;# 
   179     0002                     	;# 
   180     0003                     	;# 
   181     0004                     	;# 
   182     0005                     	;# 
   183     0006                     	;# 
   184     0007                     	;# 
   185     0008                     	;# 
   186     0009                     	;# 
   187     000A                     	;# 
   188     000B                     	;# 
   189     000C                     	;# 
   190     000D                     	;# 
   191     000E                     	;# 
   192     000E                     	;# 
   193     000F                     	;# 
   194     0010                     	;# 
   195     0011                     	;# 
   196     0012                     	;# 
   197     0013                     	;# 
   198     0014                     	;# 
   199     0015                     	;# 
   200     0015                     	;# 
   201     0016                     	;# 
   202     0017                     	;# 
   203     0018                     	;# 
   204     0019                     	;# 
   205     001A                     	;# 
   206     001B                     	;# 
   207     001B                     	;# 
   208     001C                     	;# 
   209     001D                     	;# 
   210     001E                     	;# 
   211     001F                     	;# 
   212     0081                     	;# 
   213     0085                     	;# 
   214     0086                     	;# 
   215     0087                     	;# 
   216     0088                     	;# 
   217     0089                     	;# 
   218     008C                     	;# 
   219     008D                     	;# 
   220     008E                     	;# 
   221     0091                     	;# 
   222     0092                     	;# 
   223     0093                     	;# 
   224     0094                     	;# 
   225     0098                     	;# 
   226     0099                     	;# 
   227     009C                     	;# 
   228     009D                     	;# 
   229     009E                     	;# 
   230     009F                     	;# 
   231     010C                     	;# 
   232     010D                     	;# 
   233     010E                     	;# 
   234     010F                     	;# 
   235     018C                     	;# 
   236     018D                     	;# 
   237     0000                     	;# 
   238     0001                     	;# 
   239     0002                     	;# 
   240     0003                     	;# 
   241     0004                     	;# 
   242     0005                     	;# 
   243     0006                     	;# 
   244     0007                     	;# 
   245     0008                     	;# 
   246     0009                     	;# 
   247     000A                     	;# 
   248     000B                     	;# 
   249     000C                     	;# 
   250     000D                     	;# 
   251     000E                     	;# 
   252     000E                     	;# 
   253     000F                     	;# 
   254     0010                     	;# 
   255     0011                     	;# 
   256     0012                     	;# 
   257     0013                     	;# 
   258     0014                     	;# 
   259     0015                     	;# 
   260     0015                     	;# 
   261     0016                     	;# 
   262     0017                     	;# 
   263     0018                     	;# 
   264     0019                     	;# 
   265     001A                     	;# 
   266     001B                     	;# 
   267     001B                     	;# 
   268     001C                     	;# 
   269     001D                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     0088                     	;# 
   277     0089                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     0091                     	;# 
   282     0092                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0098                     	;# 
   286     0099                     	;# 
   287     009C                     	;# 
   288     009D                     	;# 
   289     009E                     	;# 
   290     009F                     	;# 
   291     010C                     	;# 
   292     010D                     	;# 
   293     010E                     	;# 
   294     010F                     	;# 
   295     018C                     	;# 
   296     018D                     	;# 
   297                           
   298                           	psect	idataCOMMON
   299     05AF                     __pidataCOMMON:
   300                           
   301                           ;initializer for read_matrix_key@once
   302     05AF  3401               	retlw	1
   303     0008                     _PORTD	set	8
   304     0032                     _RB2	set	50
   305     0031                     _RB1	set	49
   306     0030                     _RB0	set	48
   307     0040                     _RD0	set	64
   308     0041                     _RD1	set	65
   309     0042                     _RD2	set	66
   310     0043                     _RD3	set	67
   311     0049                     _RE1	set	73
   312     004A                     _RE2	set	74
   313     0086                     _TRISB	set	134
   314     0088                     _TRISD	set	136
   315     040F                     _nRBPU	set	1039
   316     0449                     _TRISE1	set	1097
   317     044A                     _TRISE2	set	1098
   318                           
   319                           	psect	strings
   320     0003                     __pstrings:
   321     0003                     stringtab:
   322     0003                     __stringtab:
   323     0003                     stringcode:	
   324                           ;	String table - string pointers are 1 byte each
   325                           
   326     0003                     stringdir:
   327     0003  3000               	movlw	high stringdir
   328     0004  008A               	movwf	10
   329     0005  0804               	movf	4,w
   330     0006  0A84               	incf	4,f
   331     0007  0782               	addwf	2,f
   332     0008                     __stringbase:
   333     0008  3400               	retlw	0
   334     0009                     __end_of__stringtab:
   335     0009                     STR_3:
   336     0009  3420               	retlw	32	;' '
   337     000A  3420               	retlw	32	;' '
   338     000B  3420               	retlw	32	;' '
   339     000C  3420               	retlw	32	;' '
   340     000D  3420               	retlw	32	;' '
   341     000E  3420               	retlw	32	;' '
   342     000F  3420               	retlw	32	;' '
   343     0010  3420               	retlw	32	;' '
   344     0011  3420               	retlw	32	;' '
   345     0012  3420               	retlw	32	;' '
   346     0013  3420               	retlw	32	;' '
   347     0014  3420               	retlw	32	;' '
   348     0015  3420               	retlw	32	;' '
   349     0016  3420               	retlw	32	;' '
   350     0017  3420               	retlw	32	;' '
   351     0018  3420               	retlw	32	;' '
   352     0019  3400               	retlw	0
   353     001A                     STR_1:
   354     001A  3445               	retlw	69	;'E'
   355     001B  346E               	retlw	110	;'n'
   356     001C  3474               	retlw	116	;'t'
   357     001D  3465               	retlw	101	;'e'
   358     001E  3472               	retlw	114	;'r'
   359     001F  3420               	retlw	32	;' '
   360     0020  344D               	retlw	77	;'M'
   361     0021  346F               	retlw	111	;'o'
   362     0022  3462               	retlw	98	;'b'
   363     0023  3469               	retlw	105	;'i'
   364     0024  346C               	retlw	108	;'l'
   365     0025  3465               	retlw	101	;'e'
   366     0026  3420               	retlw	32	;' '
   367     0027  344E               	retlw	78	;'N'
   368     0028  3475               	retlw	117	;'u'
   369     0029  346D               	retlw	109	;'m'
   370     002A  3400               	retlw	0
   371     002B                     STR_5:
   372     002B  344E               	retlw	78	;'N'
   373     002C  346F               	retlw	111	;'o'
   374     002D  3420               	retlw	32	;' '
   375     002E  346B               	retlw	107	;'k'
   376     002F  3465               	retlw	101	;'e'
   377     0030  3479               	retlw	121	;'y'
   378     0031  3420               	retlw	32	;' '
   379     0032  3470               	retlw	112	;'p'
   380     0033  3472               	retlw	114	;'r'
   381     0034  3465               	retlw	101	;'e'
   382     0035  3473               	retlw	115	;'s'
   383     0036  3473               	retlw	115	;'s'
   384     0037  3465               	retlw	101	;'e'
   385     0038  3464               	retlw	100	;'d'
   386     0039  3400               	retlw	0
   387     003A                     STR_2:
   388     003A  344B               	retlw	75	;'K'
   389     003B  3465               	retlw	101	;'e'
   390     003C  3479               	retlw	121	;'y'
   391     003D  3420               	retlw	32	;' '
   392     003E  343A               	retlw	58	;':'
   393     003F  3420               	retlw	32	;' '
   394     0040  3400               	retlw	0
   395     0009                     
   396                           	psect	cinit
   397     07F6                     start_initialization:	
   398                           ; #config settings
   399                           
   400     07F6                     __initialization:
   401                           
   402                           ; Initialize objects allocated to COMMON
   403     07F6  120A  118A  25AF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   404     07FB  00FC               	movwf	__pdataCOMMON& (0+127)
   405     07FC                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408     07FC                     __end_of__initialization:
   409     07FC  0183               	clrf	3
   410     07FD  120A  118A  2DE8   	ljmp	_main	;jump to C main() function
   411                           
   412                           	psect	dataCOMMON
   413     007C                     __pdataCOMMON:
   414     007C                     read_matrix_key@once:
   415     007C                     	ds	1
   416                           
   417                           	psect	cstackCOMMON
   418     0070                     __pcstackCOMMON:
   419     0070                     ?_init_display_controller:
   420     0070                     ?_clcd_write:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0070                     ?_init_matrix_keypad:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0070                     ??_init_matrix_keypad:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     ?_read_matrix_key:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ?_display:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?_scan_keypad:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ??_scan_keypad:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ?_init_display:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_init_config:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ?_main:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     clcd_write@byte:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     scan_keypad@i:	
   454                           ; 1 bytes @ 0x0
   455                           
   456                           
   457                           ; 2 bytes @ 0x0
   458     0070                     	ds	1
   459     0071                     ??_clcd_write:
   460                           
   461                           ; 1 bytes @ 0x1
   462     0071                     	ds	1
   463     0072                     scan_keypad@i_112:
   464                           
   465                           ; 2 bytes @ 0x2
   466     0072                     	ds	1
   467     0073                     clcd_write@mode:
   468                           
   469                           ; 1 bytes @ 0x3
   470     0073                     	ds	1
   471     0074                     ??_init_display_controller:
   472     0074                     ?_clcd_putch:	
   473                           ; 1 bytes @ 0x4
   474                           
   475     0074                     ?_clcd_putstr:	
   476                           ; 1 bytes @ 0x4
   477                           
   478     0074                     clcd_putch@addr:	
   479                           ; 1 bytes @ 0x4
   480                           
   481     0074                     clcd_putstr@addr:	
   482                           ; 1 bytes @ 0x4
   483                           
   484     0074                     scan_keypad@i_113:	
   485                           ; 1 bytes @ 0x4
   486                           
   487                           
   488                           ; 2 bytes @ 0x4
   489     0074                     	ds	1
   490     0075                     ??_clcd_putch:
   491     0075                     ??_clcd_putstr:	
   492                           ; 1 bytes @ 0x5
   493                           
   494     0075                     clcd_putch@data:	
   495                           ; 1 bytes @ 0x5
   496                           
   497     0075                     clcd_putstr@str:	
   498                           ; 1 bytes @ 0x5
   499                           
   500                           
   501                           ; 1 bytes @ 0x5
   502     0075                     	ds	1
   503     0076                     ??_display:
   504     0076                     ??_init_display:	
   505                           ; 1 bytes @ 0x6
   506                           
   507     0076                     ??_init_config:	
   508                           ; 1 bytes @ 0x6
   509                           
   510     0076                     scan_keypad@i_114:	
   511                           ; 1 bytes @ 0x6
   512                           
   513                           
   514                           ; 2 bytes @ 0x6
   515     0076                     	ds	2
   516     0078                     ??_read_matrix_key:
   517     0078                     display@key:	
   518                           ; 1 bytes @ 0x8
   519                           
   520     0078                     read_matrix_key@mode:	
   521                           ; 1 bytes @ 0x8
   522                           
   523                           
   524                           ; 1 bytes @ 0x8
   525     0078                     	ds	1
   526     0079                     read_matrix_key@key:
   527                           
   528                           ; 1 bytes @ 0x9
   529     0079                     	ds	1
   530     007A                     ??_main:
   531     007A                     main@prekey:	
   532                           ; 1 bytes @ 0xA
   533                           
   534                           
   535                           ; 1 bytes @ 0xA
   536     007A                     	ds	1
   537     007B                     main@key:
   538                           
   539                           ; 1 bytes @ 0xB
   540     007B                     	ds	1
   541                           
   542                           	psect	maintext
   543     05E8                     __pmaintext:	
   544 ;;
   545 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   546 ;;
   547 ;; *************** function _main *****************
   548 ;; Defined at:
   549 ;;		line 19 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  key             1   11[COMMON] unsigned char 
   554 ;;  prekey          1   10[COMMON] unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : B00/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         2       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         2       0       0       0       0
   568 ;;Total ram usage:        2 bytes
   569 ;; Hardware stack levels required when called: 4
   570 ;; This function calls:
   571 ;;		_clcd_putstr
   572 ;;		_display
   573 ;;		_init_config
   574 ;;		_read_matrix_key
   575 ;; This function is called by:
   576 ;;		Startup code after reset
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580     05E8                     _main:	
   581                           ;psect for function _main
   582                           
   583     05E8                     l1015:	
   584                           ;incstack = 0
   585                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   586                           
   587                           
   588                           ;main.c: 20:             prekey = key;
   589     05E8  120A  118A  25BB  120A  118A  	fcall	_init_config
   590     05ED                     l1017:
   591                           
   592                           ;main.c: 21: 
   593     05ED  3080               	movlw	128
   594     05EE  00F4               	movwf	clcd_putstr@addr
   595     05EF  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   596     05F0  120A  118A  260D  120A  118A  	fcall	_clcd_putstr
   597     05F5                     l1019:
   598                           
   599                           ;main.c: 29: }
   600     05F5  3001               	movlw	1
   601     05F6  120A  118A  2636  120A  118A  	fcall	_read_matrix_key
   602     05FB  00FB               	movwf	main@key
   603     05FC                     l1021:
   604                           
   605                           ;main.c: 30: 
   606     05FC  0A7B               	incf	main@key,w
   607     05FD  1903               	btfsc	3,2
   608     05FE  2E00               	goto	u331
   609     05FF  2E01               	goto	u330
   610     0600                     u331:
   611     0600  2E03               	goto	l1025
   612     0601                     u330:
   613     0601                     l1023:
   614                           
   615                           ;main.c: 31: void display(unsigned char key);main.c: 32: {
   616     0601  087B               	movf	main@key,w
   617     0602  00FA               	movwf	main@prekey
   618     0603                     l1025:
   619                           
   620                           ;main.c: 35:         clcd_putstr("Key : ", (0xC0 + 0));
   621     0603  087A               	movf	main@prekey,w
   622     0604  120A  118A  2695  120A  118A  	fcall	_display
   623     0609  2DF5               	goto	l1019
   624     060A  120A  118A  2800   	ljmp	start
   625     060D                     __end_of_main:
   626                           
   627                           	psect	text1
   628     0636                     __ptext1:	
   629 ;; *************** function _read_matrix_key *****************
   630 ;; Defined at:
   631 ;;		line 23 in file "matrix_keypad.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  mode            1    wreg     unsigned char 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  mode            1    8[COMMON] unsigned char 
   636 ;;  key             1    9[COMMON] unsigned char 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      unsigned char 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0, pclath, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   646 ;;      Params:         0       0       0       0       0
   647 ;;      Locals:         2       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0
   649 ;;      Totals:         2       0       0       0       0
   650 ;;Total ram usage:        2 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 1
   653 ;; This function calls:
   654 ;;		_scan_keypad
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660     0636                     _read_matrix_key:	
   661                           ;psect for function _read_matrix_key
   662                           
   663                           
   664                           ;incstack = 0
   665                           ; Regs used in _read_matrix_key: [wreg+status,2+status,0+pclath+cstack]
   666                           ;read_matrix_key@mode stored from wreg
   667     0636  00F8               	movwf	read_matrix_key@mode
   668     0637                     l847:
   669                           
   670                           ;matrix_keypad.c: 23: unsigned char read_matrix_key(unsigned char mode);matrix_keypad.c:
      +                           24: {;matrix_keypad.c: 25:     static unsigned char once = 1;;matrix_keypad.c: 26:     
      +                          unsigned char key = scan_keypad();
   671     0637  120A  118A  274A  120A  118A  	fcall	_scan_keypad
   672     063C  00F9               	movwf	read_matrix_key@key
   673     063D                     l849:
   674                           
   675                           ;matrix_keypad.c: 27:     if(mode == 0)
   676     063D  0878               	movf	read_matrix_key@mode,w
   677     063E  1D03               	btfss	3,2
   678     063F  2E41               	goto	u211
   679     0640  2E42               	goto	u210
   680     0641                     u211:
   681     0641  2E44               	goto	l857
   682     0642                     u210:
   683     0642                     l851:
   684                           
   685                           ;matrix_keypad.c: 28:     {;matrix_keypad.c: 29:         return key;
   686     0642  0879               	movf	read_matrix_key@key,w
   687     0643  2E5E               	goto	l101
   688     0644                     l857:
   689     0644  0378               	decf	read_matrix_key@mode,w
   690     0645  1D03               	btfss	3,2
   691     0646  2E48               	goto	u221
   692     0647  2E49               	goto	u220
   693     0648                     u221:
   694     0648  2E5D               	goto	l875
   695     0649                     u220:
   696     0649                     l859:
   697                           
   698                           ;matrix_keypad.c: 32:     {;matrix_keypad.c: 33:         if((key != 0xFF) && once)
   699     0649  0A79               	incf	read_matrix_key@key,w
   700     064A  1903               	btfsc	3,2
   701     064B  2E4D               	goto	u231
   702     064C  2E4E               	goto	u230
   703     064D                     u231:
   704     064D  2E55               	goto	l871
   705     064E                     u230:
   706     064E                     l861:
   707     064E  087C               	movf	read_matrix_key@once,w
   708     064F  1903               	btfsc	3,2
   709     0650  2E52               	goto	u241
   710     0651  2E53               	goto	u240
   711     0652                     u241:
   712     0652  2E55               	goto	l871
   713     0653                     u240:
   714     0653                     l863:
   715                           
   716                           ;matrix_keypad.c: 34:         {;matrix_keypad.c: 35:             once = 0;
   717     0653  01FC               	clrf	read_matrix_key@once
   718     0654  2E42               	goto	l851
   719     0655                     l871:
   720     0655  0A79               	incf	read_matrix_key@key,w
   721     0656  1D03               	btfss	3,2
   722     0657  2E59               	goto	u251
   723     0658  2E5A               	goto	u250
   724     0659                     u251:
   725     0659  2E5D               	goto	l103
   726     065A                     u250:
   727     065A                     l873:
   728                           
   729                           ;matrix_keypad.c: 39:         {;matrix_keypad.c: 40:             once = 1;
   730     065A  01FC               	clrf	read_matrix_key@once
   731     065B  0AFC               	incf	read_matrix_key@once,f
   732     065C  2E5D               	goto	l875
   733     065D                     l103:	
   734                           ;matrix_keypad.c: 42:     }
   735                           
   736     065D                     l875:
   737                           
   738                           ;matrix_keypad.c: 44:     return 0xFF;
   739     065D  30FF               	movlw	255
   740     065E                     l101:
   741     065E  0008               	return
   742     065F                     __end_of_read_matrix_key:
   743                           
   744                           	psect	text2
   745     074A                     __ptext2:	
   746 ;; *************** function _scan_keypad *****************
   747 ;; Defined at:
   748 ;;		line 47 in file "matrix_keypad.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  i               2    6[COMMON] int 
   753 ;;  i               2    4[COMMON] int 
   754 ;;  i               2    2[COMMON] int 
   755 ;;  i               2    0[COMMON] int 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      unsigned char 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         8       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         8       0       0       0       0
   769 ;;Total ram usage:        8 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; This function calls:
   772 ;;		Nothing
   773 ;; This function is called by:
   774 ;;		_read_matrix_key
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778     074A                     _scan_keypad:	
   779                           ;psect for function _scan_keypad
   780                           
   781     074A                     l759:	
   782                           ;incstack = 0
   783                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
   784                           
   785                           
   786                           ;matrix_keypad.c: 49:     RD3 = 0;
   787     074A  1283               	bcf	3,5	;RP0=0, select bank0
   788     074B  1303               	bcf	3,6	;RP1=0, select bank0
   789     074C  1188               	bcf	8,3	;volatile
   790                           
   791                           ;matrix_keypad.c: 50:     RD2 = 1;
   792     074D  1508               	bsf	8,2	;volatile
   793                           
   794                           ;matrix_keypad.c: 51:     RD1 = 1;
   795     074E  1488               	bsf	8,1	;volatile
   796                           
   797                           ;matrix_keypad.c: 52:     RD0 = 1;
   798     074F  1408               	bsf	8,0	;volatile
   799     0750                     l761:
   800                           
   801                           ;matrix_keypad.c: 54:     for(int i = 100; i--; );
   802     0750  3064               	movlw	100
   803     0751  00F0               	movwf	scan_keypad@i
   804     0752  3000               	movlw	0
   805     0753  00F1               	movwf	scan_keypad@i+1
   806     0754                     l763:
   807     0754  30FF               	movlw	255
   808     0755  07F0               	addwf	scan_keypad@i,f
   809     0756  1803               	skipnc
   810     0757  0AF1               	incf	scan_keypad@i+1,f
   811     0758  30FF               	movlw	255
   812     0759  07F1               	addwf	scan_keypad@i+1,f
   813     075A  0A70               	incf	scan_keypad@i,w
   814     075B  1D03               	skipz
   815     075C  2F61               	goto	u51
   816     075D  0A71               	incf	scan_keypad@i+1,w
   817     075E  1D03               	btfss	3,2
   818     075F  2F61               	goto	u51
   819     0760  2F62               	goto	u50
   820     0761                     u51:
   821     0761  2F54               	goto	l763
   822     0762                     u50:
   823     0762                     l111:
   824                           
   825                           ;matrix_keypad.c: 56:     if(RB0 == 0)
   826     0762  1283               	bcf	3,5	;RP0=0, select bank0
   827     0763  1303               	bcf	3,6	;RP1=0, select bank0
   828     0764  1806               	btfsc	6,0	;volatile
   829     0765  2F67               	goto	u61
   830     0766  2F68               	goto	u60
   831     0767                     u61:
   832     0767  2F6A               	goto	l112
   833     0768                     u60:
   834     0768                     l765:
   835                           
   836                           ;matrix_keypad.c: 57:         return 1;
   837     0768  3001               	movlw	1
   838     0769  2FF5               	goto	l113
   839     076A                     l112:	
   840                           ;matrix_keypad.c: 58:     else if(RB1 == 0)
   841                           
   842     076A  1886               	btfsc	6,1	;volatile
   843     076B  2F6D               	goto	u71
   844     076C  2F6E               	goto	u70
   845     076D                     u71:
   846     076D  2F70               	goto	l115
   847     076E                     u70:
   848     076E                     l771:
   849                           
   850                           ;matrix_keypad.c: 59:         return 2;
   851     076E  3002               	movlw	2
   852     076F  2FF5               	goto	l113
   853     0770                     l115:	
   854                           ;matrix_keypad.c: 60:     else if(RB2 == 0)
   855                           
   856     0770  1906               	btfsc	6,2	;volatile
   857     0771  2F73               	goto	u81
   858     0772  2F74               	goto	u80
   859     0773                     u81:
   860     0773  2F76               	goto	l114
   861     0774                     u80:
   862     0774                     l777:
   863                           
   864                           ;matrix_keypad.c: 61:         return 3;
   865     0774  3003               	movlw	3
   866     0775  2FF5               	goto	l113
   867     0776                     l114:
   868                           
   869                           ;matrix_keypad.c: 63:     RD3 = 1;
   870     0776  1588               	bsf	8,3	;volatile
   871                           
   872                           ;matrix_keypad.c: 64:     RD2 = 0;
   873     0777  1108               	bcf	8,2	;volatile
   874                           
   875                           ;matrix_keypad.c: 65:     RD1 = 1;
   876     0778  1488               	bsf	8,1	;volatile
   877                           
   878                           ;matrix_keypad.c: 66:     RD0 = 1;
   879     0779  1408               	bsf	8,0	;volatile
   880     077A                     l781:
   881                           
   882                           ;matrix_keypad.c: 68:     for(int i = 100; i--; );
   883     077A  3064               	movlw	100
   884     077B  00F2               	movwf	scan_keypad@i_112
   885     077C  3000               	movlw	0
   886     077D  00F3               	movwf	scan_keypad@i_112+1
   887     077E                     l783:
   888     077E  30FF               	movlw	255
   889     077F  07F2               	addwf	scan_keypad@i_112,f
   890     0780  1803               	skipnc
   891     0781  0AF3               	incf	scan_keypad@i_112+1,f
   892     0782  30FF               	movlw	255
   893     0783  07F3               	addwf	scan_keypad@i_112+1,f
   894     0784  0A72               	incf	scan_keypad@i_112,w
   895     0785  1D03               	skipz
   896     0786  2F8B               	goto	u91
   897     0787  0A73               	incf	scan_keypad@i_112+1,w
   898     0788  1D03               	btfss	3,2
   899     0789  2F8B               	goto	u91
   900     078A  2F8C               	goto	u90
   901     078B                     u91:
   902     078B  2F7E               	goto	l783
   903     078C                     u90:
   904     078C                     l120:
   905                           
   906                           ;matrix_keypad.c: 70:     if(RB0 == 0)
   907     078C  1283               	bcf	3,5	;RP0=0, select bank0
   908     078D  1303               	bcf	3,6	;RP1=0, select bank0
   909     078E  1806               	btfsc	6,0	;volatile
   910     078F  2F91               	goto	u101
   911     0790  2F92               	goto	u100
   912     0791                     u101:
   913     0791  2F94               	goto	l121
   914     0792                     u100:
   915     0792                     l785:
   916                           
   917                           ;matrix_keypad.c: 71:         return 4;
   918     0792  3004               	movlw	4
   919     0793  2FF5               	goto	l113
   920     0794                     l121:	
   921                           ;matrix_keypad.c: 72:     else if(RB1 == 0)
   922                           
   923     0794  1886               	btfsc	6,1	;volatile
   924     0795  2F97               	goto	u111
   925     0796  2F98               	goto	u110
   926     0797                     u111:
   927     0797  2F9A               	goto	l123
   928     0798                     u110:
   929     0798                     l791:
   930                           
   931                           ;matrix_keypad.c: 73:         return 5;
   932     0798  3005               	movlw	5
   933     0799  2FF5               	goto	l113
   934     079A                     l123:	
   935                           ;matrix_keypad.c: 74:     else if(RB2 == 0)
   936                           
   937     079A  1906               	btfsc	6,2	;volatile
   938     079B  2F9D               	goto	u121
   939     079C  2F9E               	goto	u120
   940     079D                     u121:
   941     079D  2FA0               	goto	l122
   942     079E                     u120:
   943     079E                     l797:
   944                           
   945                           ;matrix_keypad.c: 75:         return 6;
   946     079E  3006               	movlw	6
   947     079F  2FF5               	goto	l113
   948     07A0                     l122:
   949                           
   950                           ;matrix_keypad.c: 77:     RD3 = 1;
   951     07A0  1588               	bsf	8,3	;volatile
   952                           
   953                           ;matrix_keypad.c: 78:     RD2 = 1;
   954     07A1  1508               	bsf	8,2	;volatile
   955                           
   956                           ;matrix_keypad.c: 79:     RD1 = 0;
   957     07A2  1088               	bcf	8,1	;volatile
   958                           
   959                           ;matrix_keypad.c: 80:     RD0 = 1;
   960     07A3  1408               	bsf	8,0	;volatile
   961     07A4                     l801:
   962                           
   963                           ;matrix_keypad.c: 82:     for(int i = 100; i--; );
   964     07A4  3064               	movlw	100
   965     07A5  00F4               	movwf	scan_keypad@i_113
   966     07A6  3000               	movlw	0
   967     07A7  00F5               	movwf	scan_keypad@i_113+1
   968     07A8                     l803:
   969     07A8  30FF               	movlw	255
   970     07A9  07F4               	addwf	scan_keypad@i_113,f
   971     07AA  1803               	skipnc
   972     07AB  0AF5               	incf	scan_keypad@i_113+1,f
   973     07AC  30FF               	movlw	255
   974     07AD  07F5               	addwf	scan_keypad@i_113+1,f
   975     07AE  0A74               	incf	scan_keypad@i_113,w
   976     07AF  1D03               	skipz
   977     07B0  2FB5               	goto	u131
   978     07B1  0A75               	incf	scan_keypad@i_113+1,w
   979     07B2  1D03               	btfss	3,2
   980     07B3  2FB5               	goto	u131
   981     07B4  2FB6               	goto	u130
   982     07B5                     u131:
   983     07B5  2FA8               	goto	l803
   984     07B6                     u130:
   985     07B6                     l128:
   986                           
   987                           ;matrix_keypad.c: 84:     if(RB0 == 0)
   988     07B6  1283               	bcf	3,5	;RP0=0, select bank0
   989     07B7  1303               	bcf	3,6	;RP1=0, select bank0
   990     07B8  1806               	btfsc	6,0	;volatile
   991     07B9  2FBB               	goto	u141
   992     07BA  2FBC               	goto	u140
   993     07BB                     u141:
   994     07BB  2FBE               	goto	l129
   995     07BC                     u140:
   996     07BC                     l805:
   997                           
   998                           ;matrix_keypad.c: 85:         return 7;
   999     07BC  3007               	movlw	7
  1000     07BD  2FF5               	goto	l113
  1001     07BE                     l129:	
  1002                           ;matrix_keypad.c: 86:     else if(RB1 == 0)
  1003                           
  1004     07BE  1886               	btfsc	6,1	;volatile
  1005     07BF  2FC1               	goto	u151
  1006     07C0  2FC2               	goto	u150
  1007     07C1                     u151:
  1008     07C1  2FC4               	goto	l131
  1009     07C2                     u150:
  1010     07C2                     l811:
  1011                           
  1012                           ;matrix_keypad.c: 87:         return 8;
  1013     07C2  3008               	movlw	8
  1014     07C3  2FF5               	goto	l113
  1015     07C4                     l131:	
  1016                           ;matrix_keypad.c: 88:     else if(RB2 == 0)
  1017                           
  1018     07C4  1906               	btfsc	6,2	;volatile
  1019     07C5  2FC7               	goto	u161
  1020     07C6  2FC8               	goto	u160
  1021     07C7                     u161:
  1022     07C7  2FCA               	goto	l130
  1023     07C8                     u160:
  1024     07C8                     l817:
  1025                           
  1026                           ;matrix_keypad.c: 89:         return 9;
  1027     07C8  3009               	movlw	9
  1028     07C9  2FF5               	goto	l113
  1029     07CA                     l130:
  1030                           
  1031                           ;matrix_keypad.c: 91:     RD3 = 1;
  1032     07CA  1588               	bsf	8,3	;volatile
  1033                           
  1034                           ;matrix_keypad.c: 92:     RD2 = 1;
  1035     07CB  1508               	bsf	8,2	;volatile
  1036                           
  1037                           ;matrix_keypad.c: 93:     RD1 = 1;
  1038     07CC  1488               	bsf	8,1	;volatile
  1039                           
  1040                           ;matrix_keypad.c: 94:     RD0 = 0;
  1041     07CD  1008               	bcf	8,0	;volatile
  1042     07CE                     l821:
  1043                           
  1044                           ;matrix_keypad.c: 96:     for(int i = 100; i--; );
  1045     07CE  3064               	movlw	100
  1046     07CF  00F6               	movwf	scan_keypad@i_114
  1047     07D0  3000               	movlw	0
  1048     07D1  00F7               	movwf	scan_keypad@i_114+1
  1049     07D2                     l823:
  1050     07D2  30FF               	movlw	255
  1051     07D3  07F6               	addwf	scan_keypad@i_114,f
  1052     07D4  1803               	skipnc
  1053     07D5  0AF7               	incf	scan_keypad@i_114+1,f
  1054     07D6  30FF               	movlw	255
  1055     07D7  07F7               	addwf	scan_keypad@i_114+1,f
  1056     07D8  0A76               	incf	scan_keypad@i_114,w
  1057     07D9  1D03               	skipz
  1058     07DA  2FDF               	goto	u171
  1059     07DB  0A77               	incf	scan_keypad@i_114+1,w
  1060     07DC  1D03               	btfss	3,2
  1061     07DD  2FDF               	goto	u171
  1062     07DE  2FE0               	goto	u170
  1063     07DF                     u171:
  1064     07DF  2FD2               	goto	l823
  1065     07E0                     u170:
  1066     07E0                     l136:
  1067                           
  1068                           ;matrix_keypad.c: 98:     if(RB0 == 0)
  1069     07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1070     07E1  1303               	bcf	3,6	;RP1=0, select bank0
  1071     07E2  1806               	btfsc	6,0	;volatile
  1072     07E3  2FE5               	goto	u181
  1073     07E4  2FE6               	goto	u180
  1074     07E5                     u181:
  1075     07E5  2FE8               	goto	l137
  1076     07E6                     u180:
  1077     07E6                     l825:
  1078                           
  1079                           ;matrix_keypad.c: 99:         return '*';
  1080     07E6  302A               	movlw	42
  1081     07E7  2FF5               	goto	l113
  1082     07E8                     l137:	
  1083                           ;matrix_keypad.c: 100:     else if(RB1 == 0)
  1084                           
  1085     07E8  1886               	btfsc	6,1	;volatile
  1086     07E9  2FEB               	goto	u191
  1087     07EA  2FEC               	goto	u190
  1088     07EB                     u191:
  1089     07EB  2FEE               	goto	l139
  1090     07EC                     u190:
  1091     07EC                     l831:
  1092                           
  1093                           ;matrix_keypad.c: 101:         return 0;
  1094     07EC  3000               	movlw	0
  1095     07ED  2FF5               	goto	l113
  1096     07EE                     l139:	
  1097                           ;matrix_keypad.c: 102:     else if(RB2 == 0)
  1098                           
  1099     07EE  1906               	btfsc	6,2	;volatile
  1100     07EF  2FF1               	goto	u201
  1101     07F0  2FF2               	goto	u200
  1102     07F1                     u201:
  1103     07F1  2FF4               	goto	l841
  1104     07F2                     u200:
  1105     07F2                     l837:
  1106                           
  1107                           ;matrix_keypad.c: 103:         return '#';
  1108     07F2  3023               	movlw	35
  1109     07F3  2FF5               	goto	l113
  1110     07F4                     l841:
  1111                           
  1112                           ;matrix_keypad.c: 105:     return 0xFF;
  1113     07F4  30FF               	movlw	255
  1114     07F5                     l113:
  1115     07F5  0008               	return
  1116     07F6                     __end_of_scan_keypad:
  1117                           
  1118                           	psect	text3
  1119     05BB                     __ptext3:	
  1120 ;; *************** function _init_config *****************
  1121 ;; Defined at:
  1122 ;;		line 12 in file "main.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0, pclath, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0
  1139 ;;      Totals:         0       0       0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels used: 1
  1142 ;; Hardware stack levels required when called: 3
  1143 ;; This function calls:
  1144 ;;		_init_display
  1145 ;;		_init_matrix_keypad
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151     05BB                     _init_config:	
  1152                           ;psect for function _init_config
  1153                           
  1154     05BB                     l993:	
  1155                           ;incstack = 0
  1156                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1157                           
  1158                           
  1159                           ;main.c: 14: 
  1160     05BB  120A  118A  25B0  120A  118A  	fcall	_init_display
  1161                           
  1162                           ;main.c: 15: 
  1163     05C0  120A  118A  25C6  120A  118A  	fcall	_init_matrix_keypad
  1164     05C5                     l51:
  1165     05C5  0008               	return
  1166     05C6                     __end_of_init_config:
  1167                           
  1168                           	psect	text4
  1169     05C6                     __ptext4:	
  1170 ;; *************** function _init_matrix_keypad *****************
  1171 ;; Defined at:
  1172 ;;		line 10 in file "matrix_keypad.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1186 ;;      Params:         0       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0
  1189 ;;      Totals:         0       0       0       0       0
  1190 ;;Total ram usage:        0 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; This function calls:
  1193 ;;		Nothing
  1194 ;; This function is called by:
  1195 ;;		_init_config
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199     05C6                     _init_matrix_keypad:	
  1200                           ;psect for function _init_matrix_keypad
  1201                           
  1202     05C6                     l747:	
  1203                           ;incstack = 0
  1204                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  1205                           
  1206                           
  1207                           ;matrix_keypad.c: 12:     TRISD = TRISD & 0xF0;
  1208     05C6  1683               	bsf	3,5	;RP0=1, select bank1
  1209     05C7  1303               	bcf	3,6	;RP1=0, select bank1
  1210     05C8  0808               	movf	8,w	;volatile
  1211     05C9  39F0               	andlw	240
  1212     05CA  0088               	movwf	8	;volatile
  1213                           
  1214                           ;matrix_keypad.c: 13:     TRISB = TRISB | 0x07;
  1215     05CB  0806               	movf	6,w	;volatile
  1216     05CC  3807               	iorlw	7
  1217     05CD  0086               	movwf	6	;volatile
  1218     05CE                     l749:
  1219                           
  1220                           ;matrix_keypad.c: 15:     nRBPU = 0;
  1221     05CE  1381               	bcf	1,7	;volatile
  1222     05CF                     l751:
  1223                           
  1224                           ;matrix_keypad.c: 17:     RD3 = 1;
  1225     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1226     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1227     05D1  1588               	bsf	8,3	;volatile
  1228     05D2                     l753:
  1229                           
  1230                           ;matrix_keypad.c: 18:     RD2 = 1;
  1231     05D2  1508               	bsf	8,2	;volatile
  1232     05D3                     l755:
  1233                           
  1234                           ;matrix_keypad.c: 19:     RD1 = 1;
  1235     05D3  1488               	bsf	8,1	;volatile
  1236     05D4                     l757:
  1237                           
  1238                           ;matrix_keypad.c: 20:     RD0 = 1;
  1239     05D4  1408               	bsf	8,0	;volatile
  1240     05D5                     l95:
  1241     05D5  0008               	return
  1242     05D6                     __end_of_init_matrix_keypad:
  1243                           
  1244                           	psect	text5
  1245     05B0                     __ptext5:	
  1246 ;; *************** function _init_display *****************
  1247 ;; Defined at:
  1248 ;;		line 10 in file "clcd.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2, status,0, pclath, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1262 ;;      Params:         0       0       0       0       0
  1263 ;;      Locals:         0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0
  1265 ;;      Totals:         0       0       0       0       0
  1266 ;;Total ram usage:        0 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; Hardware stack levels required when called: 2
  1269 ;; This function calls:
  1270 ;;		_init_display_controller
  1271 ;; This function is called by:
  1272 ;;		_init_config
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276     05B0                     _init_display:	
  1277                           ;psect for function _init_display
  1278                           
  1279     05B0                     l975:	
  1280                           ;incstack = 0
  1281                           ; Regs used in _init_display: [wreg+status,2+status,0+pclath+cstack]
  1282                           
  1283                           
  1284                           ;clcd.c: 12:     TRISD = 0x00;
  1285     05B0  1683               	bsf	3,5	;RP0=1, select bank1
  1286     05B1  1303               	bcf	3,6	;RP1=0, select bank1
  1287     05B2  0188               	clrf	8	;volatile
  1288     05B3                     l977:
  1289                           
  1290                           ;clcd.c: 13:     TRISE2 = 0;
  1291     05B3  1109               	bcf	9,2	;volatile
  1292     05B4                     l979:
  1293                           
  1294                           ;clcd.c: 14:     TRISE1 = 0;
  1295     05B4  1089               	bcf	9,1	;volatile
  1296     05B5                     l981:
  1297                           
  1298                           ;clcd.c: 16:     init_display_controller();
  1299     05B5  120A  118A  26E0  120A  118A  	fcall	_init_display_controller
  1300     05BA                     l21:
  1301     05BA  0008               	return
  1302     05BB                     __end_of_init_display:
  1303                           
  1304                           	psect	text6
  1305     06E0                     __ptext6:	
  1306 ;; *************** function _init_display_controller *****************
  1307 ;; Defined at:
  1308 ;;		line 19 in file "clcd.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0, pclath, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1322 ;;      Params:         0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0
  1324 ;;      Temps:          2       0       0       0       0
  1325 ;;      Totals:         2       0       0       0       0
  1326 ;;Total ram usage:        2 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 1
  1329 ;; This function calls:
  1330 ;;		_clcd_write
  1331 ;; This function is called by:
  1332 ;;		_init_display
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336     06E0                     _init_display_controller:	
  1337                           ;psect for function _init_display_controller
  1338                           
  1339     06E0                     l951:	
  1340                           ;incstack = 0
  1341                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1342                           
  1343                           
  1344                           ;clcd.c: 21:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1345     06E0  30C3               	movlw	195
  1346     06E1  00F5               	movwf	??_init_display_controller+1
  1347     06E2  30CD               	movlw	205
  1348     06E3  00F4               	movwf	??_init_display_controller
  1349     06E4                     u347:
  1350     06E4  0BF4               	decfsz	??_init_display_controller,f
  1351     06E5  2EE4               	goto	u347
  1352     06E6  0BF5               	decfsz	??_init_display_controller+1,f
  1353     06E7  2EE4               	goto	u347
  1354     06E8                     l953:
  1355                           
  1356                           ;clcd.c: 23:     clcd_write(0, 0x33);
  1357     06E8  3033               	movlw	51
  1358     06E9  00F0               	movwf	clcd_write@byte
  1359     06EA  3000               	movlw	0
  1360     06EB  120A  118A  265F  120A  118A  	fcall	_clcd_write
  1361     06F0                     l955:
  1362                           
  1363                           ;clcd.c: 24:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1364     06F0  301B               	movlw	27
  1365     06F1  00F5               	movwf	??_init_display_controller+1
  1366     06F2  309E               	movlw	158
  1367     06F3  00F4               	movwf	??_init_display_controller
  1368     06F4                     u357:
  1369     06F4  0BF4               	decfsz	??_init_display_controller,f
  1370     06F5  2EF4               	goto	u357
  1371     06F6  0BF5               	decfsz	??_init_display_controller+1,f
  1372     06F7  2EF4               	goto	u357
  1373     06F8  0000               	nop
  1374                           
  1375                           ;clcd.c: 26:     clcd_write(0, 0x33);
  1376     06F9  3033               	movlw	51
  1377     06FA  00F0               	movwf	clcd_write@byte
  1378     06FB  3000               	movlw	0
  1379     06FC  120A  118A  265F  120A  118A  	fcall	_clcd_write
  1380     0701                     l957:
  1381                           
  1382                           ;clcd.c: 27:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1383     0701  30A6               	movlw	166
  1384     0702  00F4               	movwf	??_init_display_controller
  1385     0703                     u367:
  1386     0703  0BF4               	decfsz	??_init_display_controller,f
  1387     0704  2F03               	goto	u367
  1388     0705  0000               	nop
  1389     0706                     l959:
  1390                           
  1391                           ;clcd.c: 29:     clcd_write(0, 0x33);
  1392     0706  3033               	movlw	51
  1393     0707  00F0               	movwf	clcd_write@byte
  1394     0708  3000               	movlw	0
  1395     0709  120A  118A  265F  120A  118A  	fcall	_clcd_write
  1396     070E                     l961:
  1397                           
  1398                           ;clcd.c: 30:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1399     070E  2F0F               	nop2	;2 cycle nop
  1400     070F  2F10               	nop2	;2 cycle nop
  1401     0710  0000               	nop
  1402     0711                     l963:
  1403                           
  1404                           ;clcd.c: 32:     clcd_write(0, 0x02);
  1405     0711  3002               	movlw	2
  1406     0712  00F0               	movwf	clcd_write@byte
  1407     0713  3000               	movlw	0
  1408     0714  120A  118A  265F  120A  118A  	fcall	_clcd_write
  1409     0719                     l965:
  1410                           
  1411                           ;clcd.c: 33:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1412     0719  30A6               	movlw	166
  1413     071A  00F4               	movwf	??_init_display_controller
  1414     071B                     u377:
  1415     071B  0BF4               	decfsz	??_init_display_controller,f
  1416     071C  2F1B               	goto	u377
  1417     071D  0000               	nop
  1418                           
  1419                           ;clcd.c: 35:     clcd_write(0, 0x28);
  1420     071E  3028               	movlw	40
  1421     071F  00F0               	movwf	clcd_write@byte
  1422     0720  3000               	movlw	0
  1423     0721  120A  118A  265F  120A  118A  	fcall	_clcd_write
  1424     0726                     l967:
  1425                           
  1426                           ;clcd.c: 36:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1427     0726  30A6               	movlw	166
  1428     0727  00F4               	movwf	??_init_display_controller
  1429     0728                     u387:
  1430     0728  0BF4               	decfsz	??_init_display_controller,f
  1431     0729  2F28               	goto	u387
  1432     072A  0000               	nop
  1433     072B                     l969:
  1434                           
  1435                           ;clcd.c: 38:     clcd_write(0, 0x01);
  1436     072B  01F0               	clrf	clcd_write@byte
  1437     072C  0AF0               	incf	clcd_write@byte,f
  1438     072D  3000               	movlw	0
  1439     072E  120A  118A  265F  120A  118A  	fcall	_clcd_write
  1440                           
  1441                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1442     0733  3004               	movlw	4
  1443     0734  00F5               	movwf	??_init_display_controller+1
  1444     0735  303D               	movlw	61
  1445     0736  00F4               	movwf	??_init_display_controller
  1446     0737                     u397:
  1447     0737  0BF4               	decfsz	??_init_display_controller,f
  1448     0738  2F37               	goto	u397
  1449     0739  0BF5               	decfsz	??_init_display_controller+1,f
  1450     073A  2F37               	goto	u397
  1451     073B  2F3C               	nop2
  1452     073C                     l971:
  1453                           
  1454                           ;clcd.c: 41:     clcd_write(0, 0x0C);
  1455     073C  300C               	movlw	12
  1456     073D  00F0               	movwf	clcd_write@byte
  1457     073E  3000               	movlw	0
  1458     073F  120A  118A  265F  120A  118A  	fcall	_clcd_write
  1459     0744                     l973:
  1460                           
  1461                           ;clcd.c: 42:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1462     0744  30A6               	movlw	166
  1463     0745  00F4               	movwf	??_init_display_controller
  1464     0746                     u407:
  1465     0746  0BF4               	decfsz	??_init_display_controller,f
  1466     0747  2F46               	goto	u407
  1467     0748  0000               	nop
  1468     0749                     l24:
  1469     0749  0008               	return
  1470     074A                     __end_of_init_display_controller:
  1471                           
  1472                           	psect	text7
  1473     0695                     __ptext7:	
  1474 ;; *************** function _display *****************
  1475 ;; Defined at:
  1476 ;;		line 43 in file "main.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  key             1    wreg     unsigned char 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  key             1    8[COMMON] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         0       0       0       0       0
  1491 ;;      Locals:         1       0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0
  1493 ;;      Totals:         3       0       0       0       0
  1494 ;;Total ram usage:        3 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 2
  1497 ;; This function calls:
  1498 ;;		_clcd_putch
  1499 ;;		_clcd_putstr
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505     0695                     _display:	
  1506                           ;psect for function _display
  1507                           
  1508                           
  1509                           ;incstack = 0
  1510                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1511                           ;display@key stored from wreg
  1512     0695  00F8               	movwf	display@key
  1513     0696                     l995:
  1514                           
  1515                           ;main.c: 43:                 break;;main.c: 44:             default:;main.c: 45:        
      +                                   clcd_putstr("                ", (0xC0 + 0));
  1516     0696  0A78               	incf	display@key,w
  1517     0697  1903               	btfsc	3,2
  1518     0698  2E9A               	goto	u321
  1519     0699  2E9B               	goto	u320
  1520     069A                     u321:
  1521     069A  2ED7               	goto	l1009
  1522     069B                     u320:
  1523     069B                     l997:
  1524                           
  1525                           ;main.c: 46:                 clcd_putch(key + '0', (0xC0 + 8));;main.c: 47:         }
  1526     069B  30C0               	movlw	192
  1527     069C  00F4               	movwf	clcd_putstr@addr
  1528     069D  3032               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1529     069E  120A  118A  260D  120A  118A  	fcall	_clcd_putstr
  1530                           
  1531                           ;main.c: 49:     }
  1532     06A3  2EC7               	goto	l1007
  1533     06A4                     l999:
  1534                           
  1535                           ;main.c: 53: }
  1536     06A4  30C0               	movlw	192
  1537     06A5  00F4               	movwf	clcd_putstr@addr
  1538     06A6  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1539     06A7  120A  118A  260D  120A  118A  	fcall	_clcd_putstr
  1540     06AC                     l1001:
  1541     06AC  30C8               	movlw	200
  1542     06AD  00F4               	movwf	clcd_putch@addr
  1543     06AE  0878               	movf	display@key,w
  1544     06AF  120A  118A  25D6  120A  118A  	fcall	_clcd_putch
  1545     06B4  2EDF               	goto	l70
  1546     06B5                     l1003:
  1547     06B5  30C0               	movlw	192
  1548     06B6  00F4               	movwf	clcd_putstr@addr
  1549     06B7  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1550     06B8  120A  118A  260D  120A  118A  	fcall	_clcd_putstr
  1551     06BD                     l1005:
  1552     06BD  30C8               	movlw	200
  1553     06BE  00F4               	movwf	clcd_putch@addr
  1554     06BF  0878               	movf	display@key,w
  1555     06C0  3E30               	addlw	48
  1556     06C1  120A  118A  25D6  120A  118A  	fcall	_clcd_putch
  1557     06C6  2EDF               	goto	l70
  1558     06C7                     l1007:
  1559     06C7  0878               	movf	display@key,w
  1560     06C8  00F6               	movwf	??_display
  1561     06C9  01F7               	clrf	??_display+1
  1562                           
  1563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1564                           ; Switch size 1, requested type "simple"
  1565                           ; Number of cases is 1, Range of values is 0 to 0
  1566                           ; switch strategies available:
  1567                           ; Name         Instructions Cycles
  1568                           ; simple_byte            4     3 (average)
  1569                           ; direct_byte           11     8 (fixed)
  1570                           ; jumptable            260     6 (fixed)
  1571                           ;	Chosen strategy is simple_byte
  1572     06CA  0877               	movf	??_display+1,w
  1573     06CB  3A00               	xorlw	0	; case 0
  1574     06CC  1903               	skipnz
  1575     06CD  2ECF               	goto	l1047
  1576     06CE  2EB5               	goto	l1003
  1577     06CF                     l1047:
  1578                           
  1579                           ; Switch size 1, requested type "simple"
  1580                           ; Number of cases is 2, Range of values is 35 to 42
  1581                           ; switch strategies available:
  1582                           ; Name         Instructions Cycles
  1583                           ; simple_byte            7     4 (average)
  1584                           ; direct_byte           35    11 (fixed)
  1585                           ; jumptable            263     9 (fixed)
  1586                           ;	Chosen strategy is simple_byte
  1587     06CF  0876               	movf	??_display,w
  1588     06D0  3A23               	xorlw	35	; case 35
  1589     06D1  1903               	skipnz
  1590     06D2  2EA4               	goto	l999
  1591     06D3  3A09               	xorlw	9	; case 42
  1592     06D4  1903               	skipnz
  1593     06D5  2EA4               	goto	l999
  1594     06D6  2EB5               	goto	l1003
  1595     06D7                     l1009:
  1596     06D7  30C0               	movlw	192
  1597     06D8  00F4               	movwf	clcd_putstr@addr
  1598     06D9  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1599     06DA  120A  118A  260D  120A  118A  	fcall	_clcd_putstr
  1600     06DF                     l70:
  1601     06DF  0008               	return
  1602     06E0                     __end_of_display:
  1603                           
  1604                           	psect	text8
  1605     060D                     __ptext8:	
  1606 ;; *************** function _clcd_putstr *****************
  1607 ;; Defined at:
  1608 ;;		line 70 in file "clcd.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  str             1    wreg     PTR unsigned char 
  1611 ;;		 -> STR_5(15), STR_4(17), STR_3(17), STR_2(7), 
  1612 ;;		 -> STR_1(17), 
  1613 ;;  addr            1    4[COMMON] unsigned char 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  str             1    5[COMMON] PTR unsigned char 
  1616 ;;		 -> STR_5(15), STR_4(17), STR_3(17), STR_2(7), 
  1617 ;;		 -> STR_1(17), 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         1       0       0       0       0
  1628 ;;      Locals:         1       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0
  1630 ;;      Totals:         2       0       0       0       0
  1631 ;;Total ram usage:        2 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; Hardware stack levels required when called: 1
  1634 ;; This function calls:
  1635 ;;		_clcd_write
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;;		_display
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642     060D                     _clcd_putstr:	
  1643                           ;psect for function _clcd_putstr
  1644                           
  1645                           
  1646                           ;incstack = 0
  1647                           ; Regs used in _clcd_putstr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1648                           ;clcd_putstr@str stored from wreg
  1649     060D  00F5               	movwf	clcd_putstr@str
  1650     060E                     l985:
  1651                           
  1652                           ;clcd.c: 70: void clcd_putstr(char *str, char addr);clcd.c: 71: {;clcd.c: 72:     clcd_w
      +                          rite(0, addr);
  1653     060E  0874               	movf	clcd_putstr@addr,w
  1654     060F  00F0               	movwf	clcd_write@byte
  1655     0610  3000               	movlw	0
  1656     0611  120A  118A  265F  120A  118A  	fcall	_clcd_write
  1657                           
  1658                           ;clcd.c: 74:     while(*str != '\0')
  1659     0616  2E29               	goto	l991
  1660     0617                     l987:
  1661                           
  1662                           ;clcd.c: 75:     {;clcd.c: 76:         clcd_write(1, *str);
  1663     0617  0875               	movf	clcd_putstr@str,w
  1664     0618  0084               	movwf	4
  1665     0619  120A  118A  2003  120A  118A  	fcall	stringdir
  1666     061E  00F0               	movwf	clcd_write@byte
  1667     061F  3001               	movlw	1
  1668     0620  120A  118A  265F  120A  118A  	fcall	_clcd_write
  1669     0625                     l989:
  1670                           
  1671                           ;clcd.c: 77:         str++;
  1672     0625  3001               	movlw	1
  1673     0626  00FF               	movwf	btemp+1
  1674     0627  087F               	movf	btemp+1,w
  1675     0628  07F5               	addwf	clcd_putstr@str,f
  1676     0629                     l991:
  1677                           
  1678                           ;clcd.c: 74:     while(*str != '\0')
  1679     0629  0875               	movf	clcd_putstr@str,w
  1680     062A  0084               	movwf	4
  1681     062B  120A  118A  2003  120A  118A  	fcall	stringdir
  1682     0630  3A00               	xorlw	0
  1683     0631  1D03               	skipz
  1684     0632  2E34               	goto	u311
  1685     0633  2E35               	goto	u310
  1686     0634                     u311:
  1687     0634  2E17               	goto	l987
  1688     0635                     u310:
  1689     0635                     l36:
  1690     0635  0008               	return
  1691     0636                     __end_of_clcd_putstr:
  1692                           
  1693                           	psect	text9
  1694     05D6                     __ptext9:	
  1695 ;; *************** function _clcd_putch *****************
  1696 ;; Defined at:
  1697 ;;		line 63 in file "clcd.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  data            1    wreg     unsigned char 
  1700 ;;  addr            1    4[COMMON] unsigned char 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  data            1    5[COMMON] unsigned char 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         1       0       0       0       0
  1713 ;;      Locals:         1       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0
  1715 ;;      Totals:         2       0       0       0       0
  1716 ;;Total ram usage:        2 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 1
  1719 ;; This function calls:
  1720 ;;		_clcd_write
  1721 ;; This function is called by:
  1722 ;;		_display
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726     05D6                     _clcd_putch:	
  1727                           ;psect for function _clcd_putch
  1728                           
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1732                           ;clcd_putch@data stored from wreg
  1733     05D6  00F5               	movwf	clcd_putch@data
  1734     05D7                     l983:
  1735                           
  1736                           ;clcd.c: 63: void clcd_putch(char data, char addr);clcd.c: 64: {;clcd.c: 66:     clcd_wr
      +                          ite(0, addr);
  1737     05D7  0874               	movf	clcd_putch@addr,w
  1738     05D8  00F0               	movwf	clcd_write@byte
  1739     05D9  3000               	movlw	0
  1740     05DA  120A  118A  265F  120A  118A  	fcall	_clcd_write
  1741                           
  1742                           ;clcd.c: 67:     clcd_write(1, data);
  1743     05DF  0875               	movf	clcd_putch@data,w
  1744     05E0  00F0               	movwf	clcd_write@byte
  1745     05E1  3001               	movlw	1
  1746     05E2  120A  118A  265F  120A  118A  	fcall	_clcd_write
  1747     05E7                     l30:
  1748     05E7  0008               	return
  1749     05E8                     __end_of_clcd_putch:
  1750                           
  1751                           	psect	text10
  1752     065F                     __ptext10:	
  1753 ;; *************** function _clcd_write *****************
  1754 ;; Defined at:
  1755 ;;		line 45 in file "clcd.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  mode            1    wreg     unsigned char 
  1758 ;;  byte            1    0[COMMON] unsigned char 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  mode            1    3[COMMON] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         1       0       0       0       0
  1771 ;;      Locals:         1       0       0       0       0
  1772 ;;      Temps:          2       0       0       0       0
  1773 ;;      Totals:         4       0       0       0       0
  1774 ;;Total ram usage:        4 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_init_display_controller
  1780 ;;		_clcd_putch
  1781 ;;		_clcd_putstr
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785     065F                     _clcd_write:	
  1786                           ;psect for function _clcd_write
  1787                           
  1788                           
  1789                           ;incstack = 0
  1790                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  1791                           ;clcd_write@mode stored from wreg
  1792     065F  00F3               	movwf	clcd_write@mode
  1793     0660                     l931:
  1794                           
  1795                           ;clcd.c: 45: void clcd_write(char mode, char byte);clcd.c: 46: {;clcd.c: 47:     RE2 = m
      +                          ode;
  1796     0660  1873               	btfsc	clcd_write@mode,0
  1797     0661  2E63               	goto	u281
  1798     0662  2E67               	goto	u280
  1799     0663                     u281:
  1800     0663  1283               	bcf	3,5	;RP0=0, select bank0
  1801     0664  1303               	bcf	3,6	;RP1=0, select bank0
  1802     0665  1509               	bsf	9,2	;volatile
  1803     0666  2E6A               	goto	u294
  1804     0667                     u280:
  1805     0667  1283               	bcf	3,5	;RP0=0, select bank0
  1806     0668  1303               	bcf	3,6	;RP1=0, select bank0
  1807     0669  1109               	bcf	9,2	;volatile
  1808     066A                     u294:
  1809     066A                     l933:
  1810                           
  1811                           ;clcd.c: 49:     PORTD = byte & 0xF0;
  1812     066A  0870               	movf	clcd_write@byte,w
  1813     066B  39F0               	andlw	240
  1814     066C  0088               	movwf	8	;volatile
  1815     066D                     l935:
  1816                           
  1817                           ;clcd.c: 50:     RE1 = 1;
  1818     066D  1489               	bsf	9,1	;volatile
  1819     066E                     l937:
  1820                           
  1821                           ;clcd.c: 51:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1822     066E  30A6               	movlw	166
  1823     066F  00F1               	movwf	??_clcd_write
  1824     0670                     u417:
  1825     0670  0BF1               	decfsz	??_clcd_write,f
  1826     0671  2E70               	goto	u417
  1827     0672  0000               	nop
  1828     0673                     l939:
  1829                           
  1830                           ;clcd.c: 52:     RE1 = 0;
  1831     0673  1283               	bcf	3,5	;RP0=0, select bank0
  1832     0674  1303               	bcf	3,6	;RP1=0, select bank0
  1833     0675  1089               	bcf	9,1	;volatile
  1834     0676                     l941:
  1835                           
  1836                           ;clcd.c: 54:     PORTD = (byte &0x0F) << 4;
  1837     0676  0870               	movf	clcd_write@byte,w
  1838     0677  390F               	andlw	15
  1839     0678  00F1               	movwf	??_clcd_write
  1840     0679  3003               	movlw	3
  1841     067A                     u305:
  1842     067A  1003               	clrc
  1843     067B  0DF1               	rlf	??_clcd_write,f
  1844     067C  3EFF               	addlw	-1
  1845     067D  1D03               	skipz
  1846     067E  2E7A               	goto	u305
  1847     067F  1003               	clrc
  1848     0680  0D71               	rlf	??_clcd_write,w
  1849     0681  0088               	movwf	8	;volatile
  1850     0682                     l943:
  1851                           
  1852                           ;clcd.c: 55:     RE1 = 1;
  1853     0682  1489               	bsf	9,1	;volatile
  1854     0683                     l945:
  1855                           
  1856                           ;clcd.c: 56:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1857     0683  30A6               	movlw	166
  1858     0684  00F1               	movwf	??_clcd_write
  1859     0685                     u427:
  1860     0685  0BF1               	decfsz	??_clcd_write,f
  1861     0686  2E85               	goto	u427
  1862     0687  0000               	nop
  1863     0688                     l947:
  1864                           
  1865                           ;clcd.c: 57:     RE1 = 0;
  1866     0688  1283               	bcf	3,5	;RP0=0, select bank0
  1867     0689  1303               	bcf	3,6	;RP1=0, select bank0
  1868     068A  1089               	bcf	9,1	;volatile
  1869     068B                     l949:
  1870                           
  1871                           ;clcd.c: 59:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1872     068B  301B               	movlw	27
  1873     068C  00F2               	movwf	??_clcd_write+1
  1874     068D  309E               	movlw	158
  1875     068E  00F1               	movwf	??_clcd_write
  1876     068F                     u437:
  1877     068F  0BF1               	decfsz	??_clcd_write,f
  1878     0690  2E8F               	goto	u437
  1879     0691  0BF2               	decfsz	??_clcd_write+1,f
  1880     0692  2E8F               	goto	u437
  1881     0693  0000               	nop
  1882     0694                     l27:
  1883     0694  0008               	return
  1884     0695                     __end_of_clcd_write:
  1885     007E                     btemp	set	126	;btemp
  1886     007E                     wtemp0	set	126
  1887                           
  1888                           	psect	config
  1889                           
  1890                           ;Config register CONFIG @ 0x2007
  1891                           ;	Oscillator Selection bits
  1892                           ;	FOSC = 0x3, unprogrammed default
  1893                           ;	Watchdog Timer Enable bit
  1894                           ;	WDTE = OFF, WDT disabled
  1895                           ;	Power-up Timer Enable bit
  1896                           ;	PWRTE = 0x1, unprogrammed default
  1897                           ;	Brown-out Reset Enable bit
  1898                           ;	BOREN = 0x1, unprogrammed default
  1899                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1900                           ;	LVP = 0x1, unprogrammed default
  1901                           ;	Data EEPROM Memory Code Protection bit
  1902                           ;	CPD = 0x1, unprogrammed default
  1903                           ;	Flash Program Memory Write Enable bits
  1904                           ;	WRT = 0x3, unprogrammed default
  1905                           ;	In-Circuit Debugger Mode bit
  1906                           ;	DEBUG = 0x1, unprogrammed default
  1907                           ;	Flash Program Memory Code Protection bit
  1908                           ;	CP = 0x1, unprogrammed default
  1909     2007                     	org	8199
  1910     2007  3FFB               	dw	16379

Data Sizes:
    Strings     56
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_putstr@str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[7]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_read_matrix_key
    _read_matrix_key->_scan_keypad
    _init_display->_init_display_controller
    _init_display_controller->_clcd_write
    _display->_clcd_putch
    _display->_clcd_putstr
    _clcd_putstr->_clcd_write
    _clcd_putch->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5334
                                             10 COMMON     2     2      0
                        _clcd_putstr
                            _display
                        _init_config
                    _read_matrix_key
 ---------------------------------------------------------------------------------
 (1) _read_matrix_key                                      2     2      0     150
                                              8 COMMON     2     2      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          8     8      0      60
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     902
                       _init_display
                 _init_matrix_keypad
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_display                                         0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _display                                              3     3      0    2700
                                              6 COMMON     3     3      0
                         _clcd_putch
                        _clcd_putstr
 ---------------------------------------------------------------------------------
 (2) _clcd_putstr                                          2     1      1    1514
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    1098
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_putstr
     _clcd_write
   _display
     _clcd_putch
       _clcd_write
     _clcd_putstr
   _init_config
     _init_display
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
   _read_matrix_key
     _scan_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      12        0.0%
ABS                  0      0       D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Oct 27 18:51:26 2023

                              pc 0002                               l21 05BA                               l30 05E7  
                             l24 0749                               l27 0694                               l51 05C5  
                             l36 0635                               l70 06DF                               l95 05D5  
                             u50 0762                               u51 0761                               u60 0768  
                             u61 0767                               u70 076E                               u71 076D  
                             u80 0774                               u81 0773                               u90 078C  
                             u91 078B                               fsr 0004               _init_matrix_keypad 05C6  
                            l101 065E                              l111 0762                              l103 065D  
                            l120 078C                              l112 076A                              l121 0794  
                            l113 07F5                              l130 07CA                              l122 07A0  
                            l114 0776                              l131 07C4                              l123 079A  
                            l115 0770                              l136 07E0                              l128 07B6  
                            l137 07E8                              l129 07BE                              l139 07EE  
                            l801 07A4                              l811 07C2                              l803 07A8  
                            l821 07CE                              l805 07BC                              l751 05CF  
                            l831 07EC                              l823 07D2                              l753 05D2  
                            l841 07F4                              l825 07E6                              l817 07C8  
                            l761 0750                              l931 0660                              l755 05D3  
                            l747 05C6                              l771 076E                              l763 0754  
                            l851 0642                              l941 0676                              l933 066A  
                            l757 05D4                              l749 05CE                              l837 07F2  
                            l781 077A                              l765 0768                              l861 064E  
                            l943 0682                              l935 066D                              l951 06E0  
                            l791 0798                              l783 077E                              l759 074A  
                            l863 0653                              l871 0655                              l847 0637  
                            l945 0683                              l937 066E                              l961 070E  
                            l953 06E8                              l785 0792                              l777 0774  
                            l873 065A                              l857 0644                              l849 063D  
                            l947 0688                              l939 0673                              l971 073C  
                            l963 0711                              l955 06F0                              l859 0649  
                            l875 065D                              l949 068B                              l973 0744  
                            l965 0719                              l957 0701                              l981 05B5  
                            l797 079E                              l983 05D7                              l991 0629  
                            l967 0726                              l959 0706                              l975 05B0  
                            l985 060E                              l969 072B                              l977 05B3  
                            l993 05BB                              l987 0617                              l995 0696  
                            l979 05B4                              l989 0625                              l997 069B  
                            l999 06A4                              _RB0 0030                              _RB1 0031  
                            _RB2 0032                              _RD0 0040                              _RD1 0041  
                            _RD2 0042                              _RE1 0049                              _RD3 0043  
                            u100 0792                              _RE2 004A                              u101 0791  
                            u110 0798                              u111 0797                              u200 07F2  
                            u120 079E                              u201 07F1                              u121 079D  
                            u130 07B6                              u210 0642                              u131 07B5  
                            u211 0641                              u140 07BC                              u220 0649  
                            u141 07BB                              u221 0648                              u310 0635  
                            u150 07C2                              u230 064E                              u311 0634  
                            u151 07C1                              u231 064D                              u320 069B  
                            u160 07C8                              u240 0653                              u305 067A  
                            u321 069A                              u161 07C7                              u241 0652  
                            u170 07E0                              u250 065A                              u330 0601  
                            u171 07DF                              u251 0659                              u331 0600  
                            u180 07E6                              u181 07E5                              u190 07EC  
                            u407 0746                              u191 07EB                              u280 0667  
                            u417 0670                              u281 0663                              u427 0685  
                            u347 06E4                              u437 068F                              u357 06F4  
                            u294 066A                              u367 0703                              u377 071B  
                            u387 0728                              u397 0737                   clcd_putch@addr 0074  
                            fsr0 0004                   clcd_putch@data 0075              ?_init_matrix_keypad 0070  
               scan_keypad@i_112 0072                 scan_keypad@i_113 0074                 scan_keypad@i_114 0076  
                           l1001 06AC                             l1003 06B5                             l1005 06BD  
                           l1021 05FC                             l1007 06C7                             l1023 0601  
                           l1015 05E8                             l1009 06D7                             l1025 0603  
                           l1017 05ED                             l1019 05F5                             l1047 06CF  
                           STR_1 001A                             STR_2 003A                             STR_3 0009  
                           STR_4 0009                             STR_5 002B                             _main 05E8  
                           btemp 007E                             start 0000                   clcd_putstr@str 0075  
           ??_init_matrix_keypad 0070                   clcd_write@byte 0070                   clcd_write@mode 0073  
                          ?_main 0070                     ?_init_config 0070                            _PORTD 0008  
                          _TRISB 0086                            _TRISD 0088                            _nRBPU 040F  
                __end_of_display 06E0                            pclath 000A                  clcd_putstr@addr 0074  
                          status 0003                            wtemp0 007E                     ?_scan_keypad 0070  
                __initialization 07F6                     __end_of_main 060D                ??_read_matrix_key 0078  
                         ??_main 007A                    ?_init_display 0070                           _TRISE1 0449  
                         _TRISE2 044A          _init_display_controller 06E0                        ??_display 0076  
                   __pdataCOMMON 007C                   ??_init_display 0076          __end_of__initialization 07FC  
                 __pcstackCOMMON 0070        ??_init_display_controller 0074                       _clcd_putch 05D6  
                     _clcd_write 065F                       __pmaintext 05E8                       __stringtab 0003  
                _read_matrix_key 0636             __end_of_init_display 05BB                          __ptext1 0636  
                        __ptext2 074A                          __ptext3 05BB                          __ptext4 05C6  
                        __ptext5 05B0                          __ptext6 06E0                          __ptext7 0695  
                        __ptext8 060D                          __ptext9 05D6                          _display 0695  
__end_of_init_display_controller 074A                          main@key 007B             end_of_initialization 07FC  
                  ??_clcd_putstr 0075                      ?_clcd_putch 0074                      ?_clcd_write 0070  
        __end_of_read_matrix_key 065F                       display@key 0078                       main@prekey 007A  
            __end_of_clcd_putstr 0636                    __pidataCOMMON 05AF              start_initialization 07F6  
                   scan_keypad@i 0070                    ??_init_config 0076                        ___latbits 0002  
               ?_read_matrix_key 0070                     _init_display 05B0                    ??_scan_keypad 0070  
                    _clcd_putstr 060D                        __pstrings 0003              read_matrix_key@mode 0078  
            read_matrix_key@once 007C                         ?_display 0070              __end_of_init_config 05C6  
       ?_init_display_controller 0070                     ??_clcd_putch 0075       __end_of_init_matrix_keypad 05D6  
                   ??_clcd_write 0071              __end_of_scan_keypad 07F6                      __stringbase 0008  
             __end_of_clcd_putch 05E8               __end_of_clcd_write 0695               __end_of__stringtab 0009  
                    _init_config 05BB                         __ptext10 065F               read_matrix_key@key 0079  
                    _scan_keypad 074A                     ?_clcd_putstr 0074                        stringcode 0003  
                       stringdir 0003                         stringtab 0003  
