

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Oct 26 10:56:29 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0000                     	;# 
   172     0001                     	;# 
   173     0002                     	;# 
   174     0003                     	;# 
   175     0004                     	;# 
   176     0005                     	;# 
   177     0006                     	;# 
   178     0007                     	;# 
   179     0008                     	;# 
   180     0009                     	;# 
   181     000A                     	;# 
   182     000B                     	;# 
   183     000C                     	;# 
   184     000D                     	;# 
   185     000E                     	;# 
   186     000E                     	;# 
   187     000F                     	;# 
   188     0010                     	;# 
   189     0011                     	;# 
   190     0012                     	;# 
   191     0013                     	;# 
   192     0014                     	;# 
   193     0015                     	;# 
   194     0015                     	;# 
   195     0016                     	;# 
   196     0017                     	;# 
   197     0018                     	;# 
   198     0019                     	;# 
   199     001A                     	;# 
   200     001B                     	;# 
   201     001B                     	;# 
   202     001C                     	;# 
   203     001D                     	;# 
   204     001E                     	;# 
   205     001F                     	;# 
   206     0081                     	;# 
   207     0085                     	;# 
   208     0086                     	;# 
   209     0087                     	;# 
   210     0088                     	;# 
   211     0089                     	;# 
   212     008C                     	;# 
   213     008D                     	;# 
   214     008E                     	;# 
   215     0091                     	;# 
   216     0092                     	;# 
   217     0093                     	;# 
   218     0094                     	;# 
   219     0098                     	;# 
   220     0099                     	;# 
   221     009C                     	;# 
   222     009D                     	;# 
   223     009E                     	;# 
   224     009F                     	;# 
   225     010C                     	;# 
   226     010D                     	;# 
   227     010E                     	;# 
   228     010F                     	;# 
   229     018C                     	;# 
   230     018D                     	;# 
   231     0008                     _PORTD	set	8
   232     0049                     _RE1	set	73
   233     004A                     _RE2	set	74
   234     0088                     _TRISD	set	136
   235     0449                     _TRISE1	set	1097
   236     044A                     _TRISE2	set	1098
   237                           
   238                           	psect	strings
   239     0003                     __pstrings:
   240     0003                     stringtab:
   241     0003                     __stringtab:
   242     0003                     stringcode:	
   243                           ;	String table - string pointers are 1 byte each
   244                           
   245     0003                     stringdir:
   246     0003  3000               	movlw	high stringdir
   247     0004  008A               	movwf	10
   248     0005  0804               	movf	4,w
   249     0006  0A84               	incf	4,f
   250     0007  0782               	addwf	2,f
   251     0008                     __stringbase:
   252     0008  3400               	retlw	0
   253     0009                     __end_of__stringtab:
   254     0009                     STR_1:
   255     0009  3448               	retlw	72	;'H'
   256     000A  3465               	retlw	101	;'e'
   257     000B  346C               	retlw	108	;'l'
   258     000C  346C               	retlw	108	;'l'
   259     000D  346F               	retlw	111	;'o'
   260     000E  3400               	retlw	0
   261                           
   262                           	psect	cinit
   263     07FC                     start_initialization:	
   264                           ; #config settings
   265                           
   266     07FC                     __initialization:
   267     07FC                     end_of_initialization:	
   268                           ;End of C runtime variable initialization code
   269                           
   270     07FC                     __end_of__initialization:
   271     07FC  0183               	clrf	3
   272     07FD  120A  118A  2F32   	ljmp	_main	;jump to C main() function
   273                           
   274                           	psect	cstackCOMMON
   275     0070                     __pcstackCOMMON:
   276     0070                     ?_init_clcd:
   277     0070                     ?_init_display_controller:	
   278                           ; 1 bytes @ 0x0
   279                           
   280     0070                     ?_clcd_write:	
   281                           ; 1 bytes @ 0x0
   282                           
   283     0070                     ?_init_config:	
   284                           ; 1 bytes @ 0x0
   285                           
   286     0070                     ?_main:	
   287                           ; 1 bytes @ 0x0
   288                           
   289     0070                     clcd_write@mode:	
   290                           ; 1 bytes @ 0x0
   291                           
   292                           
   293                           ; 1 bytes @ 0x0
   294     0070                     	ds	1
   295     0071                     ??_clcd_write:
   296                           
   297                           ; 1 bytes @ 0x1
   298     0071                     	ds	2
   299     0073                     clcd_write@byte:
   300                           
   301                           ; 1 bytes @ 0x3
   302     0073                     	ds	1
   303     0074                     ?_clcd_putch:
   304     0074                     ?_clcd_print:	
   305                           ; 1 bytes @ 0x4
   306                           
   307     0074                     ??_init_display_controller:	
   308                           ; 1 bytes @ 0x4
   309                           
   310     0074                     clcd_putch@addr:	
   311                           ; 1 bytes @ 0x4
   312                           
   313     0074                     clcd_print@addr:	
   314                           ; 1 bytes @ 0x4
   315                           
   316                           
   317                           ; 1 bytes @ 0x4
   318     0074                     	ds	1
   319     0075                     ??_clcd_putch:
   320     0075                     ??_clcd_print:	
   321                           ; 1 bytes @ 0x5
   322                           
   323     0075                     clcd_putch@data:	
   324                           ; 1 bytes @ 0x5
   325                           
   326     0075                     clcd_print@str:	
   327                           ; 1 bytes @ 0x5
   328                           
   329                           
   330                           ; 1 bytes @ 0x5
   331     0075                     	ds	1
   332     0076                     ??_init_clcd:
   333     0076                     ??_init_config:	
   334                           ; 1 bytes @ 0x6
   335                           
   336     0076                     ??_main:	
   337                           ; 1 bytes @ 0x6
   338                           
   339                           
   340                           	psect	maintext
   341     0732                     __pmaintext:	
   342                           ; 1 bytes @ 0x6
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 17 in file "main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : B00/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0
   365 ;;      Totals:         0       0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels required when called: 4
   368 ;; This function calls:
   369 ;;		_clcd_print
   370 ;;		_clcd_putch
   371 ;;		_init_config
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377     0732                     _main:	
   378                           ;psect for function _main
   379                           
   380     0732                     l693:	
   381                           ;incstack = 0
   382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   383                           
   384     0732  120A  118A  2710  120A  118A  	fcall	_init_config
   385     0737                     l14:
   386     0737  3085               	movlw	133
   387     0738  00F4               	movwf	clcd_putch@addr
   388     0739  3048               	movlw	72
   389     073A  120A  118A  2721  120A  118A  	fcall	_clcd_putch
   390     073F                     l695:
   391     073F  30C7               	movlw	199
   392     0740  00F4               	movwf	clcd_print@addr
   393     0741  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   394     0742  120A  118A  276B  120A  118A  	fcall	_clcd_print
   395     0747  2F37               	goto	l14
   396     0748  120A  118A  2800   	ljmp	start
   397     074B                     __end_of_main:
   398                           
   399                           	psect	text1
   400     0710                     __ptext1:	
   401 ;; *************** function _init_config *****************
   402 ;; Defined at:
   403 ;;		line 13 in file "main.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, status,2, status,0, pclath, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels used: 1
   423 ;; Hardware stack levels required when called: 3
   424 ;; This function calls:
   425 ;;		_init_clcd
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431     0710                     _init_config:	
   432                           ;psect for function _init_config
   433                           
   434     0710                     l681:	
   435                           ;incstack = 0
   436                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   437                           
   438     0710  120A  118A  2716  120A  118A  	fcall	_init_clcd
   439     0715                     l9:
   440     0715  0008               	return
   441     0716                     __end_of_init_config:
   442                           
   443                           	psect	text2
   444     0716                     __ptext2:	
   445 ;; *************** function _init_clcd *****************
   446 ;; Defined at:
   447 ;;		line 11 in file "clcd.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, status,2, status,0, pclath, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   461 ;;      Params:         0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0
   463 ;;      Temps:          0       0       0       0       0
   464 ;;      Totals:         0       0       0       0       0
   465 ;;Total ram usage:        0 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; Hardware stack levels required when called: 2
   468 ;; This function calls:
   469 ;;		_init_display_controller
   470 ;; This function is called by:
   471 ;;		_init_config
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475     0716                     _init_clcd:	
   476                           ;psect for function _init_clcd
   477                           
   478     0716                     l673:	
   479                           ;incstack = 0
   480                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   481                           
   482                           
   483                           ;clcd.c: 13:     TRISD = 0x00;
   484     0716  1683               	bsf	3,5	;RP0=1, select bank1
   485     0717  1303               	bcf	3,6	;RP1=0, select bank1
   486     0718  0188               	clrf	8	;volatile
   487     0719                     l675:
   488                           
   489                           ;clcd.c: 14:     TRISE2 = 0;
   490     0719  1109               	bcf	9,2	;volatile
   491     071A                     l677:
   492                           
   493                           ;clcd.c: 15:     TRISE1 = 0;
   494     071A  1089               	bcf	9,1	;volatile
   495     071B                     l679:
   496                           
   497                           ;clcd.c: 17:     init_display_controller();
   498     071B  120A  118A  2793  120A  118A  	fcall	_init_display_controller
   499     0720                     l38:
   500     0720  0008               	return
   501     0721                     __end_of_init_clcd:
   502                           
   503                           	psect	text3
   504     0793                     __ptext3:	
   505 ;; *************** function _init_display_controller *****************
   506 ;; Defined at:
   507 ;;		line 21 in file "clcd.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;		None
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, status,2, status,0, pclath, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       0       0       0       0
   522 ;;      Locals:         0       0       0       0       0
   523 ;;      Temps:          2       0       0       0       0
   524 ;;      Totals:         2       0       0       0       0
   525 ;;Total ram usage:        2 bytes
   526 ;; Hardware stack levels used: 1
   527 ;; Hardware stack levels required when called: 1
   528 ;; This function calls:
   529 ;;		_clcd_write
   530 ;; This function is called by:
   531 ;;		_init_clcd
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535     0793                     _init_display_controller:	
   536                           ;psect for function _init_display_controller
   537                           
   538     0793                     l655:	
   539                           ;incstack = 0
   540                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   541                           
   542                           
   543                           ;clcd.c: 23:     _delay((unsigned long)((30)*(20000000/4000.0)));
   544     0793  30C3               	movlw	195
   545     0794  00F5               	movwf	??_init_display_controller+1
   546     0795  30CD               	movlw	205
   547     0796  00F4               	movwf	??_init_display_controller
   548     0797                     u77:
   549     0797  0BF4               	decfsz	??_init_display_controller,f
   550     0798  2F97               	goto	u77
   551     0799  0BF5               	decfsz	??_init_display_controller+1,f
   552     079A  2F97               	goto	u77
   553     079B                     l657:
   554                           
   555                           ;clcd.c: 25:     clcd_write(0x33, 0);
   556     079B  01F0               	clrf	clcd_write@mode
   557     079C  3033               	movlw	51
   558     079D  120A  118A  274B  120A  118A  	fcall	_clcd_write
   559     07A2                     l659:
   560                           
   561                           ;clcd.c: 27:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   562     07A2  301B               	movlw	27
   563     07A3  00F5               	movwf	??_init_display_controller+1
   564     07A4  309E               	movlw	158
   565     07A5  00F4               	movwf	??_init_display_controller
   566     07A6                     u87:
   567     07A6  0BF4               	decfsz	??_init_display_controller,f
   568     07A7  2FA6               	goto	u87
   569     07A8  0BF5               	decfsz	??_init_display_controller+1,f
   570     07A9  2FA6               	goto	u87
   571     07AA  0000               	nop
   572                           
   573                           ;clcd.c: 29:     clcd_write(0x33, 0);
   574     07AB  01F0               	clrf	clcd_write@mode
   575     07AC  3033               	movlw	51
   576     07AD  120A  118A  274B  120A  118A  	fcall	_clcd_write
   577     07B2                     l661:
   578                           
   579                           ;clcd.c: 31:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   580     07B2  301B               	movlw	27
   581     07B3  00F5               	movwf	??_init_display_controller+1
   582     07B4  309E               	movlw	158
   583     07B5  00F4               	movwf	??_init_display_controller
   584     07B6                     u97:
   585     07B6  0BF4               	decfsz	??_init_display_controller,f
   586     07B7  2FB6               	goto	u97
   587     07B8  0BF5               	decfsz	??_init_display_controller+1,f
   588     07B9  2FB6               	goto	u97
   589     07BA  0000               	nop
   590     07BB                     l663:
   591                           
   592                           ;clcd.c: 33:     clcd_write(0x33, 0);
   593     07BB  01F0               	clrf	clcd_write@mode
   594     07BC  3033               	movlw	51
   595     07BD  120A  118A  274B  120A  118A  	fcall	_clcd_write
   596                           
   597                           ;clcd.c: 35:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   598     07C2  301B               	movlw	27
   599     07C3  00F5               	movwf	??_init_display_controller+1
   600     07C4  309E               	movlw	158
   601     07C5  00F4               	movwf	??_init_display_controller
   602     07C6                     u107:
   603     07C6  0BF4               	decfsz	??_init_display_controller,f
   604     07C7  2FC6               	goto	u107
   605     07C8  0BF5               	decfsz	??_init_display_controller+1,f
   606     07C9  2FC6               	goto	u107
   607     07CA  0000               	nop
   608     07CB                     l665:
   609                           
   610                           ;clcd.c: 37:     clcd_write(0x38, 0);
   611     07CB  01F0               	clrf	clcd_write@mode
   612     07CC  3038               	movlw	56
   613     07CD  120A  118A  274B  120A  118A  	fcall	_clcd_write
   614     07D2                     l667:
   615                           
   616                           ;clcd.c: 39:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   617     07D2  301B               	movlw	27
   618     07D3  00F5               	movwf	??_init_display_controller+1
   619     07D4  309E               	movlw	158
   620     07D5  00F4               	movwf	??_init_display_controller
   621     07D6                     u117:
   622     07D6  0BF4               	decfsz	??_init_display_controller,f
   623     07D7  2FD6               	goto	u117
   624     07D8  0BF5               	decfsz	??_init_display_controller+1,f
   625     07D9  2FD6               	goto	u117
   626     07DA  0000               	nop
   627                           
   628                           ;clcd.c: 41:     clcd_write(0x01, 0);
   629     07DB  01F0               	clrf	clcd_write@mode
   630     07DC  3001               	movlw	1
   631     07DD  120A  118A  274B  120A  118A  	fcall	_clcd_write
   632     07E2                     l669:
   633                           
   634                           ;clcd.c: 43:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   635     07E2  301B               	movlw	27
   636     07E3  00F5               	movwf	??_init_display_controller+1
   637     07E4  309E               	movlw	158
   638     07E5  00F4               	movwf	??_init_display_controller
   639     07E6                     u127:
   640     07E6  0BF4               	decfsz	??_init_display_controller,f
   641     07E7  2FE6               	goto	u127
   642     07E8  0BF5               	decfsz	??_init_display_controller+1,f
   643     07E9  2FE6               	goto	u127
   644     07EA  0000               	nop
   645     07EB                     l671:
   646                           
   647                           ;clcd.c: 45:     clcd_write(0x0C, 0);
   648     07EB  01F0               	clrf	clcd_write@mode
   649     07EC  300C               	movlw	12
   650     07ED  120A  118A  274B  120A  118A  	fcall	_clcd_write
   651                           
   652                           ;clcd.c: 47:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   653     07F2  301B               	movlw	27
   654     07F3  00F5               	movwf	??_init_display_controller+1
   655     07F4  309E               	movlw	158
   656     07F5  00F4               	movwf	??_init_display_controller
   657     07F6                     u137:
   658     07F6  0BF4               	decfsz	??_init_display_controller,f
   659     07F7  2FF6               	goto	u137
   660     07F8  0BF5               	decfsz	??_init_display_controller+1,f
   661     07F9  2FF6               	goto	u137
   662     07FA  0000               	nop
   663     07FB                     l41:
   664     07FB  0008               	return
   665     07FC                     __end_of_init_display_controller:
   666                           
   667                           	psect	text4
   668     0721                     __ptext4:	
   669 ;; *************** function _clcd_putch *****************
   670 ;; Defined at:
   671 ;;		line 66 in file "clcd.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;  data            1    wreg     unsigned char 
   674 ;;  addr            1    4[COMMON] unsigned char 
   675 ;; Auto vars:     Size  Location     Type
   676 ;;  data            1    5[COMMON] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0, pclath, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   686 ;;      Params:         1       0       0       0       0
   687 ;;      Locals:         1       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0
   689 ;;      Totals:         2       0       0       0       0
   690 ;;Total ram usage:        2 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 1
   693 ;; This function calls:
   694 ;;		_clcd_write
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700     0721                     _clcd_putch:	
   701                           ;psect for function _clcd_putch
   702                           
   703                           
   704                           ;incstack = 0
   705                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
   706                           ;clcd_putch@data stored from wreg
   707     0721  00F5               	movwf	clcd_putch@data
   708     0722                     l683:
   709                           
   710                           ;clcd.c: 66: void clcd_putch(char data, char addr);clcd.c: 67: {;clcd.c: 68:     clcd_wr
      +                          ite(addr, 0);
   711     0722  01F0               	clrf	clcd_write@mode
   712     0723  0874               	movf	clcd_putch@addr,w
   713     0724  120A  118A  274B  120A  118A  	fcall	_clcd_write
   714                           
   715                           ;clcd.c: 70:     clcd_write(data, 1);
   716     0729  01F0               	clrf	clcd_write@mode
   717     072A  0AF0               	incf	clcd_write@mode,f
   718     072B  0875               	movf	clcd_putch@data,w
   719     072C  120A  118A  274B  120A  118A  	fcall	_clcd_write
   720     0731                     l47:
   721     0731  0008               	return
   722     0732                     __end_of_clcd_putch:
   723                           
   724                           	psect	text5
   725     076B                     __ptext5:	
   726 ;; *************** function _clcd_print *****************
   727 ;; Defined at:
   728 ;;		line 73 in file "clcd.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  str             1    wreg     PTR unsigned char 
   731 ;;		 -> STR_1(6), 
   732 ;;  addr            1    4[COMMON] unsigned char 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  str             1    5[COMMON] PTR unsigned char 
   735 ;;		 -> STR_1(6), 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         1       0       0       0       0
   746 ;;      Locals:         1       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0
   748 ;;      Totals:         2       0       0       0       0
   749 ;;Total ram usage:        2 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; Hardware stack levels required when called: 1
   752 ;; This function calls:
   753 ;;		_clcd_write
   754 ;; This function is called by:
   755 ;;		_main
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759     076B                     _clcd_print:	
   760                           ;psect for function _clcd_print
   761                           
   762                           
   763                           ;incstack = 0
   764                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   765                           ;clcd_print@str stored from wreg
   766     076B  00F5               	movwf	clcd_print@str
   767     076C                     l685:
   768                           
   769                           ;clcd.c: 73: void clcd_print(char *str, char addr);clcd.c: 74: {;clcd.c: 75:     clcd_wr
      +                          ite(addr, 0);
   770     076C  01F0               	clrf	clcd_write@mode
   771     076D  0874               	movf	clcd_print@addr,w
   772     076E  120A  118A  274B  120A  118A  	fcall	_clcd_write
   773                           
   774                           ;clcd.c: 77:     while(*str != '\0')
   775     0773  2F86               	goto	l691
   776     0774                     l687:
   777                           
   778                           ;clcd.c: 78:     {;clcd.c: 79:         clcd_write(*str, 1);
   779     0774  01F0               	clrf	clcd_write@mode
   780     0775  0AF0               	incf	clcd_write@mode,f
   781     0776  0875               	movf	clcd_print@str,w
   782     0777  0084               	movwf	4
   783     0778  120A  118A  2003  120A  118A  	fcall	stringdir
   784     077D  120A  118A  274B  120A  118A  	fcall	_clcd_write
   785     0782                     l689:
   786                           
   787                           ;clcd.c: 80:         str++;
   788     0782  3001               	movlw	1
   789     0783  00FF               	movwf	btemp+1
   790     0784  087F               	movf	btemp+1,w
   791     0785  07F5               	addwf	clcd_print@str,f
   792     0786                     l691:
   793                           
   794                           ;clcd.c: 77:     while(*str != '\0')
   795     0786  0875               	movf	clcd_print@str,w
   796     0787  0084               	movwf	4
   797     0788  120A  118A  2003  120A  118A  	fcall	stringdir
   798     078D  3A00               	xorlw	0
   799     078E  1D03               	skipz
   800     078F  2F91               	goto	u61
   801     0790  2F92               	goto	u60
   802     0791                     u61:
   803     0791  2F74               	goto	l687
   804     0792                     u60:
   805     0792                     l53:
   806     0792  0008               	return
   807     0793                     __end_of_clcd_print:
   808                           
   809                           	psect	text6
   810     074B                     __ptext6:	
   811 ;; *************** function _clcd_write *****************
   812 ;; Defined at:
   813 ;;		line 50 in file "clcd.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  byte            1    wreg     unsigned char 
   816 ;;  mode            1    0[COMMON] unsigned char 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  byte            1    3[COMMON] unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         1       0       0       0       0
   829 ;;      Locals:         1       0       0       0       0
   830 ;;      Temps:          2       0       0       0       0
   831 ;;      Totals:         4       0       0       0       0
   832 ;;Total ram usage:        4 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_init_display_controller
   838 ;;		_clcd_putch
   839 ;;		_clcd_print
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843     074B                     _clcd_write:	
   844                           ;psect for function _clcd_write
   845                           
   846                           
   847                           ;incstack = 0
   848                           ; Regs used in _clcd_write: [wreg]
   849                           ;clcd_write@byte stored from wreg
   850     074B  00F3               	movwf	clcd_write@byte
   851     074C                     l647:
   852                           
   853                           ;clcd.c: 50: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 51: 
      +                          {;clcd.c: 52:     RE2 = mode;
   854     074C  1870               	btfsc	clcd_write@mode,0
   855     074D  2F4F               	goto	u41
   856     074E  2F53               	goto	u40
   857     074F                     u41:
   858     074F  1283               	bcf	3,5	;RP0=0, select bank0
   859     0750  1303               	bcf	3,6	;RP1=0, select bank0
   860     0751  1509               	bsf	9,2	;volatile
   861     0752  2F56               	goto	u54
   862     0753                     u40:
   863     0753  1283               	bcf	3,5	;RP0=0, select bank0
   864     0754  1303               	bcf	3,6	;RP1=0, select bank0
   865     0755  1109               	bcf	9,2	;volatile
   866     0756                     u54:
   867     0756                     l649:
   868                           
   869                           ;clcd.c: 54:     PORTD = byte;
   870     0756  0873               	movf	clcd_write@byte,w
   871     0757  0088               	movwf	8	;volatile
   872     0758                     l651:
   873                           
   874                           ;clcd.c: 56:     RE1 = 1;
   875     0758  1489               	bsf	9,1	;volatile
   876                           
   877                           ;clcd.c: 58:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   878     0759  30A6               	movlw	166
   879     075A  00F1               	movwf	??_clcd_write
   880     075B                     u147:
   881     075B  0BF1               	decfsz	??_clcd_write,f
   882     075C  2F5B               	goto	u147
   883     075D  0000               	nop
   884     075E                     l653:
   885                           
   886                           ;clcd.c: 60:     RE1 = 0;
   887     075E  1283               	bcf	3,5	;RP0=0, select bank0
   888     075F  1303               	bcf	3,6	;RP1=0, select bank0
   889     0760  1089               	bcf	9,1	;volatile
   890                           
   891                           ;clcd.c: 62:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   892     0761  301B               	movlw	27
   893     0762  00F2               	movwf	??_clcd_write+1
   894     0763  309E               	movlw	158
   895     0764  00F1               	movwf	??_clcd_write
   896     0765                     u157:
   897     0765  0BF1               	decfsz	??_clcd_write,f
   898     0766  2F65               	goto	u157
   899     0767  0BF2               	decfsz	??_clcd_write+1,f
   900     0768  2F65               	goto	u157
   901     0769  0000               	nop
   902     076A                     l44:
   903     076A  0008               	return
   904     076B                     __end_of_clcd_write:
   905     007E                     btemp	set	126	;btemp
   906     007E                     wtemp0	set	126
   907                           
   908                           	psect	config
   909                           
   910                           ;Config register CONFIG @ 0x2007
   911                           ;	Oscillator Selection bits
   912                           ;	FOSC = 0x3, unprogrammed default
   913                           ;	Watchdog Timer Enable bit
   914                           ;	WDTE = OFF, WDT disabled
   915                           ;	Power-up Timer Enable bit
   916                           ;	PWRTE = 0x1, unprogrammed default
   917                           ;	Brown-out Reset Enable bit
   918                           ;	BOREN = 0x1, unprogrammed default
   919                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   920                           ;	LVP = 0x1, unprogrammed default
   921                           ;	Data EEPROM Memory Code Protection bit
   922                           ;	CPD = 0x1, unprogrammed default
   923                           ;	Flash Program Memory Write Enable bits
   924                           ;	WRT = 0x3, unprogrammed default
   925                           ;	In-Circuit Debugger Mode bit
   926                           ;	DEBUG = 0x1, unprogrammed default
   927                           ;	Flash Program Memory Code Protection bit
   928                           ;	CP = 0x1, unprogrammed default
   929     2007                     	org	8199
   930     2007  3FFB               	dw	16379

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _main->_clcd_putch
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2708
                         _clcd_print
                         _clcd_putch
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     804
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1     924
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           2     1      1     980
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Oct 26 10:56:29 2023

                              l9 0715                                pc 0002                   clcd_print@addr 0074  
                             l14 0737                               l41 07FB                               l44 076A  
                             l53 0792                               l38 0720                               l47 0731  
                             u40 0753                               u41 074F                               u60 0792  
                             u61 0791                               u54 0756                               u77 0797  
                             u87 07A6                               u97 07B6                               fsr 0004  
                            l651 0758                              l653 075E                              l661 07B2  
                            l647 074C                              l671 07EB                              l663 07BB  
                            l655 0793                              l649 0756                              l665 07CB  
                            l657 079B                              l673 0716                              l681 0710  
                            l691 0786                              l683 0722                              l667 07D2  
                            l659 07A2                              l675 0719                              l685 076C  
                            l669 07E2                              l677 071A                              l693 0732  
                            l687 0774                              l679 071B                              l695 073F  
                            l689 0782                              _RE1 0049                              _RE2 004A  
                            u107 07C6                              u117 07D6                              u127 07E6  
                            u137 07F6                              u147 075B                              u157 0765  
                 clcd_putch@addr 0074                              fsr0 0004                   clcd_putch@data 0075  
                           STR_1 0009                             _main 0732                             btemp 007E  
                           start 0000                   clcd_write@byte 0073                   clcd_write@mode 0070  
                          ?_main 0070                     ?_init_config 0070                            _PORTD 0008  
                          _TRISD 0088                            pclath 000A                            status 0003  
                          wtemp0 007E                  __initialization 07FC                     __end_of_main 074B  
                         ??_main 0076                           _TRISE1 0449                           _TRISE2 044A  
        _init_display_controller 0793          __end_of__initialization 07FC                   __pcstackCOMMON 0070  
      ??_init_display_controller 0074                       _clcd_print 076B                       _clcd_putch 0721  
                     _clcd_write 074B                       __pmaintext 0732                       __stringtab 0003  
                        __ptext1 0710                          __ptext2 0716                          __ptext3 0793  
                        __ptext4 0721                          __ptext5 076B                          __ptext6 074B  
__end_of_init_display_controller 07FC                __end_of_init_clcd 0721             end_of_initialization 07FC  
                    ?_clcd_print 0074                      ?_clcd_putch 0074                      ?_clcd_write 0070  
                  clcd_print@str 0075              start_initialization 07FC                    ??_init_config 0076  
                      ___latbits 0002                        __pstrings 0003                        _init_clcd 0716  
            __end_of_init_config 0716         ?_init_display_controller 0070                     ??_clcd_print 0075  
                   ??_clcd_putch 0075                     ??_clcd_write 0071                      __stringbase 0008  
             __end_of_clcd_print 0793               __end_of_clcd_putch 0732               __end_of_clcd_write 076B  
                     ?_init_clcd 0070               __end_of__stringtab 0009                      _init_config 0710  
                    ??_init_clcd 0076                        stringcode 0003                         stringdir 0003  
                       stringtab 0003  
