

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Nov 03 16:52:03 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 22/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0098                     	;# 
   105     0099                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     010C                     	;# 
   111     010D                     	;# 
   112     010E                     	;# 
   113     010F                     	;# 
   114     018C                     	;# 
   115     018D                     	;# 
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000E                     	;# 
   132     000F                     	;# 
   133     0010                     	;# 
   134     0011                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0015                     	;# 
   139     0015                     	;# 
   140     0016                     	;# 
   141     0017                     	;# 
   142     0018                     	;# 
   143     0019                     	;# 
   144     001A                     	;# 
   145     001B                     	;# 
   146     001B                     	;# 
   147     001C                     	;# 
   148     001D                     	;# 
   149     001E                     	;# 
   150     001F                     	;# 
   151     0081                     	;# 
   152     0085                     	;# 
   153     0086                     	;# 
   154     0087                     	;# 
   155     0088                     	;# 
   156     0089                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0094                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0000                     	;# 
   177     0001                     	;# 
   178     0002                     	;# 
   179     0003                     	;# 
   180     0004                     	;# 
   181     0005                     	;# 
   182     0006                     	;# 
   183     0007                     	;# 
   184     0008                     	;# 
   185     0009                     	;# 
   186     000A                     	;# 
   187     000B                     	;# 
   188     000C                     	;# 
   189     000D                     	;# 
   190     000E                     	;# 
   191     000E                     	;# 
   192     000F                     	;# 
   193     0010                     	;# 
   194     0011                     	;# 
   195     0012                     	;# 
   196     0013                     	;# 
   197     0014                     	;# 
   198     0015                     	;# 
   199     0015                     	;# 
   200     0016                     	;# 
   201     0017                     	;# 
   202     0018                     	;# 
   203     0019                     	;# 
   204     001A                     	;# 
   205     001B                     	;# 
   206     001B                     	;# 
   207     001C                     	;# 
   208     001D                     	;# 
   209     001E                     	;# 
   210     001F                     	;# 
   211     0081                     	;# 
   212     0085                     	;# 
   213     0086                     	;# 
   214     0087                     	;# 
   215     0088                     	;# 
   216     0089                     	;# 
   217     008C                     	;# 
   218     008D                     	;# 
   219     008E                     	;# 
   220     0091                     	;# 
   221     0092                     	;# 
   222     0093                     	;# 
   223     0094                     	;# 
   224     0098                     	;# 
   225     0099                     	;# 
   226     009C                     	;# 
   227     009D                     	;# 
   228     009E                     	;# 
   229     009F                     	;# 
   230     010C                     	;# 
   231     010D                     	;# 
   232     010E                     	;# 
   233     010F                     	;# 
   234     018C                     	;# 
   235     018D                     	;# 
   236     0000                     	;# 
   237     0001                     	;# 
   238     0002                     	;# 
   239     0003                     	;# 
   240     0004                     	;# 
   241     0005                     	;# 
   242     0006                     	;# 
   243     0007                     	;# 
   244     0008                     	;# 
   245     0009                     	;# 
   246     000A                     	;# 
   247     000B                     	;# 
   248     000C                     	;# 
   249     000D                     	;# 
   250     000E                     	;# 
   251     000E                     	;# 
   252     000F                     	;# 
   253     0010                     	;# 
   254     0011                     	;# 
   255     0012                     	;# 
   256     0013                     	;# 
   257     0014                     	;# 
   258     0015                     	;# 
   259     0015                     	;# 
   260     0016                     	;# 
   261     0017                     	;# 
   262     0018                     	;# 
   263     0019                     	;# 
   264     001A                     	;# 
   265     001B                     	;# 
   266     001B                     	;# 
   267     001C                     	;# 
   268     001D                     	;# 
   269     001E                     	;# 
   270     001F                     	;# 
   271     0081                     	;# 
   272     0085                     	;# 
   273     0086                     	;# 
   274     0087                     	;# 
   275     0088                     	;# 
   276     0089                     	;# 
   277     008C                     	;# 
   278     008D                     	;# 
   279     008E                     	;# 
   280     0091                     	;# 
   281     0092                     	;# 
   282     0093                     	;# 
   283     0094                     	;# 
   284     0098                     	;# 
   285     0099                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     009F                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     018C                     	;# 
   295     018D                     	;# 
   296                           
   297                           	psect	idataCOMMON
   298     05CB                     __pidataCOMMON:
   299                           
   300                           ;initializer for read_matrix_keypad@once
   301     05CB  3401               	retlw	1
   302                           
   303                           ;initializer for display@pos
   304     05CC  3401               	retlw	1
   305     0008                     _PORTD	set	8
   306     0032                     _RB2	set	50
   307     0031                     _RB1	set	49
   308     0030                     _RB0	set	48
   309     0040                     _RD0	set	64
   310     0041                     _RD1	set	65
   311     0042                     _RD2	set	66
   312     0043                     _RD3	set	67
   313     0049                     _RE1	set	73
   314     004A                     _RE2	set	74
   315     0086                     _TRISB	set	134
   316     0088                     _TRISD	set	136
   317     040F                     _nRBPU	set	1039
   318     0449                     _TRISE1	set	1097
   319     044A                     _TRISE2	set	1098
   320                           
   321                           	psect	strings
   322     0003                     __pstrings:
   323     0003                     stringtab:
   324     0003                     __stringtab:
   325     0003                     stringcode:	
   326                           ;	String table - string pointers are 1 byte each
   327                           
   328     0003                     stringdir:
   329     0003  3000               	movlw	high stringdir
   330     0004  008A               	movwf	10
   331     0005  0804               	movf	4,w
   332     0006  0A84               	incf	4,f
   333     0007  0782               	addwf	2,f
   334     0008                     __stringbase:
   335     0008  3400               	retlw	0
   336     0009                     __end_of__stringtab:
   337     0009                     STR_3:
   338     0009  3420               	retlw	32	;' '
   339     000A  3445               	retlw	69	;'E'
   340     000B  346E               	retlw	110	;'n'
   341     000C  3474               	retlw	116	;'t'
   342     000D  3465               	retlw	101	;'e'
   343     000E  3472               	retlw	114	;'r'
   344     000F  3420               	retlw	32	;' '
   345     0010  3450               	retlw	80	;'P'
   346     0011  3461               	retlw	97	;'a'
   347     0012  3473               	retlw	115	;'s'
   348     0013  3473               	retlw	115	;'s'
   349     0014  3477               	retlw	119	;'w'
   350     0015  346F               	retlw	111	;'o'
   351     0016  3472               	retlw	114	;'r'
   352     0017  3464               	retlw	100	;'d'
   353     0018  3420               	retlw	32	;' '
   354     0019  3400               	retlw	0
   355     001A                     STR_2:
   356     001A  3423               	retlw	35	;'#'
   357     001B  3400               	retlw	0
   358     001C                     STR_1:
   359     001C  342A               	retlw	42	;'*'
   360     001D  3400               	retlw	0
   361                           
   362                           	psect	cinit
   363     07F0                     start_initialization:	
   364                           ; #config settings
   365                           
   366     07F0                     __initialization:
   367                           
   368                           ; Initialize objects allocated to COMMON
   369     07F0  120A  118A  25CB  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   370     07F5  00FA               	movwf	__pdataCOMMON& (0+127)
   371     07F6  120A  118A  25CC  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   372     07FB  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   373     07FC                     end_of_initialization:	
   374                           ;End of C runtime variable initialization code
   375                           
   376     07FC                     __end_of__initialization:
   377     07FC  0183               	clrf	3
   378     07FD  120A  118A  2E46   	ljmp	_main	;jump to C main() function
   379                           
   380                           	psect	dataCOMMON
   381     007A                     __pdataCOMMON:
   382     007A                     read_matrix_keypad@once:
   383     007A                     	ds	1
   384     007B                     display@pos:
   385     007B                     	ds	1
   386                           
   387                           	psect	cstackCOMMON
   388     0070                     __pcstackCOMMON:
   389     0070                     ?_init_matrix_keypad:
   390     0070                     ??_init_matrix_keypad:	
   391                           ; 1 bytes @ 0x0
   392                           
   393     0070                     ?_read_matrix_keypad:	
   394                           ; 1 bytes @ 0x0
   395                           
   396     0070                     ?_clcd_write:	
   397                           ; 1 bytes @ 0x0
   398                           
   399     0070                     ?_init_display_controller:	
   400                           ; 1 bytes @ 0x0
   401                           
   402     0070                     ?_init_clcd:	
   403                           ; 1 bytes @ 0x0
   404                           
   405     0070                     ?_display:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0070                     ?_init_config:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ?_main:	
   412                           ; 1 bytes @ 0x0
   413                           
   414     0070                     ?_scan_keypad:	
   415                           ; 1 bytes @ 0x0
   416                           
   417     0070                     ??_scan_keypad:	
   418                           ; 1 bytes @ 0x0
   419                           
   420     0070                     clcd_write@mode:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0070                     scan_keypad@i:	
   424                           ; 1 bytes @ 0x0
   425                           
   426                           
   427                           ; 2 bytes @ 0x0
   428     0070                     	ds	1
   429     0071                     ??_clcd_write:
   430                           
   431                           ; 1 bytes @ 0x1
   432     0071                     	ds	1
   433     0072                     ??_read_matrix_keypad:
   434     0072                     read_matrix_keypad@mode:	
   435                           ; 1 bytes @ 0x2
   436                           
   437                           
   438                           ; 1 bytes @ 0x2
   439     0072                     	ds	1
   440     0073                     clcd_write@byte:
   441     0073                     read_matrix_keypad@key:	
   442                           ; 1 bytes @ 0x3
   443                           
   444                           
   445                           ; 1 bytes @ 0x3
   446     0073                     	ds	1
   447     0074                     ??_init_display_controller:
   448     0074                     ?_clcd_print:	
   449                           ; 1 bytes @ 0x4
   450                           
   451     0074                     clcd_print@addr:	
   452                           ; 1 bytes @ 0x4
   453                           
   454                           
   455                           ; 1 bytes @ 0x4
   456     0074                     	ds	1
   457     0075                     ??_clcd_print:
   458     0075                     clcd_print@str:	
   459                           ; 1 bytes @ 0x5
   460                           
   461                           
   462                           ; 1 bytes @ 0x5
   463     0075                     	ds	1
   464     0076                     ??_init_clcd:
   465     0076                     ??_display:	
   466                           ; 1 bytes @ 0x6
   467                           
   468     0076                     ??_init_config:	
   469                           ; 1 bytes @ 0x6
   470                           
   471     0076                     display@key:	
   472                           ; 1 bytes @ 0x6
   473                           
   474                           
   475                           ; 1 bytes @ 0x6
   476     0076                     	ds	1
   477     0077                     ??_main:
   478     0077                     main@prekey:	
   479                           ; 1 bytes @ 0x7
   480                           
   481                           
   482                           ; 1 bytes @ 0x7
   483     0077                     	ds	1
   484     0078                     main@wait:
   485                           
   486                           ; 1 bytes @ 0x8
   487     0078                     	ds	1
   488     0079                     main@key:
   489                           
   490                           ; 1 bytes @ 0x9
   491     0079                     	ds	1
   492                           
   493                           	psect	maintext
   494     0646                     __pmaintext:	
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 47 in file "main.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  key             1    9[COMMON] unsigned char 
   505 ;;  wait            1    8[COMMON] unsigned char 
   506 ;;  prekey          1    7[COMMON] unsigned char 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : B00/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   516 ;;      Params:         0       0       0       0       0
   517 ;;      Locals:         3       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0
   519 ;;      Totals:         3       0       0       0       0
   520 ;;Total ram usage:        3 bytes
   521 ;; Hardware stack levels required when called: 4
   522 ;; This function calls:
   523 ;;		_display
   524 ;;		_init_config
   525 ;;		_read_matrix_keypad
   526 ;; This function is called by:
   527 ;;		Startup code after reset
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531     0646                     _main:	
   532                           ;psect for function _main
   533                           
   534     0646                     l987:	
   535                           ;incstack = 0
   536                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   537                           
   538                           
   539                           ;main.c: 48:             {
   540     0646  01F8               	clrf	main@wait
   541     0647                     l989:
   542                           
   543                           ;main.c: 50:                 display(prekey);
   544     0647  120A  118A  25E8  120A  118A  	fcall	_init_config
   545     064C                     l991:
   546                           
   547                           ;main.c: 53:         }
   548     064C  3001               	movlw	1
   549     064D  120A  118A  25FB  120A  118A  	fcall	_read_matrix_keypad
   550     0652  00F9               	movwf	main@key
   551     0653                     l993:
   552                           
   553                           ;main.c: 55:     }
   554     0653  3001               	movlw	1
   555     0654  00FF               	movwf	btemp+1
   556     0655  087F               	movf	btemp+1,w
   557     0656  07F8               	addwf	main@wait,f
   558     0657  0378               	decf	main@wait,w
   559     0658  1D03               	btfss	3,2
   560     0659  2E5B               	goto	u371
   561     065A  2E5C               	goto	u370
   562     065B                     u371:
   563     065B  2E4C               	goto	l991
   564     065C                     u370:
   565     065C                     l995:
   566                           
   567                           ;main.c: 56:     return;;main.c: 57: }
   568     065C  01F8               	clrf	main@wait
   569     065D                     l997:
   570     065D  0A79               	incf	main@key,w
   571     065E  1903               	btfsc	3,2
   572     065F  2E61               	goto	u381
   573     0660  2E62               	goto	u380
   574     0661                     u381:
   575     0661  2E6A               	goto	l1003
   576     0662                     u380:
   577     0662                     l999:
   578     0662  0879               	movf	main@key,w
   579     0663  00F7               	movwf	main@prekey
   580     0664                     l1001:
   581     0664  0877               	movf	main@prekey,w
   582     0665  120A  118A  26AA  120A  118A  	fcall	_display
   583     066A                     l1003:
   584     066A  0879               	movf	main@key,w
   585     066B  120A  118A  26AA  120A  118A  	fcall	_display
   586     0670  2E4C               	goto	l991
   587     0671  120A  118A  2800   	ljmp	start
   588     0674                     __end_of_main:
   589                           
   590                           	psect	text1
   591     05FB                     __ptext1:	
   592 ;; *************** function _read_matrix_keypad *****************
   593 ;; Defined at:
   594 ;;		line 111 in file "matrix_keypad.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  mode            1    wreg     unsigned char 
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  mode            1    2[COMMON] unsigned char 
   599 ;;  key             1    3[COMMON] unsigned char 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      unsigned char 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, pclath, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         0       0       0       0       0
   610 ;;      Locals:         2       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0
   612 ;;      Totals:         2       0       0       0       0
   613 ;;Total ram usage:        2 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 1
   616 ;; This function calls:
   617 ;;		_scan_keypad
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623     05FB                     _read_matrix_keypad:	
   624                           ;psect for function _read_matrix_keypad
   625                           
   626                           
   627                           ;incstack = 0
   628                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
   629                           ;read_matrix_keypad@mode stored from wreg
   630     05FB  00F2               	movwf	read_matrix_keypad@mode
   631     05FC                     l855:
   632                           
   633                           ;matrix_keypad.c: 111: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 112: {;matrix_keypad.c: 113:     static unsigned char once = 1;;matrix_keypad.c: 11
      +                          4:     unsigned char key;;matrix_keypad.c: 116:     key = scan_keypad();
   634     05FC  120A  118A  2744  120A  118A  	fcall	_scan_keypad
   635     0601  00F3               	movwf	read_matrix_keypad@key
   636     0602                     l857:
   637                           
   638                           ;matrix_keypad.c: 118:     if (mode == 0)
   639     0602  0872               	movf	read_matrix_keypad@mode,w
   640     0603  1D03               	btfss	3,2
   641     0604  2E06               	goto	u241
   642     0605  2E07               	goto	u240
   643     0606                     u241:
   644     0606  2E09               	goto	l865
   645     0607                     u240:
   646     0607                     l859:
   647                           
   648                           ;matrix_keypad.c: 119:     {;matrix_keypad.c: 120:         return key;
   649     0607  0873               	movf	read_matrix_keypad@key,w
   650     0608  2E1D               	goto	l129
   651     0609                     l865:
   652                           
   653                           ;matrix_keypad.c: 123:     {;matrix_keypad.c: 124:         if ((key != 0xFF) && once)
   654     0609  0A73               	incf	read_matrix_keypad@key,w
   655     060A  1903               	btfsc	3,2
   656     060B  2E0D               	goto	u251
   657     060C  2E0E               	goto	u250
   658     060D                     u251:
   659     060D  2E15               	goto	l877
   660     060E                     u250:
   661     060E                     l867:
   662     060E  087A               	movf	read_matrix_keypad@once,w
   663     060F  1903               	btfsc	3,2
   664     0610  2E12               	goto	u261
   665     0611  2E13               	goto	u260
   666     0612                     u261:
   667     0612  2E15               	goto	l877
   668     0613                     u260:
   669     0613                     l869:
   670                           
   671                           ;matrix_keypad.c: 125:         {;matrix_keypad.c: 126:             once = 0;
   672     0613  01FA               	clrf	read_matrix_keypad@once
   673     0614  2E07               	goto	l859
   674     0615                     l877:
   675     0615  0A73               	incf	read_matrix_keypad@key,w
   676     0616  1D03               	btfss	3,2
   677     0617  2E19               	goto	u271
   678     0618  2E1A               	goto	u270
   679     0619                     u271:
   680     0619  2E1C               	goto	l881
   681     061A                     u270:
   682     061A                     l879:
   683                           
   684                           ;matrix_keypad.c: 131:         {;matrix_keypad.c: 132:             once = 1;
   685     061A  01FA               	clrf	read_matrix_keypad@once
   686     061B  0AFA               	incf	read_matrix_keypad@once,f
   687     061C                     l881:
   688                           
   689                           ;matrix_keypad.c: 136:     return 0xFF;
   690     061C  30FF               	movlw	255
   691     061D                     l129:
   692     061D  0008               	return
   693     061E                     __end_of_read_matrix_keypad:
   694                           
   695                           	psect	text2
   696     0744                     __ptext2:	
   697 ;; *************** function _scan_keypad *****************
   698 ;; Defined at:
   699 ;;		line 24 in file "matrix_keypad.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  i               2    0[COMMON] int 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      unsigned char 
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         2       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0
   716 ;;      Totals:         2       0       0       0       0
   717 ;;Total ram usage:        2 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_read_matrix_keypad
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726     0744                     _scan_keypad:	
   727                           ;psect for function _scan_keypad
   728                           
   729     0744                     l749:	
   730                           ;incstack = 0
   731                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
   732                           
   733                           
   734                           ;matrix_keypad.c: 26:     int i;;matrix_keypad.c: 28:     RD3 = 0;
   735     0744  1283               	bcf	3,5	;RP0=0, select bank0
   736     0745  1303               	bcf	3,6	;RP1=0, select bank0
   737     0746  1188               	bcf	8,3	;volatile
   738                           
   739                           ;matrix_keypad.c: 29:     RD2 = 1;
   740     0747  1508               	bsf	8,2	;volatile
   741                           
   742                           ;matrix_keypad.c: 30:     RD1 = 1;
   743     0748  1488               	bsf	8,1	;volatile
   744                           
   745                           ;matrix_keypad.c: 31:     RD0 = 1;
   746     0749  1408               	bsf	8,0	;volatile
   747     074A                     l751:
   748                           
   749                           ;matrix_keypad.c: 33:     for (i = 100; i--; );
   750     074A  3064               	movlw	100
   751     074B  00F0               	movwf	scan_keypad@i
   752     074C  3000               	movlw	0
   753     074D  00F1               	movwf	scan_keypad@i+1
   754     074E                     l753:
   755     074E  30FF               	movlw	255
   756     074F  07F0               	addwf	scan_keypad@i,f
   757     0750  1803               	skipnc
   758     0751  0AF1               	incf	scan_keypad@i+1,f
   759     0752  30FF               	movlw	255
   760     0753  07F1               	addwf	scan_keypad@i+1,f
   761     0754  0A70               	incf	scan_keypad@i,w
   762     0755  1D03               	skipz
   763     0756  2F5B               	goto	u51
   764     0757  0A71               	incf	scan_keypad@i+1,w
   765     0758  1D03               	btfss	3,2
   766     0759  2F5B               	goto	u51
   767     075A  2F5C               	goto	u50
   768     075B                     u51:
   769     075B  2F4E               	goto	l753
   770     075C                     u50:
   771     075C                     l93:
   772                           
   773                           ;matrix_keypad.c: 35:     if (RB0 == 0)
   774     075C  1283               	bcf	3,5	;RP0=0, select bank0
   775     075D  1303               	bcf	3,6	;RP1=0, select bank0
   776     075E  1806               	btfsc	6,0	;volatile
   777     075F  2F61               	goto	u61
   778     0760  2F62               	goto	u60
   779     0761                     u61:
   780     0761  2F64               	goto	l94
   781     0762                     u60:
   782     0762                     l755:
   783                           
   784                           ;matrix_keypad.c: 36:     {;matrix_keypad.c: 37:         return 1;
   785     0762  3001               	movlw	1
   786     0763  2FEF               	goto	l95
   787     0764                     l94:	
   788                           ;matrix_keypad.c: 39:     else if (RB1 == 0)
   789                           
   790     0764  1886               	btfsc	6,1	;volatile
   791     0765  2F67               	goto	u71
   792     0766  2F68               	goto	u70
   793     0767                     u71:
   794     0767  2F6A               	goto	l97
   795     0768                     u70:
   796     0768                     l761:
   797                           
   798                           ;matrix_keypad.c: 40:     {;matrix_keypad.c: 41:         return 2;
   799     0768  3002               	movlw	2
   800     0769  2FEF               	goto	l95
   801     076A                     l97:	
   802                           ;matrix_keypad.c: 43:     else if (RB2 == 0)
   803                           
   804     076A  1906               	btfsc	6,2	;volatile
   805     076B  2F6D               	goto	u81
   806     076C  2F6E               	goto	u80
   807     076D                     u81:
   808     076D  2F70               	goto	l96
   809     076E                     u80:
   810     076E                     l767:
   811                           
   812                           ;matrix_keypad.c: 44:     {;matrix_keypad.c: 45:         return 3;
   813     076E  3003               	movlw	3
   814     076F  2FEF               	goto	l95
   815     0770                     l96:
   816                           
   817                           ;matrix_keypad.c: 48:     RD3 = 1;
   818     0770  1588               	bsf	8,3	;volatile
   819                           
   820                           ;matrix_keypad.c: 49:     RD2 = 0;
   821     0771  1108               	bcf	8,2	;volatile
   822                           
   823                           ;matrix_keypad.c: 50:     RD1 = 1;
   824     0772  1488               	bsf	8,1	;volatile
   825                           
   826                           ;matrix_keypad.c: 51:     RD0 = 1;
   827     0773  1408               	bsf	8,0	;volatile
   828     0774                     l771:
   829                           
   830                           ;matrix_keypad.c: 53:     for (i = 100; i--; );
   831     0774  3064               	movlw	100
   832     0775  00F0               	movwf	scan_keypad@i
   833     0776  3000               	movlw	0
   834     0777  00F1               	movwf	scan_keypad@i+1
   835     0778                     l773:
   836     0778  30FF               	movlw	255
   837     0779  07F0               	addwf	scan_keypad@i,f
   838     077A  1803               	skipnc
   839     077B  0AF1               	incf	scan_keypad@i+1,f
   840     077C  30FF               	movlw	255
   841     077D  07F1               	addwf	scan_keypad@i+1,f
   842     077E  0A70               	incf	scan_keypad@i,w
   843     077F  1D03               	skipz
   844     0780  2F85               	goto	u91
   845     0781  0A71               	incf	scan_keypad@i+1,w
   846     0782  1D03               	btfss	3,2
   847     0783  2F85               	goto	u91
   848     0784  2F86               	goto	u90
   849     0785                     u91:
   850     0785  2F78               	goto	l773
   851     0786                     u90:
   852     0786                     l102:
   853                           
   854                           ;matrix_keypad.c: 55:     if (RB0 == 0)
   855     0786  1283               	bcf	3,5	;RP0=0, select bank0
   856     0787  1303               	bcf	3,6	;RP1=0, select bank0
   857     0788  1806               	btfsc	6,0	;volatile
   858     0789  2F8B               	goto	u101
   859     078A  2F8C               	goto	u100
   860     078B                     u101:
   861     078B  2F8E               	goto	l103
   862     078C                     u100:
   863     078C                     l775:
   864                           
   865                           ;matrix_keypad.c: 56:     {;matrix_keypad.c: 57:         return 4;
   866     078C  3004               	movlw	4
   867     078D  2FEF               	goto	l95
   868     078E                     l103:	
   869                           ;matrix_keypad.c: 59:     else if (RB1 == 0)
   870                           
   871     078E  1886               	btfsc	6,1	;volatile
   872     078F  2F91               	goto	u111
   873     0790  2F92               	goto	u110
   874     0791                     u111:
   875     0791  2F94               	goto	l105
   876     0792                     u110:
   877     0792                     l781:
   878                           
   879                           ;matrix_keypad.c: 60:     {;matrix_keypad.c: 61:         return 5;
   880     0792  3005               	movlw	5
   881     0793  2FEF               	goto	l95
   882     0794                     l105:	
   883                           ;matrix_keypad.c: 63:     else if (RB2 == 0)
   884                           
   885     0794  1906               	btfsc	6,2	;volatile
   886     0795  2F97               	goto	u121
   887     0796  2F98               	goto	u120
   888     0797                     u121:
   889     0797  2F9A               	goto	l104
   890     0798                     u120:
   891     0798                     l787:
   892                           
   893                           ;matrix_keypad.c: 64:     {;matrix_keypad.c: 65:         return 6;
   894     0798  3006               	movlw	6
   895     0799  2FEF               	goto	l95
   896     079A                     l104:
   897                           
   898                           ;matrix_keypad.c: 68:     RD3 = 1;
   899     079A  1588               	bsf	8,3	;volatile
   900                           
   901                           ;matrix_keypad.c: 69:     RD2 = 1;
   902     079B  1508               	bsf	8,2	;volatile
   903                           
   904                           ;matrix_keypad.c: 70:     RD1 = 0;
   905     079C  1088               	bcf	8,1	;volatile
   906                           
   907                           ;matrix_keypad.c: 71:     RD0 = 1;
   908     079D  1408               	bsf	8,0	;volatile
   909     079E                     l791:
   910                           
   911                           ;matrix_keypad.c: 73:     for (i = 100; i--; );
   912     079E  3064               	movlw	100
   913     079F  00F0               	movwf	scan_keypad@i
   914     07A0  3000               	movlw	0
   915     07A1  00F1               	movwf	scan_keypad@i+1
   916     07A2                     l793:
   917     07A2  30FF               	movlw	255
   918     07A3  07F0               	addwf	scan_keypad@i,f
   919     07A4  1803               	skipnc
   920     07A5  0AF1               	incf	scan_keypad@i+1,f
   921     07A6  30FF               	movlw	255
   922     07A7  07F1               	addwf	scan_keypad@i+1,f
   923     07A8  0A70               	incf	scan_keypad@i,w
   924     07A9  1D03               	skipz
   925     07AA  2FAF               	goto	u131
   926     07AB  0A71               	incf	scan_keypad@i+1,w
   927     07AC  1D03               	btfss	3,2
   928     07AD  2FAF               	goto	u131
   929     07AE  2FB0               	goto	u130
   930     07AF                     u131:
   931     07AF  2FA2               	goto	l793
   932     07B0                     u130:
   933     07B0                     l110:
   934                           
   935                           ;matrix_keypad.c: 75:     if (RB0 == 0)
   936     07B0  1283               	bcf	3,5	;RP0=0, select bank0
   937     07B1  1303               	bcf	3,6	;RP1=0, select bank0
   938     07B2  1806               	btfsc	6,0	;volatile
   939     07B3  2FB5               	goto	u141
   940     07B4  2FB6               	goto	u140
   941     07B5                     u141:
   942     07B5  2FB8               	goto	l111
   943     07B6                     u140:
   944     07B6                     l795:
   945                           
   946                           ;matrix_keypad.c: 76:     {;matrix_keypad.c: 77:         return 7;
   947     07B6  3007               	movlw	7
   948     07B7  2FEF               	goto	l95
   949     07B8                     l111:	
   950                           ;matrix_keypad.c: 79:     else if (RB1 == 0)
   951                           
   952     07B8  1886               	btfsc	6,1	;volatile
   953     07B9  2FBB               	goto	u151
   954     07BA  2FBC               	goto	u150
   955     07BB                     u151:
   956     07BB  2FBE               	goto	l113
   957     07BC                     u150:
   958     07BC                     l801:
   959                           
   960                           ;matrix_keypad.c: 80:     {;matrix_keypad.c: 81:         return 8;
   961     07BC  3008               	movlw	8
   962     07BD  2FEF               	goto	l95
   963     07BE                     l113:	
   964                           ;matrix_keypad.c: 83:     else if (RB2 == 0)
   965                           
   966     07BE  1906               	btfsc	6,2	;volatile
   967     07BF  2FC1               	goto	u161
   968     07C0  2FC2               	goto	u160
   969     07C1                     u161:
   970     07C1  2FC4               	goto	l112
   971     07C2                     u160:
   972     07C2                     l807:
   973                           
   974                           ;matrix_keypad.c: 84:     {;matrix_keypad.c: 85:         return 9;
   975     07C2  3009               	movlw	9
   976     07C3  2FEF               	goto	l95
   977     07C4                     l112:
   978                           
   979                           ;matrix_keypad.c: 88:     RD3 = 1;
   980     07C4  1588               	bsf	8,3	;volatile
   981                           
   982                           ;matrix_keypad.c: 89:     RD2 = 1;
   983     07C5  1508               	bsf	8,2	;volatile
   984                           
   985                           ;matrix_keypad.c: 90:     RD1 = 1;
   986     07C6  1488               	bsf	8,1	;volatile
   987                           
   988                           ;matrix_keypad.c: 91:     RD0 = 0;
   989     07C7  1008               	bcf	8,0	;volatile
   990     07C8                     l811:
   991                           
   992                           ;matrix_keypad.c: 93:     for (i = 100; i--; );
   993     07C8  3064               	movlw	100
   994     07C9  00F0               	movwf	scan_keypad@i
   995     07CA  3000               	movlw	0
   996     07CB  00F1               	movwf	scan_keypad@i+1
   997     07CC                     l813:
   998     07CC  30FF               	movlw	255
   999     07CD  07F0               	addwf	scan_keypad@i,f
  1000     07CE  1803               	skipnc
  1001     07CF  0AF1               	incf	scan_keypad@i+1,f
  1002     07D0  30FF               	movlw	255
  1003     07D1  07F1               	addwf	scan_keypad@i+1,f
  1004     07D2  0A70               	incf	scan_keypad@i,w
  1005     07D3  1D03               	skipz
  1006     07D4  2FD9               	goto	u171
  1007     07D5  0A71               	incf	scan_keypad@i+1,w
  1008     07D6  1D03               	btfss	3,2
  1009     07D7  2FD9               	goto	u171
  1010     07D8  2FDA               	goto	u170
  1011     07D9                     u171:
  1012     07D9  2FCC               	goto	l813
  1013     07DA                     u170:
  1014     07DA                     l118:
  1015                           
  1016                           ;matrix_keypad.c: 95:     if (RB0 == 0)
  1017     07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1018     07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1019     07DC  1806               	btfsc	6,0	;volatile
  1020     07DD  2FDF               	goto	u181
  1021     07DE  2FE0               	goto	u180
  1022     07DF                     u181:
  1023     07DF  2FE2               	goto	l119
  1024     07E0                     u180:
  1025     07E0                     l815:
  1026                           
  1027                           ;matrix_keypad.c: 96:     {;matrix_keypad.c: 97:         return '*';
  1028     07E0  302A               	movlw	42
  1029     07E1  2FEF               	goto	l95
  1030     07E2                     l119:	
  1031                           ;matrix_keypad.c: 99:     else if (RB1 == 0)
  1032                           
  1033     07E2  1886               	btfsc	6,1	;volatile
  1034     07E3  2FE5               	goto	u191
  1035     07E4  2FE6               	goto	u190
  1036     07E5                     u191:
  1037     07E5  2FE8               	goto	l121
  1038     07E6                     u190:
  1039     07E6                     l821:
  1040                           
  1041                           ;matrix_keypad.c: 100:     {;matrix_keypad.c: 101:         return 0;
  1042     07E6  3000               	movlw	0
  1043     07E7  2FEF               	goto	l95
  1044     07E8                     l121:	
  1045                           ;matrix_keypad.c: 103:     else if (RB2 == 0)
  1046                           
  1047     07E8  1906               	btfsc	6,2	;volatile
  1048     07E9  2FEB               	goto	u201
  1049     07EA  2FEC               	goto	u200
  1050     07EB                     u201:
  1051     07EB  2FEE               	goto	l831
  1052     07EC                     u200:
  1053     07EC                     l827:
  1054                           
  1055                           ;matrix_keypad.c: 104:     {;matrix_keypad.c: 105:         return '#';
  1056     07EC  3023               	movlw	35
  1057     07ED  2FEF               	goto	l95
  1058     07EE                     l831:
  1059                           
  1060                           ;matrix_keypad.c: 108:     return 0xFF;
  1061     07EE  30FF               	movlw	255
  1062     07EF                     l95:
  1063     07EF  0008               	return
  1064     07F0                     __end_of_scan_keypad:
  1065                           
  1066                           	psect	text3
  1067     05E8                     __ptext3:	
  1068 ;; *************** function _init_config *****************
  1069 ;; Defined at:
  1070 ;;		line 40 in file "main.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0
  1087 ;;      Totals:         0       0       0       0       0
  1088 ;;Total ram usage:        0 bytes
  1089 ;; Hardware stack levels used: 1
  1090 ;; Hardware stack levels required when called: 3
  1091 ;; This function calls:
  1092 ;;		_clcd_print
  1093 ;;		_init_clcd
  1094 ;;		_init_matrix_keypad
  1095 ;; This function is called by:
  1096 ;;		_main
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100     05E8                     _init_config:	
  1101                           ;psect for function _init_config
  1102                           
  1103     05E8                     l981:	
  1104                           ;incstack = 0
  1105                           ; Regs used in _init_config: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1106                           
  1107                           
  1108                           ;main.c: 41:     while (1) {
  1109     05E8  120A  118A  25CD  120A  118A  	fcall	_init_clcd
  1110                           
  1111                           ;main.c: 42:         key = read_matrix_keypad(1);
  1112     05ED  120A  118A  25D8  120A  118A  	fcall	_init_matrix_keypad
  1113     05F2                     l983:
  1114                           
  1115                           ;main.c: 44:         if(wait++ == 0)
  1116     05F2  3080               	movlw	128
  1117     05F3  00F4               	movwf	clcd_print@addr
  1118     05F4  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1119     05F5  120A  118A  261E  120A  118A  	fcall	_clcd_print
  1120     05FA                     l55:
  1121     05FA  0008               	return
  1122     05FB                     __end_of_init_config:
  1123                           
  1124                           	psect	text4
  1125     05D8                     __ptext4:	
  1126 ;; *************** function _init_matrix_keypad *****************
  1127 ;; Defined at:
  1128 ;;		line 4 in file "matrix_keypad.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0
  1145 ;;      Totals:         0       0       0       0       0
  1146 ;;Total ram usage:        0 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_init_config
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155     05D8                     _init_matrix_keypad:	
  1156                           ;psect for function _init_matrix_keypad
  1157                           
  1158     05D8                     l737:	
  1159                           ;incstack = 0
  1160                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  1161                           
  1162                           
  1163                           ;matrix_keypad.c: 8:     TRISB = TRISB | 0x07;
  1164     05D8  1683               	bsf	3,5	;RP0=1, select bank1
  1165     05D9  1303               	bcf	3,6	;RP1=0, select bank1
  1166     05DA  0806               	movf	6,w	;volatile
  1167     05DB  3807               	iorlw	7
  1168     05DC  0086               	movwf	6	;volatile
  1169                           
  1170                           ;matrix_keypad.c: 12:     TRISD = TRISD & 0xF0;
  1171     05DD  0808               	movf	8,w	;volatile
  1172     05DE  39F0               	andlw	240
  1173     05DF  0088               	movwf	8	;volatile
  1174     05E0                     l739:
  1175                           
  1176                           ;matrix_keypad.c: 15:     nRBPU = 0;
  1177     05E0  1381               	bcf	1,7	;volatile
  1178     05E1                     l741:
  1179                           
  1180                           ;matrix_keypad.c: 18:     RD3 = 1;
  1181     05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1182     05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1183     05E3  1588               	bsf	8,3	;volatile
  1184     05E4                     l743:
  1185                           
  1186                           ;matrix_keypad.c: 19:     RD2 = 1;
  1187     05E4  1508               	bsf	8,2	;volatile
  1188     05E5                     l745:
  1189                           
  1190                           ;matrix_keypad.c: 20:     RD1 = 1;
  1191     05E5  1488               	bsf	8,1	;volatile
  1192     05E6                     l747:
  1193                           
  1194                           ;matrix_keypad.c: 21:     RD0 = 1;
  1195     05E6  1408               	bsf	8,0	;volatile
  1196     05E7                     l88:
  1197     05E7  0008               	return
  1198     05E8                     __end_of_init_matrix_keypad:
  1199                           
  1200                           	psect	text5
  1201     05CD                     __ptext5:	
  1202 ;; *************** function _init_clcd *****************
  1203 ;; Defined at:
  1204 ;;		line 44 in file "clcd.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2, status,0, pclath, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; Hardware stack levels required when called: 2
  1225 ;; This function calls:
  1226 ;;		_init_display_controller
  1227 ;; This function is called by:
  1228 ;;		_init_config
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232     05CD                     _init_clcd:	
  1233                           ;psect for function _init_clcd
  1234                           
  1235     05CD                     l949:	
  1236                           ;incstack = 0
  1237                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1238                           
  1239                           
  1240                           ;clcd.c: 47:     TRISD = 0x00;
  1241     05CD  1683               	bsf	3,5	;RP0=1, select bank1
  1242     05CE  1303               	bcf	3,6	;RP1=0, select bank1
  1243     05CF  0188               	clrf	8	;volatile
  1244     05D0                     l951:
  1245                           
  1246                           ;clcd.c: 50:     TRISE2 = 0;
  1247     05D0  1109               	bcf	9,2	;volatile
  1248     05D1                     l953:
  1249                           
  1250                           ;clcd.c: 51:     TRISE1 = 0;
  1251     05D1  1089               	bcf	9,1	;volatile
  1252     05D2                     l955:
  1253                           
  1254                           ;clcd.c: 53:     init_display_controller();
  1255     05D2  120A  118A  26E1  120A  118A  	fcall	_init_display_controller
  1256     05D7                     l23:
  1257     05D7  0008               	return
  1258     05D8                     __end_of_init_clcd:
  1259                           
  1260                           	psect	text6
  1261     06E1                     __ptext6:	
  1262 ;; *************** function _init_display_controller *****************
  1263 ;; Defined at:
  1264 ;;		line 21 in file "clcd.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0, pclath, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1278 ;;      Params:         0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0
  1280 ;;      Temps:          2       0       0       0       0
  1281 ;;      Totals:         2       0       0       0       0
  1282 ;;Total ram usage:        2 bytes
  1283 ;; Hardware stack levels used: 1
  1284 ;; Hardware stack levels required when called: 1
  1285 ;; This function calls:
  1286 ;;		_clcd_write
  1287 ;; This function is called by:
  1288 ;;		_init_clcd
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292     06E1                     _init_display_controller:	
  1293                           ;psect for function _init_display_controller
  1294                           
  1295     06E1                     l925:	
  1296                           ;incstack = 0
  1297                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1298                           
  1299                           
  1300                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1301     06E1  30C3               	movlw	195
  1302     06E2  00F5               	movwf	??_init_display_controller+1
  1303     06E3  30CD               	movlw	205
  1304     06E4  00F4               	movwf	??_init_display_controller
  1305     06E5                     u397:
  1306     06E5  0BF4               	decfsz	??_init_display_controller,f
  1307     06E6  2EE5               	goto	u397
  1308     06E7  0BF5               	decfsz	??_init_display_controller+1,f
  1309     06E8  2EE5               	goto	u397
  1310     06E9                     l927:
  1311                           
  1312                           ;clcd.c: 27:     clcd_write(0x33, 0);
  1313     06E9  01F0               	clrf	clcd_write@mode
  1314     06EA  3033               	movlw	51
  1315     06EB  120A  118A  2674  120A  118A  	fcall	_clcd_write
  1316     06F0                     l929:
  1317                           
  1318                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1319     06F0  301B               	movlw	27
  1320     06F1  00F5               	movwf	??_init_display_controller+1
  1321     06F2  309E               	movlw	158
  1322     06F3  00F4               	movwf	??_init_display_controller
  1323     06F4                     u407:
  1324     06F4  0BF4               	decfsz	??_init_display_controller,f
  1325     06F5  2EF4               	goto	u407
  1326     06F6  0BF5               	decfsz	??_init_display_controller+1,f
  1327     06F7  2EF4               	goto	u407
  1328     06F8  0000               	nop
  1329                           
  1330                           ;clcd.c: 29:     clcd_write(0x33, 0);
  1331     06F9  01F0               	clrf	clcd_write@mode
  1332     06FA  3033               	movlw	51
  1333     06FB  120A  118A  2674  120A  118A  	fcall	_clcd_write
  1334     0700                     l931:
  1335                           
  1336                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1337     0700  30A6               	movlw	166
  1338     0701  00F4               	movwf	??_init_display_controller
  1339     0702                     u417:
  1340     0702  0BF4               	decfsz	??_init_display_controller,f
  1341     0703  2F02               	goto	u417
  1342     0704  0000               	nop
  1343     0705                     l933:
  1344                           
  1345                           ;clcd.c: 31:     clcd_write(0x33, 0);
  1346     0705  01F0               	clrf	clcd_write@mode
  1347     0706  3033               	movlw	51
  1348     0707  120A  118A  2674  120A  118A  	fcall	_clcd_write
  1349     070C                     l935:
  1350                           
  1351                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1352     070C  2F0D               	nop2	;2 cycle nop
  1353     070D  2F0E               	nop2	;2 cycle nop
  1354     070E  0000               	nop
  1355     070F                     l937:
  1356                           
  1357                           ;clcd.c: 34:     clcd_write(0x02, 0);
  1358     070F  01F0               	clrf	clcd_write@mode
  1359     0710  3002               	movlw	2
  1360     0711  120A  118A  2674  120A  118A  	fcall	_clcd_write
  1361     0716                     l939:
  1362                           
  1363                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1364     0716  30A6               	movlw	166
  1365     0717  00F4               	movwf	??_init_display_controller
  1366     0718                     u427:
  1367     0718  0BF4               	decfsz	??_init_display_controller,f
  1368     0719  2F18               	goto	u427
  1369     071A  0000               	nop
  1370                           
  1371                           ;clcd.c: 36:     clcd_write(0x28, 0);
  1372     071B  01F0               	clrf	clcd_write@mode
  1373     071C  3028               	movlw	40
  1374     071D  120A  118A  2674  120A  118A  	fcall	_clcd_write
  1375     0722                     l941:
  1376                           
  1377                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1378     0722  30A6               	movlw	166
  1379     0723  00F4               	movwf	??_init_display_controller
  1380     0724                     u437:
  1381     0724  0BF4               	decfsz	??_init_display_controller,f
  1382     0725  2F24               	goto	u437
  1383     0726  0000               	nop
  1384     0727                     l943:
  1385                           
  1386                           ;clcd.c: 38:     clcd_write(0x01, 0);
  1387     0727  01F0               	clrf	clcd_write@mode
  1388     0728  3001               	movlw	1
  1389     0729  120A  118A  2674  120A  118A  	fcall	_clcd_write
  1390                           
  1391                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1392     072E  3004               	movlw	4
  1393     072F  00F5               	movwf	??_init_display_controller+1
  1394     0730  303D               	movlw	61
  1395     0731  00F4               	movwf	??_init_display_controller
  1396     0732                     u447:
  1397     0732  0BF4               	decfsz	??_init_display_controller,f
  1398     0733  2F32               	goto	u447
  1399     0734  0BF5               	decfsz	??_init_display_controller+1,f
  1400     0735  2F32               	goto	u447
  1401     0736  2F37               	nop2
  1402     0737                     l945:
  1403                           
  1404                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  1405     0737  01F0               	clrf	clcd_write@mode
  1406     0738  300C               	movlw	12
  1407     0739  120A  118A  2674  120A  118A  	fcall	_clcd_write
  1408     073E                     l947:
  1409                           
  1410                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1411     073E  30A6               	movlw	166
  1412     073F  00F4               	movwf	??_init_display_controller
  1413     0740                     u457:
  1414     0740  0BF4               	decfsz	??_init_display_controller,f
  1415     0741  2F40               	goto	u457
  1416     0742  0000               	nop
  1417     0743                     l20:
  1418     0743  0008               	return
  1419     0744                     __end_of_init_display_controller:
  1420                           
  1421                           	psect	text7
  1422     06AA                     __ptext7:	
  1423 ;; *************** function _display *****************
  1424 ;; Defined at:
  1425 ;;		line 15 in file "main.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  key             1    wreg     unsigned char 
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  key             1    6[COMMON] unsigned char 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1439 ;;      Params:         0       0       0       0       0
  1440 ;;      Locals:         1       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0
  1442 ;;      Totals:         1       0       0       0       0
  1443 ;;Total ram usage:        1 bytes
  1444 ;; Hardware stack levels used: 1
  1445 ;; Hardware stack levels required when called: 2
  1446 ;; This function calls:
  1447 ;;		_clcd_print
  1448 ;;		_clcd_write
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454     06AA                     _display:	
  1455                           ;psect for function _display
  1456                           
  1457                           
  1458                           ;incstack = 0
  1459                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1460                           ;display@key stored from wreg
  1461     06AA  00F6               	movwf	display@key
  1462     06AB                     l965:
  1463                           
  1464                           ;main.c: 15:         else if(key == 0);main.c: 16:         {;main.c: 17:             clc
      +                          d_print("#", (0xC0 + pos));;main.c: 19:         }
  1465     06AB  0A76               	incf	display@key,w
  1466     06AC  1903               	btfsc	3,2
  1467     06AD  2EAF               	goto	u341
  1468     06AE  2EB0               	goto	u340
  1469     06AF                     u341:
  1470     06AF  2ED2               	goto	l979
  1471     06B0                     u340:
  1472     06B0                     l967:
  1473                           
  1474                           ;main.c: 20:     };main.c: 21:     else
  1475     06B0  0376               	decf	display@key,w
  1476     06B1  1D03               	btfss	3,2
  1477     06B2  2EB4               	goto	u351
  1478     06B3  2EB5               	goto	u350
  1479     06B4                     u351:
  1480     06B4  2EC3               	goto	l973
  1481     06B5                     u350:
  1482     06B5                     l969:
  1483                           
  1484                           ;main.c: 22:     {;main.c: 23:         clcd_write(0xC0, 0);
  1485     06B5  087B               	movf	display@pos,w
  1486     06B6  3EC0               	addlw	192
  1487     06B7  00F4               	movwf	clcd_print@addr
  1488     06B8  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1489     06B9  120A  118A  261E  120A  118A  	fcall	_clcd_print
  1490     06BE                     l971:
  1491                           
  1492                           ;main.c: 24:         clcd_write(0xF0, 0);
  1493     06BE  3001               	movlw	1
  1494     06BF  00FF               	movwf	btemp+1
  1495     06C0  087F               	movf	btemp+1,w
  1496     06C1  07FB               	addwf	display@pos,f
  1497                           
  1498                           ;main.c: 25:     }
  1499     06C2  2EE0               	goto	l52
  1500     06C3                     l973:
  1501     06C3  0876               	movf	display@key,w
  1502     06C4  1D03               	btfss	3,2
  1503     06C5  2EC7               	goto	u361
  1504     06C6  2EC8               	goto	u360
  1505     06C7                     u361:
  1506     06C7  2EE0               	goto	l52
  1507     06C8                     u360:
  1508     06C8                     l975:
  1509                           
  1510                           ;main.c: 27: };main.c: 28: 
  1511     06C8  087B               	movf	display@pos,w
  1512     06C9  3EC0               	addlw	192
  1513     06CA  00F4               	movwf	clcd_print@addr
  1514     06CB  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1515     06CC  120A  118A  261E  120A  118A  	fcall	_clcd_print
  1516     06D1  2EBE               	goto	l971
  1517     06D2                     l979:
  1518                           
  1519                           ;main.c: 33:     clcd_print(" Enter Password ", (0x80 + 0));;main.c: 34: }
  1520     06D2  01F0               	clrf	clcd_write@mode
  1521     06D3  30C0               	movlw	192
  1522     06D4  120A  118A  2674  120A  118A  	fcall	_clcd_write
  1523                           
  1524                           ;main.c: 35: 
  1525     06D9  01F0               	clrf	clcd_write@mode
  1526     06DA  30F0               	movlw	240
  1527     06DB  120A  118A  2674  120A  118A  	fcall	_clcd_write
  1528     06E0                     l52:
  1529     06E0  0008               	return
  1530     06E1                     __end_of_display:
  1531                           
  1532                           	psect	text8
  1533     061E                     __ptext8:	
  1534 ;; *************** function _clcd_print *****************
  1535 ;; Defined at:
  1536 ;;		line 62 in file "clcd.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  str             1    wreg     PTR const unsigned char 
  1539 ;;		 -> STR_3(17), STR_2(2), STR_1(2), 
  1540 ;;  addr            1    4[COMMON] unsigned char 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  str             1    5[COMMON] PTR const unsigned char 
  1543 ;;		 -> STR_3(17), STR_2(2), STR_1(2), 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         1       0       0       0       0
  1554 ;;      Locals:         1       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0
  1556 ;;      Totals:         2       0       0       0       0
  1557 ;;Total ram usage:        2 bytes
  1558 ;; Hardware stack levels used: 1
  1559 ;; Hardware stack levels required when called: 1
  1560 ;; This function calls:
  1561 ;;		_clcd_write
  1562 ;; This function is called by:
  1563 ;;		_display
  1564 ;;		_init_config
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568     061E                     _clcd_print:	
  1569                           ;psect for function _clcd_print
  1570                           
  1571                           
  1572                           ;incstack = 0
  1573                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1574                           ;clcd_print@str stored from wreg
  1575     061E  00F5               	movwf	clcd_print@str
  1576     061F                     l957:
  1577                           
  1578                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  1579     061F  01F0               	clrf	clcd_write@mode
  1580     0620  0874               	movf	clcd_print@addr,w
  1581     0621  120A  118A  2674  120A  118A  	fcall	_clcd_write
  1582                           
  1583                           ;clcd.c: 66:     while (*str != '\0')
  1584     0626  2E39               	goto	l963
  1585     0627                     l959:
  1586                           
  1587                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  1588     0627  01F0               	clrf	clcd_write@mode
  1589     0628  0AF0               	incf	clcd_write@mode,f
  1590     0629  0875               	movf	clcd_print@str,w
  1591     062A  0084               	movwf	4
  1592     062B  120A  118A  2003  120A  118A  	fcall	stringdir
  1593     0630  120A  118A  2674  120A  118A  	fcall	_clcd_write
  1594     0635                     l961:
  1595                           
  1596                           ;clcd.c: 69:         str++;
  1597     0635  3001               	movlw	1
  1598     0636  00FF               	movwf	btemp+1
  1599     0637  087F               	movf	btemp+1,w
  1600     0638  07F5               	addwf	clcd_print@str,f
  1601     0639                     l963:
  1602                           
  1603                           ;clcd.c: 66:     while (*str != '\0')
  1604     0639  0875               	movf	clcd_print@str,w
  1605     063A  0084               	movwf	4
  1606     063B  120A  118A  2003  120A  118A  	fcall	stringdir
  1607     0640  3A00               	xorlw	0
  1608     0641  1D03               	skipz
  1609     0642  2E44               	goto	u331
  1610     0643  2E45               	goto	u330
  1611     0644                     u331:
  1612     0644  2E27               	goto	l959
  1613     0645                     u330:
  1614     0645                     l32:
  1615     0645  0008               	return
  1616     0646                     __end_of_clcd_print:
  1617                           
  1618                           	psect	text9
  1619     0674                     __ptext9:	
  1620 ;; *************** function _clcd_write *****************
  1621 ;; Defined at:
  1622 ;;		line 4 in file "clcd.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  byte            1    wreg     unsigned char 
  1625 ;;  mode            1    0[COMMON] unsigned char 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  byte            1    3[COMMON] unsigned char 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         1       0       0       0       0
  1638 ;;      Locals:         1       0       0       0       0
  1639 ;;      Temps:          2       0       0       0       0
  1640 ;;      Totals:         4       0       0       0       0
  1641 ;;Total ram usage:        4 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_init_display_controller
  1647 ;;		_clcd_print
  1648 ;;		_display
  1649 ;;		_clcd_putch
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653     0674                     _clcd_write:	
  1654                           ;psect for function _clcd_write
  1655                           
  1656                           
  1657                           ;incstack = 0
  1658                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  1659                           ;clcd_write@byte stored from wreg
  1660     0674  00F3               	movwf	clcd_write@byte
  1661     0675                     l905:
  1662                           
  1663                           ;clcd.c: 4: void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;clcd.c:
      +                           6:     RE2 = mode;
  1664     0675  1870               	btfsc	clcd_write@mode,0
  1665     0676  2E78               	goto	u301
  1666     0677  2E7C               	goto	u300
  1667     0678                     u301:
  1668     0678  1283               	bcf	3,5	;RP0=0, select bank0
  1669     0679  1303               	bcf	3,6	;RP1=0, select bank0
  1670     067A  1509               	bsf	9,2	;volatile
  1671     067B  2E7F               	goto	u314
  1672     067C                     u300:
  1673     067C  1283               	bcf	3,5	;RP0=0, select bank0
  1674     067D  1303               	bcf	3,6	;RP1=0, select bank0
  1675     067E  1109               	bcf	9,2	;volatile
  1676     067F                     u314:
  1677     067F                     l907:
  1678                           
  1679                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  1680     067F  0873               	movf	clcd_write@byte,w
  1681     0680  39F0               	andlw	240
  1682     0681  0088               	movwf	8	;volatile
  1683     0682                     l909:
  1684                           
  1685                           ;clcd.c: 9:     RE1 = 1;
  1686     0682  1489               	bsf	9,1	;volatile
  1687     0683                     l911:
  1688                           
  1689                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1690     0683  30A6               	movlw	166
  1691     0684  00F1               	movwf	??_clcd_write
  1692     0685                     u467:
  1693     0685  0BF1               	decfsz	??_clcd_write,f
  1694     0686  2E85               	goto	u467
  1695     0687  0000               	nop
  1696     0688                     l913:
  1697                           
  1698                           ;clcd.c: 11:     RE1 = 0;
  1699     0688  1283               	bcf	3,5	;RP0=0, select bank0
  1700     0689  1303               	bcf	3,6	;RP1=0, select bank0
  1701     068A  1089               	bcf	9,1	;volatile
  1702     068B                     l915:
  1703                           
  1704                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  1705     068B  0873               	movf	clcd_write@byte,w
  1706     068C  390F               	andlw	15
  1707     068D  00F1               	movwf	??_clcd_write
  1708     068E  3003               	movlw	3
  1709     068F                     u325:
  1710     068F  1003               	clrc
  1711     0690  0DF1               	rlf	??_clcd_write,f
  1712     0691  3EFF               	addlw	-1
  1713     0692  1D03               	skipz
  1714     0693  2E8F               	goto	u325
  1715     0694  1003               	clrc
  1716     0695  0D71               	rlf	??_clcd_write,w
  1717     0696  0088               	movwf	8	;volatile
  1718     0697                     l917:
  1719                           
  1720                           ;clcd.c: 14:     RE1 = 1;
  1721     0697  1489               	bsf	9,1	;volatile
  1722     0698                     l919:
  1723                           
  1724                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1725     0698  30A6               	movlw	166
  1726     0699  00F1               	movwf	??_clcd_write
  1727     069A                     u477:
  1728     069A  0BF1               	decfsz	??_clcd_write,f
  1729     069B  2E9A               	goto	u477
  1730     069C  0000               	nop
  1731     069D                     l921:
  1732                           
  1733                           ;clcd.c: 16:     RE1 = 0;
  1734     069D  1283               	bcf	3,5	;RP0=0, select bank0
  1735     069E  1303               	bcf	3,6	;RP1=0, select bank0
  1736     069F  1089               	bcf	9,1	;volatile
  1737     06A0                     l923:
  1738                           
  1739                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1740     06A0  301B               	movlw	27
  1741     06A1  00F2               	movwf	??_clcd_write+1
  1742     06A2  309E               	movlw	158
  1743     06A3  00F1               	movwf	??_clcd_write
  1744     06A4                     u487:
  1745     06A4  0BF1               	decfsz	??_clcd_write,f
  1746     06A5  2EA4               	goto	u487
  1747     06A6  0BF2               	decfsz	??_clcd_write+1,f
  1748     06A7  2EA4               	goto	u487
  1749     06A8  0000               	nop
  1750     06A9                     l17:
  1751     06A9  0008               	return
  1752     06AA                     __end_of_clcd_write:
  1753     007E                     btemp	set	126	;btemp
  1754     007E                     wtemp0	set	126
  1755                           
  1756                           	psect	config
  1757                           
  1758                           ;Config register CONFIG @ 0x2007
  1759                           ;	Oscillator Selection bits
  1760                           ;	FOSC = 0x3, unprogrammed default
  1761                           ;	Watchdog Timer Enable bit
  1762                           ;	WDTE = OFF, WDT disabled
  1763                           ;	Power-up Timer Enable bit
  1764                           ;	PWRTE = 0x1, unprogrammed default
  1765                           ;	Brown-out Reset Enable bit
  1766                           ;	BOREN = 0x1, unprogrammed default
  1767                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1768                           ;	LVP = 0x1, unprogrammed default
  1769                           ;	Data EEPROM Memory Code Protection bit
  1770                           ;	CPD = 0x1, unprogrammed default
  1771                           ;	Flash Program Memory Write Enable bits
  1772                           ;	WRT = 0x3, unprogrammed default
  1773                           ;	In-Circuit Debugger Mode bit
  1774                           ;	DEBUG = 0x1, unprogrammed default
  1775                           ;	Flash Program Memory Code Protection bit
  1776                           ;	CP = 0x1, unprogrammed default
  1777     2007                     	org	8199
  1778     2007  3FFB               	dw	16379

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[2]), STR_2(CODE[2]), STR_3(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_display
    _read_matrix_keypad->_scan_keypad
    _init_config->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _display->_clcd_print
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5319
                                              7 COMMON     3     3      0
                            _display
                        _init_config
                 _read_matrix_keypad
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   2     2      0     135
                                              2 COMMON     2     2      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      60
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    2502
                         _clcd_print
                          _init_clcd
                 _init_matrix_keypad
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0    1054
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0    1054
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _display                                              1     1      0    2568
                                              6 COMMON     1     1      0
                         _clcd_print
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           2     1      1    1448
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1    1054
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     _clcd_print
       _clcd_write
     _clcd_write
   _init_config
     _clcd_print
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
   _read_matrix_keypad
     _scan_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Nov 03 16:52:03 2023

                              pc 0002                   clcd_print@addr 0074                               l20 0743  
                             l23 05D7                               l32 0645                               l17 06A9  
                             l52 06E0                               l55 05FA                               l93 075C  
                             l94 0764                               l95 07EF                               l88 05E7  
                             l96 0770                               l97 076A                               u50 075C  
                             u51 075B                               u60 0762                               u61 0761  
                             u70 0768                               u71 0767                               u80 076E  
                             u81 076D                               u90 0786                               u91 0785  
                             fsr 0004               _init_matrix_keypad 05D8                              l110 07B0  
                            l102 0786                              l111 07B8                              l103 078E  
                            l112 07C4                              l104 079A                              l121 07E8  
                            l113 07BE                              l105 0794                              l118 07DA  
                            l119 07E2                              l129 061D                              l801 07BC  
                            l811 07C8                              l741 05E1                              l821 07E6  
                            l813 07CC                              l911 0683                              l743 05E4  
                            l831 07EE                              l815 07E0                              l807 07C2  
                            l751 074A                              l921 069D                              l913 0688  
                            l905 0675                              l745 05E5                              l737 05D8  
                            l761 0768                              l753 074E                              l923 06A0  
                            l915 068B                              l907 067F                              l931 0700  
                            l747 05E6                              l739 05E0                              l827 07EC  
                            l771 0774                              l755 0762                              l917 0697  
                            l909 0682                              l941 0722                              l933 0705  
                            l925 06E1                              l781 0792                              l773 0778  
                            l749 0744                              l919 0698                              l943 0727  
                            l935 070C                              l927 06E9                              l951 05D0  
                            l791 079E                              l775 078C                              l767 076E  
                            l855 05FC                              l961 0635                              l945 0737  
                            l937 070F                              l929 06F0                              l953 05D1  
                            l793 07A2                              l881 061C                              l865 0609  
                            l857 0602                              l963 0639                              l971 06BE  
                            l947 073E                              l939 0716                              l955 05D2  
                            l795 07B6                              l787 0798                              l867 060E  
                            l859 0607                              l957 061F                              l973 06C3  
                            l965 06AB                              l949 05CD                              l981 05E8  
                            l869 0613                              l877 0615                              l959 0627  
                            l975 06C8                              l967 06B0                              l983 05F2  
                            l879 061A                              l991 064C                              l969 06B5  
                            l993 0653                              l979 06D2                              l995 065C  
                            l987 0646                              l997 065D                              l989 0647  
                            l999 0662                              _RB0 0030                              _RB1 0031  
                            _RB2 0032                              _RD0 0040                              _RD1 0041  
                            _RD2 0042                              _RE1 0049                              _RD3 0043  
                            u100 078C                              _RE2 004A                              u101 078B  
                            u110 0792                              u111 0791                              u200 07EC  
                            u120 0798                              u201 07EB                              u121 0797  
                            u130 07B0                              u131 07AF                              u300 067C  
                            u140 07B6                              u301 0678                              u141 07B5  
                            u150 07BC                              u151 07BB                              u160 07C2  
                            u240 0607                              u161 07C1                              u241 0606  
                            u314 067F                              u330 0645                              u170 07DA  
                            u250 060E                              u331 0644                              u171 07D9  
                            u251 060D                              u340 06B0                              u180 07E0  
                            u260 0613                              u325 068F                              u341 06AF  
                            u181 07DF                              u261 0612                              u350 06B5  
                            u190 07E6                              u270 061A                              u351 06B4  
                            u407 06F4                              u191 07E5                              u271 0619  
                            u360 06C8                              u361 06C7                              u417 0702  
                            u370 065C                              u427 0718                              u371 065B  
                            u380 0662                              u437 0724                              u381 0661  
                            u447 0732                              u457 0740                              u467 0685  
                            u477 069A                              u397 06E5                              u487 06A4  
                            fsr0 0004              ?_init_matrix_keypad 0070                             l1001 0664  
                           l1003 066A                             STR_1 001C                             STR_2 001A  
                           STR_3 0009                             _main 0646                             btemp 007E  
                           start 0000             ??_init_matrix_keypad 0070                   clcd_write@byte 0073  
                 clcd_write@mode 0070                            ?_main 0070                     ?_init_config 0070  
                          _PORTD 0008                            _TRISB 0086                            _TRISD 0088  
                          _nRBPU 040F                  __end_of_display 06E1               _read_matrix_keypad 05FB  
                          pclath 000A              ?_read_matrix_keypad 0070                            status 0003  
                          wtemp0 007E                     ?_scan_keypad 0070                  __initialization 07F0  
                   __end_of_main 0674             ??_read_matrix_keypad 0072                           ??_main 0077  
                         _TRISE1 0449                           _TRISE2 044A          _init_display_controller 06E1  
                      ??_display 0076                     __pdataCOMMON 007A          __end_of__initialization 07FC  
                 __pcstackCOMMON 0070        ??_init_display_controller 0074                       _clcd_print 061E  
                     _clcd_write 0674                       __pmaintext 0646                       __stringtab 0003  
                        __ptext1 05FB                          __ptext2 0744                          __ptext3 05E8  
                        __ptext4 05D8                          __ptext5 05CD                          __ptext6 06E1  
                        __ptext7 06AA                          __ptext8 061E                          __ptext9 0674  
                        _display 06AA  __end_of_init_display_controller 0744                __end_of_init_clcd 05D8  
                        main@key 0079             end_of_initialization 07FC                      ?_clcd_print 0074  
                    ?_clcd_write 0070                    clcd_print@str 0075                       display@key 0076  
                     display@pos 007B                       main@prekey 0077                    __pidataCOMMON 05CB  
            start_initialization 07F0                     scan_keypad@i 0070           read_matrix_keypad@mode 0072  
         read_matrix_keypad@once 007A                    ??_init_config 0076                        ___latbits 0002  
                  ??_scan_keypad 0070                        __pstrings 0003                         ?_display 0070  
                      _init_clcd 05CD              __end_of_init_config 05FB         ?_init_display_controller 0070  
                   ??_clcd_print 0075       __end_of_init_matrix_keypad 05E8                     ??_clcd_write 0071  
            __end_of_scan_keypad 07F0                      __stringbase 0008               __end_of_clcd_print 0646  
             __end_of_clcd_write 06AA                       ?_init_clcd 0070            read_matrix_keypad@key 0073  
     __end_of_read_matrix_keypad 061E               __end_of__stringtab 0009                      _init_config 05E8  
                    _scan_keypad 0744                         main@wait 0078                      ??_init_clcd 0076  
                      stringcode 0003                         stringdir 0003                         stringtab 0003  
