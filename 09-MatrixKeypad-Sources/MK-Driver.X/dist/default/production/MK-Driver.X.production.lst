

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Oct 27 18:42:07 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 18/08/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178     0000                     	;# 
   179     0001                     	;# 
   180     0002                     	;# 
   181     0003                     	;# 
   182     0004                     	;# 
   183     0005                     	;# 
   184     0006                     	;# 
   185     0007                     	;# 
   186     0008                     	;# 
   187     0009                     	;# 
   188     000A                     	;# 
   189     000B                     	;# 
   190     000C                     	;# 
   191     000D                     	;# 
   192     000E                     	;# 
   193     000E                     	;# 
   194     000F                     	;# 
   195     0010                     	;# 
   196     0011                     	;# 
   197     0012                     	;# 
   198     0013                     	;# 
   199     0014                     	;# 
   200     0015                     	;# 
   201     0015                     	;# 
   202     0016                     	;# 
   203     0017                     	;# 
   204     0018                     	;# 
   205     0019                     	;# 
   206     001A                     	;# 
   207     001B                     	;# 
   208     001B                     	;# 
   209     001C                     	;# 
   210     001D                     	;# 
   211     001E                     	;# 
   212     001F                     	;# 
   213     0081                     	;# 
   214     0085                     	;# 
   215     0086                     	;# 
   216     0087                     	;# 
   217     0088                     	;# 
   218     0089                     	;# 
   219     008C                     	;# 
   220     008D                     	;# 
   221     008E                     	;# 
   222     0091                     	;# 
   223     0092                     	;# 
   224     0093                     	;# 
   225     0094                     	;# 
   226     0098                     	;# 
   227     0099                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     010C                     	;# 
   233     010D                     	;# 
   234     010E                     	;# 
   235     010F                     	;# 
   236     018C                     	;# 
   237     018D                     	;# 
   238     0000                     	;# 
   239     0001                     	;# 
   240     0002                     	;# 
   241     0003                     	;# 
   242     0004                     	;# 
   243     0005                     	;# 
   244     0006                     	;# 
   245     0007                     	;# 
   246     0008                     	;# 
   247     0009                     	;# 
   248     000A                     	;# 
   249     000B                     	;# 
   250     000C                     	;# 
   251     000D                     	;# 
   252     000E                     	;# 
   253     000E                     	;# 
   254     000F                     	;# 
   255     0010                     	;# 
   256     0011                     	;# 
   257     0012                     	;# 
   258     0013                     	;# 
   259     0014                     	;# 
   260     0015                     	;# 
   261     0015                     	;# 
   262     0016                     	;# 
   263     0017                     	;# 
   264     0018                     	;# 
   265     0019                     	;# 
   266     001A                     	;# 
   267     001B                     	;# 
   268     001B                     	;# 
   269     001C                     	;# 
   270     001D                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     0081                     	;# 
   274     0085                     	;# 
   275     0086                     	;# 
   276     0087                     	;# 
   277     0088                     	;# 
   278     0089                     	;# 
   279     008C                     	;# 
   280     008D                     	;# 
   281     008E                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0094                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     010C                     	;# 
   293     010D                     	;# 
   294     010E                     	;# 
   295     010F                     	;# 
   296     018C                     	;# 
   297     018D                     	;# 
   298                           
   299                           	psect	idataCOMMON
   300     05D5                     __pidataCOMMON:
   301                           
   302                           ;initializer for read_matrix_keypad@once
   303     05D5  3401               	retlw	1
   304     0008                     _PORTD	set	8
   305     0032                     _RB2	set	50
   306     0031                     _RB1	set	49
   307     0030                     _RB0	set	48
   308     0040                     _RD0	set	64
   309     0041                     _RD1	set	65
   310     0042                     _RD2	set	66
   311     0043                     _RD3	set	67
   312     0049                     _RE1	set	73
   313     004A                     _RE2	set	74
   314     0086                     _TRISB	set	134
   315     0088                     _TRISD	set	136
   316     040F                     _nRBPU	set	1039
   317     0449                     _TRISE1	set	1097
   318     044A                     _TRISE2	set	1098
   319                           
   320                           	psect	strings
   321     0003                     __pstrings:
   322     0003                     stringtab:
   323     0003                     __stringtab:
   324     0003                     stringcode:	
   325                           ;	String table - string pointers are 1 byte each
   326                           
   327     0003                     stringdir:
   328     0003  3000               	movlw	high stringdir
   329     0004  008A               	movwf	10
   330     0005  0804               	movf	4,w
   331     0006  0A84               	incf	4,f
   332     0007  0782               	addwf	2,f
   333     0008                     __stringbase:
   334     0008  3400               	retlw	0
   335     0009                     __end_of__stringtab:
   336     0009                     STR_3:
   337     0009  3420               	retlw	32	;' '
   338     000A  344D               	retlw	77	;'M'
   339     000B  3461               	retlw	97	;'a'
   340     000C  3474               	retlw	116	;'t'
   341     000D  3472               	retlw	114	;'r'
   342     000E  3469               	retlw	105	;'i'
   343     000F  3478               	retlw	120	;'x'
   344     0010  3420               	retlw	32	;' '
   345     0011  3420               	retlw	32	;' '
   346     0012  344B               	retlw	75	;'K'
   347     0013  3465               	retlw	101	;'e'
   348     0014  3479               	retlw	121	;'y'
   349     0015  3470               	retlw	112	;'p'
   350     0016  3461               	retlw	97	;'a'
   351     0017  3464               	retlw	100	;'d'
   352     0018  3420               	retlw	32	;' '
   353     0019  3400               	retlw	0
   354     001A                     STR_2:
   355     001A  3420               	retlw	32	;' '
   356     001B  344E               	retlw	78	;'N'
   357     001C  346F               	retlw	111	;'o'
   358     001D  3420               	retlw	32	;' '
   359     001E  344B               	retlw	75	;'K'
   360     001F  3465               	retlw	101	;'e'
   361     0020  3479               	retlw	121	;'y'
   362     0021  3420               	retlw	32	;' '
   363     0022  3450               	retlw	80	;'P'
   364     0023  3472               	retlw	114	;'r'
   365     0024  3465               	retlw	101	;'e'
   366     0025  3473               	retlw	115	;'s'
   367     0026  3473               	retlw	115	;'s'
   368     0027  3465               	retlw	101	;'e'
   369     0028  3464               	retlw	100	;'d'
   370     0029  3420               	retlw	32	;' '
   371     002A  3400               	retlw	0
   372     002B                     STR_1:
   373     002B  344B               	retlw	75	;'K'
   374     002C  3465               	retlw	101	;'e'
   375     002D  3479               	retlw	121	;'y'
   376     002E  3420               	retlw	32	;' '
   377     002F  3420               	retlw	32	;' '
   378     0030  3400               	retlw	0
   379                           
   380                           	psect	cinit
   381     07F6                     start_initialization:	
   382                           ; #config settings
   383                           
   384     07F6                     __initialization:
   385                           
   386                           ; Initialize objects allocated to COMMON
   387     07F6  120A  118A  25D5  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   388     07FB  00FA               	movwf	__pdataCOMMON& (0+127)
   389     07FC                     end_of_initialization:	
   390                           ;End of C runtime variable initialization code
   391                           
   392     07FC                     __end_of__initialization:
   393     07FC  0183               	clrf	3
   394     07FD  120A  118A  2E15   	ljmp	_main	;jump to C main() function
   395                           
   396                           	psect	dataCOMMON
   397     007A                     __pdataCOMMON:
   398     007A                     read_matrix_keypad@once:
   399     007A                     	ds	1
   400                           
   401                           	psect	cstackCOMMON
   402     0070                     __pcstackCOMMON:
   403     0070                     ?_init_matrix_keypad:
   404     0070                     ??_init_matrix_keypad:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ?_read_matrix_keypad:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ?_clcd_write:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ?_init_display_controller:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ?_init_clcd:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ?_display:	
   420                           ; 1 bytes @ 0x0
   421                           
   422     0070                     ?_init_config:	
   423                           ; 1 bytes @ 0x0
   424                           
   425     0070                     ?_main:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0070                     ?_scan_keypad:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ??_scan_keypad:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     clcd_write@mode:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     scan_keypad@i:	
   438                           ; 1 bytes @ 0x0
   439                           
   440                           
   441                           ; 2 bytes @ 0x0
   442     0070                     	ds	1
   443     0071                     ??_clcd_write:
   444                           
   445                           ; 1 bytes @ 0x1
   446     0071                     	ds	1
   447     0072                     ??_read_matrix_keypad:
   448     0072                     read_matrix_keypad@mode:	
   449                           ; 1 bytes @ 0x2
   450                           
   451                           
   452                           ; 1 bytes @ 0x2
   453     0072                     	ds	1
   454     0073                     clcd_write@byte:
   455     0073                     read_matrix_keypad@key:	
   456                           ; 1 bytes @ 0x3
   457                           
   458                           
   459                           ; 1 bytes @ 0x3
   460     0073                     	ds	1
   461     0074                     ??_init_display_controller:
   462     0074                     ?_clcd_putch:	
   463                           ; 1 bytes @ 0x4
   464                           
   465     0074                     ?_clcd_print:	
   466                           ; 1 bytes @ 0x4
   467                           
   468     0074                     clcd_putch@addr:	
   469                           ; 1 bytes @ 0x4
   470                           
   471     0074                     clcd_print@addr:	
   472                           ; 1 bytes @ 0x4
   473                           
   474                           
   475                           ; 1 bytes @ 0x4
   476     0074                     	ds	1
   477     0075                     ??_clcd_putch:
   478     0075                     ??_clcd_print:	
   479                           ; 1 bytes @ 0x5
   480                           
   481     0075                     clcd_putch@data:	
   482                           ; 1 bytes @ 0x5
   483                           
   484     0075                     clcd_print@str:	
   485                           ; 1 bytes @ 0x5
   486                           
   487                           
   488                           ; 1 bytes @ 0x5
   489     0075                     	ds	1
   490     0076                     ??_init_clcd:
   491     0076                     ??_display:	
   492                           ; 1 bytes @ 0x6
   493                           
   494     0076                     ??_init_config:	
   495                           ; 1 bytes @ 0x6
   496                           
   497                           
   498                           ; 1 bytes @ 0x6
   499     0076                     	ds	2
   500     0078                     display@key:
   501                           
   502                           ; 1 bytes @ 0x8
   503     0078                     	ds	1
   504     0079                     ??_main:
   505     0079                     main@key:	
   506                           ; 1 bytes @ 0x9
   507                           
   508                           
   509                           ; 1 bytes @ 0x9
   510     0079                     	ds	1
   511                           
   512                           	psect	maintext
   513     0615                     __pmaintext:	
   514 ;;
   515 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   516 ;;
   517 ;; *************** function _main *****************
   518 ;; Defined at:
   519 ;;		line 47 in file "main.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  key             1    9[COMMON] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : B00/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   533 ;;      Params:         0       0       0       0       0
   534 ;;      Locals:         1       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0
   536 ;;      Totals:         1       0       0       0       0
   537 ;;Total ram usage:        1 bytes
   538 ;; Hardware stack levels required when called: 4
   539 ;; This function calls:
   540 ;;		_display
   541 ;;		_init_config
   542 ;;		_read_matrix_keypad
   543 ;; This function is called by:
   544 ;;		Startup code after reset
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548     0615                     _main:	
   549                           ;psect for function _main
   550                           
   551     0615                     l993:	
   552                           ;incstack = 0
   553                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   554                           
   555     0615  120A  118A  2602  120A  118A  	fcall	_init_config
   556     061A                     l995:
   557     061A  3000               	movlw	0
   558     061B  120A  118A  262B  120A  118A  	fcall	_read_matrix_keypad
   559     0620  00F9               	movwf	main@key
   560     0621                     l997:
   561     0621  0879               	movf	main@key,w
   562     0622  120A  118A  26AC  120A  118A  	fcall	_display
   563     0627  2E1A               	goto	l995
   564     0628  120A  118A  2800   	ljmp	start
   565     062B                     __end_of_main:
   566                           
   567                           	psect	text1
   568     062B                     __ptext1:	
   569 ;; *************** function _read_matrix_keypad *****************
   570 ;; Defined at:
   571 ;;		line 111 in file "matrix_keypad.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;  mode            1    wreg     unsigned char 
   574 ;; Auto vars:     Size  Location     Type
   575 ;;  mode            1    2[COMMON] unsigned char 
   576 ;;  key             1    3[COMMON] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      unsigned char 
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0, pclath, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   586 ;;      Params:         0       0       0       0       0
   587 ;;      Locals:         2       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0
   589 ;;      Totals:         2       0       0       0       0
   590 ;;Total ram usage:        2 bytes
   591 ;; Hardware stack levels used: 1
   592 ;; Hardware stack levels required when called: 1
   593 ;; This function calls:
   594 ;;		_scan_keypad
   595 ;; This function is called by:
   596 ;;		_main
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600     062B                     _read_matrix_keypad:	
   601                           ;psect for function _read_matrix_keypad
   602                           
   603                           
   604                           ;incstack = 0
   605                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
   606                           ;read_matrix_keypad@mode stored from wreg
   607     062B  00F2               	movwf	read_matrix_keypad@mode
   608     062C                     l855:
   609                           
   610                           ;matrix_keypad.c: 111: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 112: {;matrix_keypad.c: 113:     static unsigned char once = 1;;matrix_keypad.c: 11
      +                          4:     unsigned char key;;matrix_keypad.c: 116:     key = scan_keypad();
   611     062C  120A  118A  274A  120A  118A  	fcall	_scan_keypad
   612     0631  00F3               	movwf	read_matrix_keypad@key
   613     0632                     l857:
   614                           
   615                           ;matrix_keypad.c: 118:     if (mode == 0)
   616     0632  0872               	movf	read_matrix_keypad@mode,w
   617     0633  1D03               	btfss	3,2
   618     0634  2E36               	goto	u221
   619     0635  2E37               	goto	u220
   620     0636                     u221:
   621     0636  2E39               	goto	l865
   622     0637                     u220:
   623     0637                     l859:
   624                           
   625                           ;matrix_keypad.c: 119:     {;matrix_keypad.c: 120:         return key;
   626     0637  0873               	movf	read_matrix_keypad@key,w
   627     0638  2E4D               	goto	l127
   628     0639                     l865:
   629                           
   630                           ;matrix_keypad.c: 123:     {;matrix_keypad.c: 124:         if ((key != 0xFF) && once)
   631     0639  0A73               	incf	read_matrix_keypad@key,w
   632     063A  1903               	btfsc	3,2
   633     063B  2E3D               	goto	u231
   634     063C  2E3E               	goto	u230
   635     063D                     u231:
   636     063D  2E45               	goto	l877
   637     063E                     u230:
   638     063E                     l867:
   639     063E  087A               	movf	read_matrix_keypad@once,w
   640     063F  1903               	btfsc	3,2
   641     0640  2E42               	goto	u241
   642     0641  2E43               	goto	u240
   643     0642                     u241:
   644     0642  2E45               	goto	l877
   645     0643                     u240:
   646     0643                     l869:
   647                           
   648                           ;matrix_keypad.c: 125:         {;matrix_keypad.c: 126:             once = 0;
   649     0643  01FA               	clrf	read_matrix_keypad@once
   650     0644  2E37               	goto	l859
   651     0645                     l877:
   652     0645  0A73               	incf	read_matrix_keypad@key,w
   653     0646  1D03               	btfss	3,2
   654     0647  2E49               	goto	u251
   655     0648  2E4A               	goto	u250
   656     0649                     u251:
   657     0649  2E4C               	goto	l881
   658     064A                     u250:
   659     064A                     l879:
   660                           
   661                           ;matrix_keypad.c: 131:         {;matrix_keypad.c: 132:             once = 1;
   662     064A  01FA               	clrf	read_matrix_keypad@once
   663     064B  0AFA               	incf	read_matrix_keypad@once,f
   664     064C                     l881:
   665                           
   666                           ;matrix_keypad.c: 136:     return 0xFF;
   667     064C  30FF               	movlw	255
   668     064D                     l127:
   669     064D  0008               	return
   670     064E                     __end_of_read_matrix_keypad:
   671                           
   672                           	psect	text2
   673     074A                     __ptext2:	
   674 ;; *************** function _scan_keypad *****************
   675 ;; Defined at:
   676 ;;		line 24 in file "matrix_keypad.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  i               2    0[COMMON] int 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      unsigned char 
   683 ;; Registers used:
   684 ;;		wreg, status,2, status,0
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         2       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0
   693 ;;      Totals:         2       0       0       0       0
   694 ;;Total ram usage:        2 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_read_matrix_keypad
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703     074A                     _scan_keypad:	
   704                           ;psect for function _scan_keypad
   705                           
   706     074A                     l749:	
   707                           ;incstack = 0
   708                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
   709                           
   710                           
   711                           ;matrix_keypad.c: 26:     int i;;matrix_keypad.c: 28:     RD3 = 0;
   712     074A  1283               	bcf	3,5	;RP0=0, select bank0
   713     074B  1303               	bcf	3,6	;RP1=0, select bank0
   714     074C  1188               	bcf	8,3	;volatile
   715                           
   716                           ;matrix_keypad.c: 29:     RD2 = 1;
   717     074D  1508               	bsf	8,2	;volatile
   718                           
   719                           ;matrix_keypad.c: 30:     RD1 = 1;
   720     074E  1488               	bsf	8,1	;volatile
   721                           
   722                           ;matrix_keypad.c: 31:     RD0 = 1;
   723     074F  1408               	bsf	8,0	;volatile
   724     0750                     l751:
   725                           
   726                           ;matrix_keypad.c: 33:     for (i = 100; i--; );
   727     0750  3064               	movlw	100
   728     0751  00F0               	movwf	scan_keypad@i
   729     0752  3000               	movlw	0
   730     0753  00F1               	movwf	scan_keypad@i+1
   731     0754                     l753:
   732     0754  30FF               	movlw	255
   733     0755  07F0               	addwf	scan_keypad@i,f
   734     0756  1803               	skipnc
   735     0757  0AF1               	incf	scan_keypad@i+1,f
   736     0758  30FF               	movlw	255
   737     0759  07F1               	addwf	scan_keypad@i+1,f
   738     075A  0A70               	incf	scan_keypad@i,w
   739     075B  1D03               	skipz
   740     075C  2F61               	goto	u51
   741     075D  0A71               	incf	scan_keypad@i+1,w
   742     075E  1D03               	btfss	3,2
   743     075F  2F61               	goto	u51
   744     0760  2F62               	goto	u50
   745     0761                     u51:
   746     0761  2F54               	goto	l753
   747     0762                     u50:
   748     0762                     l91:
   749                           
   750                           ;matrix_keypad.c: 35:     if (RB0 == 0)
   751     0762  1283               	bcf	3,5	;RP0=0, select bank0
   752     0763  1303               	bcf	3,6	;RP1=0, select bank0
   753     0764  1806               	btfsc	6,0	;volatile
   754     0765  2F67               	goto	u61
   755     0766  2F68               	goto	u60
   756     0767                     u61:
   757     0767  2F6A               	goto	l92
   758     0768                     u60:
   759     0768                     l755:
   760                           
   761                           ;matrix_keypad.c: 36:     {;matrix_keypad.c: 37:         return 1;
   762     0768  3001               	movlw	1
   763     0769  2FF5               	goto	l93
   764     076A                     l92:	
   765                           ;matrix_keypad.c: 39:     else if (RB1 == 0)
   766                           
   767     076A  1886               	btfsc	6,1	;volatile
   768     076B  2F6D               	goto	u71
   769     076C  2F6E               	goto	u70
   770     076D                     u71:
   771     076D  2F70               	goto	l95
   772     076E                     u70:
   773     076E                     l761:
   774                           
   775                           ;matrix_keypad.c: 40:     {;matrix_keypad.c: 41:         return 2;
   776     076E  3002               	movlw	2
   777     076F  2FF5               	goto	l93
   778     0770                     l95:	
   779                           ;matrix_keypad.c: 43:     else if (RB2 == 0)
   780                           
   781     0770  1906               	btfsc	6,2	;volatile
   782     0771  2F73               	goto	u81
   783     0772  2F74               	goto	u80
   784     0773                     u81:
   785     0773  2F76               	goto	l94
   786     0774                     u80:
   787     0774                     l767:
   788                           
   789                           ;matrix_keypad.c: 44:     {;matrix_keypad.c: 45:         return 3;
   790     0774  3003               	movlw	3
   791     0775  2FF5               	goto	l93
   792     0776                     l94:
   793                           
   794                           ;matrix_keypad.c: 48:     RD3 = 1;
   795     0776  1588               	bsf	8,3	;volatile
   796                           
   797                           ;matrix_keypad.c: 49:     RD2 = 0;
   798     0777  1108               	bcf	8,2	;volatile
   799                           
   800                           ;matrix_keypad.c: 50:     RD1 = 1;
   801     0778  1488               	bsf	8,1	;volatile
   802                           
   803                           ;matrix_keypad.c: 51:     RD0 = 1;
   804     0779  1408               	bsf	8,0	;volatile
   805     077A                     l771:
   806                           
   807                           ;matrix_keypad.c: 53:     for (i = 100; i--; );
   808     077A  3064               	movlw	100
   809     077B  00F0               	movwf	scan_keypad@i
   810     077C  3000               	movlw	0
   811     077D  00F1               	movwf	scan_keypad@i+1
   812     077E                     l773:
   813     077E  30FF               	movlw	255
   814     077F  07F0               	addwf	scan_keypad@i,f
   815     0780  1803               	skipnc
   816     0781  0AF1               	incf	scan_keypad@i+1,f
   817     0782  30FF               	movlw	255
   818     0783  07F1               	addwf	scan_keypad@i+1,f
   819     0784  0A70               	incf	scan_keypad@i,w
   820     0785  1D03               	skipz
   821     0786  2F8B               	goto	u91
   822     0787  0A71               	incf	scan_keypad@i+1,w
   823     0788  1D03               	btfss	3,2
   824     0789  2F8B               	goto	u91
   825     078A  2F8C               	goto	u90
   826     078B                     u91:
   827     078B  2F7E               	goto	l773
   828     078C                     u90:
   829     078C                     l100:
   830                           
   831                           ;matrix_keypad.c: 55:     if (RB0 == 0)
   832     078C  1283               	bcf	3,5	;RP0=0, select bank0
   833     078D  1303               	bcf	3,6	;RP1=0, select bank0
   834     078E  1806               	btfsc	6,0	;volatile
   835     078F  2F91               	goto	u101
   836     0790  2F92               	goto	u100
   837     0791                     u101:
   838     0791  2F94               	goto	l101
   839     0792                     u100:
   840     0792                     l775:
   841                           
   842                           ;matrix_keypad.c: 56:     {;matrix_keypad.c: 57:         return 4;
   843     0792  3004               	movlw	4
   844     0793  2FF5               	goto	l93
   845     0794                     l101:	
   846                           ;matrix_keypad.c: 59:     else if (RB1 == 0)
   847                           
   848     0794  1886               	btfsc	6,1	;volatile
   849     0795  2F97               	goto	u111
   850     0796  2F98               	goto	u110
   851     0797                     u111:
   852     0797  2F9A               	goto	l103
   853     0798                     u110:
   854     0798                     l781:
   855                           
   856                           ;matrix_keypad.c: 60:     {;matrix_keypad.c: 61:         return 5;
   857     0798  3005               	movlw	5
   858     0799  2FF5               	goto	l93
   859     079A                     l103:	
   860                           ;matrix_keypad.c: 63:     else if (RB2 == 0)
   861                           
   862     079A  1906               	btfsc	6,2	;volatile
   863     079B  2F9D               	goto	u121
   864     079C  2F9E               	goto	u120
   865     079D                     u121:
   866     079D  2FA0               	goto	l102
   867     079E                     u120:
   868     079E                     l787:
   869                           
   870                           ;matrix_keypad.c: 64:     {;matrix_keypad.c: 65:         return 6;
   871     079E  3006               	movlw	6
   872     079F  2FF5               	goto	l93
   873     07A0                     l102:
   874                           
   875                           ;matrix_keypad.c: 68:     RD3 = 1;
   876     07A0  1588               	bsf	8,3	;volatile
   877                           
   878                           ;matrix_keypad.c: 69:     RD2 = 1;
   879     07A1  1508               	bsf	8,2	;volatile
   880                           
   881                           ;matrix_keypad.c: 70:     RD1 = 0;
   882     07A2  1088               	bcf	8,1	;volatile
   883                           
   884                           ;matrix_keypad.c: 71:     RD0 = 1;
   885     07A3  1408               	bsf	8,0	;volatile
   886     07A4                     l791:
   887                           
   888                           ;matrix_keypad.c: 73:     for (i = 100; i--; );
   889     07A4  3064               	movlw	100
   890     07A5  00F0               	movwf	scan_keypad@i
   891     07A6  3000               	movlw	0
   892     07A7  00F1               	movwf	scan_keypad@i+1
   893     07A8                     l793:
   894     07A8  30FF               	movlw	255
   895     07A9  07F0               	addwf	scan_keypad@i,f
   896     07AA  1803               	skipnc
   897     07AB  0AF1               	incf	scan_keypad@i+1,f
   898     07AC  30FF               	movlw	255
   899     07AD  07F1               	addwf	scan_keypad@i+1,f
   900     07AE  0A70               	incf	scan_keypad@i,w
   901     07AF  1D03               	skipz
   902     07B0  2FB5               	goto	u131
   903     07B1  0A71               	incf	scan_keypad@i+1,w
   904     07B2  1D03               	btfss	3,2
   905     07B3  2FB5               	goto	u131
   906     07B4  2FB6               	goto	u130
   907     07B5                     u131:
   908     07B5  2FA8               	goto	l793
   909     07B6                     u130:
   910     07B6                     l108:
   911                           
   912                           ;matrix_keypad.c: 75:     if (RB0 == 0)
   913     07B6  1283               	bcf	3,5	;RP0=0, select bank0
   914     07B7  1303               	bcf	3,6	;RP1=0, select bank0
   915     07B8  1806               	btfsc	6,0	;volatile
   916     07B9  2FBB               	goto	u141
   917     07BA  2FBC               	goto	u140
   918     07BB                     u141:
   919     07BB  2FBE               	goto	l109
   920     07BC                     u140:
   921     07BC                     l795:
   922                           
   923                           ;matrix_keypad.c: 76:     {;matrix_keypad.c: 77:         return 7;
   924     07BC  3007               	movlw	7
   925     07BD  2FF5               	goto	l93
   926     07BE                     l109:	
   927                           ;matrix_keypad.c: 79:     else if (RB1 == 0)
   928                           
   929     07BE  1886               	btfsc	6,1	;volatile
   930     07BF  2FC1               	goto	u151
   931     07C0  2FC2               	goto	u150
   932     07C1                     u151:
   933     07C1  2FC4               	goto	l111
   934     07C2                     u150:
   935     07C2                     l801:
   936                           
   937                           ;matrix_keypad.c: 80:     {;matrix_keypad.c: 81:         return 8;
   938     07C2  3008               	movlw	8
   939     07C3  2FF5               	goto	l93
   940     07C4                     l111:	
   941                           ;matrix_keypad.c: 83:     else if (RB2 == 0)
   942                           
   943     07C4  1906               	btfsc	6,2	;volatile
   944     07C5  2FC7               	goto	u161
   945     07C6  2FC8               	goto	u160
   946     07C7                     u161:
   947     07C7  2FCA               	goto	l110
   948     07C8                     u160:
   949     07C8                     l807:
   950                           
   951                           ;matrix_keypad.c: 84:     {;matrix_keypad.c: 85:         return 9;
   952     07C8  3009               	movlw	9
   953     07C9  2FF5               	goto	l93
   954     07CA                     l110:
   955                           
   956                           ;matrix_keypad.c: 88:     RD3 = 1;
   957     07CA  1588               	bsf	8,3	;volatile
   958                           
   959                           ;matrix_keypad.c: 89:     RD2 = 1;
   960     07CB  1508               	bsf	8,2	;volatile
   961                           
   962                           ;matrix_keypad.c: 90:     RD1 = 1;
   963     07CC  1488               	bsf	8,1	;volatile
   964                           
   965                           ;matrix_keypad.c: 91:     RD0 = 0;
   966     07CD  1008               	bcf	8,0	;volatile
   967     07CE                     l811:
   968                           
   969                           ;matrix_keypad.c: 93:     for (i = 100; i--; );
   970     07CE  3064               	movlw	100
   971     07CF  00F0               	movwf	scan_keypad@i
   972     07D0  3000               	movlw	0
   973     07D1  00F1               	movwf	scan_keypad@i+1
   974     07D2                     l813:
   975     07D2  30FF               	movlw	255
   976     07D3  07F0               	addwf	scan_keypad@i,f
   977     07D4  1803               	skipnc
   978     07D5  0AF1               	incf	scan_keypad@i+1,f
   979     07D6  30FF               	movlw	255
   980     07D7  07F1               	addwf	scan_keypad@i+1,f
   981     07D8  0A70               	incf	scan_keypad@i,w
   982     07D9  1D03               	skipz
   983     07DA  2FDF               	goto	u171
   984     07DB  0A71               	incf	scan_keypad@i+1,w
   985     07DC  1D03               	btfss	3,2
   986     07DD  2FDF               	goto	u171
   987     07DE  2FE0               	goto	u170
   988     07DF                     u171:
   989     07DF  2FD2               	goto	l813
   990     07E0                     u170:
   991     07E0                     l116:
   992                           
   993                           ;matrix_keypad.c: 95:     if (RB0 == 0)
   994     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   995     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   996     07E2  1806               	btfsc	6,0	;volatile
   997     07E3  2FE5               	goto	u181
   998     07E4  2FE6               	goto	u180
   999     07E5                     u181:
  1000     07E5  2FE8               	goto	l117
  1001     07E6                     u180:
  1002     07E6                     l815:
  1003                           
  1004                           ;matrix_keypad.c: 96:     {;matrix_keypad.c: 97:         return '*';
  1005     07E6  302A               	movlw	42
  1006     07E7  2FF5               	goto	l93
  1007     07E8                     l117:	
  1008                           ;matrix_keypad.c: 99:     else if (RB1 == 0)
  1009                           
  1010     07E8  1886               	btfsc	6,1	;volatile
  1011     07E9  2FEB               	goto	u191
  1012     07EA  2FEC               	goto	u190
  1013     07EB                     u191:
  1014     07EB  2FEE               	goto	l119
  1015     07EC                     u190:
  1016     07EC                     l821:
  1017                           
  1018                           ;matrix_keypad.c: 100:     {;matrix_keypad.c: 101:         return 0;
  1019     07EC  3000               	movlw	0
  1020     07ED  2FF5               	goto	l93
  1021     07EE                     l119:	
  1022                           ;matrix_keypad.c: 103:     else if (RB2 == 0)
  1023                           
  1024     07EE  1906               	btfsc	6,2	;volatile
  1025     07EF  2FF1               	goto	u201
  1026     07F0  2FF2               	goto	u200
  1027     07F1                     u201:
  1028     07F1  2FF4               	goto	l831
  1029     07F2                     u200:
  1030     07F2                     l827:
  1031                           
  1032                           ;matrix_keypad.c: 104:     {;matrix_keypad.c: 105:         return '#';
  1033     07F2  3023               	movlw	35
  1034     07F3  2FF5               	goto	l93
  1035     07F4                     l831:
  1036                           
  1037                           ;matrix_keypad.c: 108:     return 0xFF;
  1038     07F4  30FF               	movlw	255
  1039     07F5                     l93:
  1040     07F5  0008               	return
  1041     07F6                     __end_of_scan_keypad:
  1042                           
  1043                           	psect	text3
  1044     0602                     __ptext3:	
  1045 ;; *************** function _init_config *****************
  1046 ;; Defined at:
  1047 ;;		line 40 in file "main.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1061 ;;      Params:         0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0
  1064 ;;      Totals:         0       0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used: 1
  1067 ;; Hardware stack levels required when called: 3
  1068 ;; This function calls:
  1069 ;;		_clcd_print
  1070 ;;		_init_clcd
  1071 ;;		_init_matrix_keypad
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077     0602                     _init_config:	
  1078                           ;psect for function _init_config
  1079                           
  1080     0602                     l989:	
  1081                           ;incstack = 0
  1082                           ; Regs used in _init_config: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1083                           
  1084                           
  1085                           ;main.c: 41:     while (1) {
  1086     0602  120A  118A  25D6  120A  118A  	fcall	_init_clcd
  1087                           
  1088                           ;main.c: 42:         key = read_matrix_keypad(0);
  1089     0607  120A  118A  25E1  120A  118A  	fcall	_init_matrix_keypad
  1090     060C                     l991:
  1091                           
  1092                           ;main.c: 44:     }
  1093     060C  3080               	movlw	128
  1094     060D  00F4               	movwf	clcd_print@addr
  1095     060E  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1096     060F  120A  118A  264E  120A  118A  	fcall	_clcd_print
  1097     0614                     l55:
  1098     0614  0008               	return
  1099     0615                     __end_of_init_config:
  1100                           
  1101                           	psect	text4
  1102     05E1                     __ptext4:	
  1103 ;; *************** function _init_matrix_keypad *****************
  1104 ;; Defined at:
  1105 ;;		line 4 in file "matrix_keypad.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0
  1122 ;;      Totals:         0       0       0       0       0
  1123 ;;Total ram usage:        0 bytes
  1124 ;; Hardware stack levels used: 1
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		_init_config
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132     05E1                     _init_matrix_keypad:	
  1133                           ;psect for function _init_matrix_keypad
  1134                           
  1135     05E1                     l737:	
  1136                           ;incstack = 0
  1137                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  1138                           
  1139                           
  1140                           ;matrix_keypad.c: 8:     TRISB = TRISB | 0x07;
  1141     05E1  1683               	bsf	3,5	;RP0=1, select bank1
  1142     05E2  1303               	bcf	3,6	;RP1=0, select bank1
  1143     05E3  0806               	movf	6,w	;volatile
  1144     05E4  3807               	iorlw	7
  1145     05E5  0086               	movwf	6	;volatile
  1146                           
  1147                           ;matrix_keypad.c: 12:     TRISD = TRISD & 0xF0;
  1148     05E6  0808               	movf	8,w	;volatile
  1149     05E7  39F0               	andlw	240
  1150     05E8  0088               	movwf	8	;volatile
  1151     05E9                     l739:
  1152                           
  1153                           ;matrix_keypad.c: 15:     nRBPU = 0;
  1154     05E9  1381               	bcf	1,7	;volatile
  1155     05EA                     l741:
  1156                           
  1157                           ;matrix_keypad.c: 18:     RD3 = 1;
  1158     05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1159     05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1160     05EC  1588               	bsf	8,3	;volatile
  1161     05ED                     l743:
  1162                           
  1163                           ;matrix_keypad.c: 19:     RD2 = 1;
  1164     05ED  1508               	bsf	8,2	;volatile
  1165     05EE                     l745:
  1166                           
  1167                           ;matrix_keypad.c: 20:     RD1 = 1;
  1168     05EE  1488               	bsf	8,1	;volatile
  1169     05EF                     l747:
  1170                           
  1171                           ;matrix_keypad.c: 21:     RD0 = 1;
  1172     05EF  1408               	bsf	8,0	;volatile
  1173     05F0                     l86:
  1174     05F0  0008               	return
  1175     05F1                     __end_of_init_matrix_keypad:
  1176                           
  1177                           	psect	text5
  1178     05D6                     __ptext5:	
  1179 ;; *************** function _init_clcd *****************
  1180 ;; Defined at:
  1181 ;;		line 44 in file "clcd.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0, pclath, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1195 ;;      Params:         0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0
  1198 ;;      Totals:         0       0       0       0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 2
  1202 ;; This function calls:
  1203 ;;		_init_display_controller
  1204 ;; This function is called by:
  1205 ;;		_init_config
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209     05D6                     _init_clcd:	
  1210                           ;psect for function _init_clcd
  1211                           
  1212     05D6                     l955:	
  1213                           ;incstack = 0
  1214                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1215                           
  1216                           
  1217                           ;clcd.c: 47:     TRISD = 0x00;
  1218     05D6  1683               	bsf	3,5	;RP0=1, select bank1
  1219     05D7  1303               	bcf	3,6	;RP1=0, select bank1
  1220     05D8  0188               	clrf	8	;volatile
  1221     05D9                     l957:
  1222                           
  1223                           ;clcd.c: 50:     TRISE2 = 0;
  1224     05D9  1109               	bcf	9,2	;volatile
  1225     05DA                     l959:
  1226                           
  1227                           ;clcd.c: 51:     TRISE1 = 0;
  1228     05DA  1089               	bcf	9,1	;volatile
  1229     05DB                     l961:
  1230                           
  1231                           ;clcd.c: 53:     init_display_controller();
  1232     05DB  120A  118A  26E7  120A  118A  	fcall	_init_display_controller
  1233     05E0                     l23:
  1234     05E0  0008               	return
  1235     05E1                     __end_of_init_clcd:
  1236                           
  1237                           	psect	text6
  1238     06E7                     __ptext6:	
  1239 ;; *************** function _init_display_controller *****************
  1240 ;; Defined at:
  1241 ;;		line 21 in file "clcd.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, pclath, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1255 ;;      Params:         0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0
  1257 ;;      Temps:          2       0       0       0       0
  1258 ;;      Totals:         2       0       0       0       0
  1259 ;;Total ram usage:        2 bytes
  1260 ;; Hardware stack levels used: 1
  1261 ;; Hardware stack levels required when called: 1
  1262 ;; This function calls:
  1263 ;;		_clcd_write
  1264 ;; This function is called by:
  1265 ;;		_init_clcd
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269     06E7                     _init_display_controller:	
  1270                           ;psect for function _init_display_controller
  1271                           
  1272     06E7                     l931:	
  1273                           ;incstack = 0
  1274                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1275                           
  1276                           
  1277                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1278     06E7  30C3               	movlw	195
  1279     06E8  00F5               	movwf	??_init_display_controller+1
  1280     06E9  30CD               	movlw	205
  1281     06EA  00F4               	movwf	??_init_display_controller
  1282     06EB                     u317:
  1283     06EB  0BF4               	decfsz	??_init_display_controller,f
  1284     06EC  2EEB               	goto	u317
  1285     06ED  0BF5               	decfsz	??_init_display_controller+1,f
  1286     06EE  2EEB               	goto	u317
  1287     06EF                     l933:
  1288                           
  1289                           ;clcd.c: 27:     clcd_write(0x33, 0);
  1290     06EF  01F0               	clrf	clcd_write@mode
  1291     06F0  3033               	movlw	51
  1292     06F1  120A  118A  2676  120A  118A  	fcall	_clcd_write
  1293     06F6                     l935:
  1294                           
  1295                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1296     06F6  301B               	movlw	27
  1297     06F7  00F5               	movwf	??_init_display_controller+1
  1298     06F8  309E               	movlw	158
  1299     06F9  00F4               	movwf	??_init_display_controller
  1300     06FA                     u327:
  1301     06FA  0BF4               	decfsz	??_init_display_controller,f
  1302     06FB  2EFA               	goto	u327
  1303     06FC  0BF5               	decfsz	??_init_display_controller+1,f
  1304     06FD  2EFA               	goto	u327
  1305     06FE  0000               	nop
  1306                           
  1307                           ;clcd.c: 29:     clcd_write(0x33, 0);
  1308     06FF  01F0               	clrf	clcd_write@mode
  1309     0700  3033               	movlw	51
  1310     0701  120A  118A  2676  120A  118A  	fcall	_clcd_write
  1311     0706                     l937:
  1312                           
  1313                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1314     0706  30A6               	movlw	166
  1315     0707  00F4               	movwf	??_init_display_controller
  1316     0708                     u337:
  1317     0708  0BF4               	decfsz	??_init_display_controller,f
  1318     0709  2F08               	goto	u337
  1319     070A  0000               	nop
  1320     070B                     l939:
  1321                           
  1322                           ;clcd.c: 31:     clcd_write(0x33, 0);
  1323     070B  01F0               	clrf	clcd_write@mode
  1324     070C  3033               	movlw	51
  1325     070D  120A  118A  2676  120A  118A  	fcall	_clcd_write
  1326     0712                     l941:
  1327                           
  1328                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1329     0712  2F13               	nop2	;2 cycle nop
  1330     0713  2F14               	nop2	;2 cycle nop
  1331     0714  0000               	nop
  1332     0715                     l943:
  1333                           
  1334                           ;clcd.c: 34:     clcd_write(0x02, 0);
  1335     0715  01F0               	clrf	clcd_write@mode
  1336     0716  3002               	movlw	2
  1337     0717  120A  118A  2676  120A  118A  	fcall	_clcd_write
  1338     071C                     l945:
  1339                           
  1340                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1341     071C  30A6               	movlw	166
  1342     071D  00F4               	movwf	??_init_display_controller
  1343     071E                     u347:
  1344     071E  0BF4               	decfsz	??_init_display_controller,f
  1345     071F  2F1E               	goto	u347
  1346     0720  0000               	nop
  1347                           
  1348                           ;clcd.c: 36:     clcd_write(0x28, 0);
  1349     0721  01F0               	clrf	clcd_write@mode
  1350     0722  3028               	movlw	40
  1351     0723  120A  118A  2676  120A  118A  	fcall	_clcd_write
  1352     0728                     l947:
  1353                           
  1354                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1355     0728  30A6               	movlw	166
  1356     0729  00F4               	movwf	??_init_display_controller
  1357     072A                     u357:
  1358     072A  0BF4               	decfsz	??_init_display_controller,f
  1359     072B  2F2A               	goto	u357
  1360     072C  0000               	nop
  1361     072D                     l949:
  1362                           
  1363                           ;clcd.c: 38:     clcd_write(0x01, 0);
  1364     072D  01F0               	clrf	clcd_write@mode
  1365     072E  3001               	movlw	1
  1366     072F  120A  118A  2676  120A  118A  	fcall	_clcd_write
  1367                           
  1368                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1369     0734  3004               	movlw	4
  1370     0735  00F5               	movwf	??_init_display_controller+1
  1371     0736  303D               	movlw	61
  1372     0737  00F4               	movwf	??_init_display_controller
  1373     0738                     u367:
  1374     0738  0BF4               	decfsz	??_init_display_controller,f
  1375     0739  2F38               	goto	u367
  1376     073A  0BF5               	decfsz	??_init_display_controller+1,f
  1377     073B  2F38               	goto	u367
  1378     073C  2F3D               	nop2
  1379     073D                     l951:
  1380                           
  1381                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  1382     073D  01F0               	clrf	clcd_write@mode
  1383     073E  300C               	movlw	12
  1384     073F  120A  118A  2676  120A  118A  	fcall	_clcd_write
  1385     0744                     l953:
  1386                           
  1387                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1388     0744  30A6               	movlw	166
  1389     0745  00F4               	movwf	??_init_display_controller
  1390     0746                     u377:
  1391     0746  0BF4               	decfsz	??_init_display_controller,f
  1392     0747  2F46               	goto	u377
  1393     0748  0000               	nop
  1394     0749                     l20:
  1395     0749  0008               	return
  1396     074A                     __end_of_init_display_controller:
  1397                           
  1398                           	psect	text7
  1399     06AC                     __ptext7:	
  1400 ;; *************** function _display *****************
  1401 ;; Defined at:
  1402 ;;		line 15 in file "main.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  key             1    wreg     unsigned char 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  key             1    8[COMMON] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         0       0       0       0       0
  1417 ;;      Locals:         1       0       0       0       0
  1418 ;;      Temps:          2       0       0       0       0
  1419 ;;      Totals:         3       0       0       0       0
  1420 ;;Total ram usage:        3 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 2
  1423 ;; This function calls:
  1424 ;;		_clcd_print
  1425 ;;		_clcd_putch
  1426 ;; This function is called by:
  1427 ;;		_main
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431     06AC                     _display:	
  1432                           ;psect for function _display
  1433                           
  1434                           
  1435                           ;incstack = 0
  1436                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1437                           ;display@key stored from wreg
  1438     06AC  00F8               	movwf	display@key
  1439     06AD                     l973:
  1440                           
  1441                           ;main.c: 15:                 clcd_putch(key, (0xC0 + 5));;main.c: 16:                 br
      +                          eak;;main.c: 17:             default:
  1442     06AD  0A78               	incf	display@key,w
  1443     06AE  1903               	btfsc	3,2
  1444     06AF  2EB1               	goto	u301
  1445     06B0  2EB2               	goto	u300
  1446     06B1                     u301:
  1447     06B1  2EDE               	goto	l983
  1448     06B2                     u300:
  1449     06B2                     l975:
  1450                           
  1451                           ;main.c: 18:                 clcd_putch(key + '0', (0xC0 + 5));;main.c: 20: 
  1452     06B2  30C0               	movlw	192
  1453     06B3  00F4               	movwf	clcd_print@addr
  1454     06B4  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1455     06B5  120A  118A  264E  120A  118A  	fcall	_clcd_print
  1456                           
  1457                           ;main.c: 22:     }
  1458     06BA  2ECE               	goto	l981
  1459     06BB                     l977:
  1460                           
  1461                           ;main.c: 26:     }
  1462     06BB  30C5               	movlw	197
  1463     06BC  00F4               	movwf	clcd_putch@addr
  1464     06BD  0878               	movf	display@key,w
  1465     06BE  120A  118A  25F1  120A  118A  	fcall	_clcd_putch
  1466                           
  1467                           ;main.c: 27: }
  1468     06C3  2EE6               	goto	l52
  1469     06C4                     l979:
  1470                           
  1471                           ;main.c: 29: static void init_config(void) {
  1472     06C4  30C5               	movlw	197
  1473     06C5  00F4               	movwf	clcd_putch@addr
  1474     06C6  0878               	movf	display@key,w
  1475     06C7  3E30               	addlw	48
  1476     06C8  120A  118A  25F1  120A  118A  	fcall	_clcd_putch
  1477                           
  1478                           ;main.c: 30:     init_clcd();
  1479     06CD  2EE6               	goto	l52
  1480     06CE                     l981:
  1481     06CE  0878               	movf	display@key,w
  1482     06CF  00F6               	movwf	??_display
  1483     06D0  01F7               	clrf	??_display+1
  1484                           
  1485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1486                           ; Switch size 1, requested type "simple"
  1487                           ; Number of cases is 1, Range of values is 0 to 0
  1488                           ; switch strategies available:
  1489                           ; Name         Instructions Cycles
  1490                           ; simple_byte            4     3 (average)
  1491                           ; direct_byte           11     8 (fixed)
  1492                           ; jumptable            260     6 (fixed)
  1493                           ;	Chosen strategy is simple_byte
  1494     06D1  0877               	movf	??_display+1,w
  1495     06D2  3A00               	xorlw	0	; case 0
  1496     06D3  1903               	skipnz
  1497     06D4  2ED6               	goto	l1019
  1498     06D5  2EC4               	goto	l979
  1499     06D6                     l1019:
  1500                           
  1501                           ; Switch size 1, requested type "simple"
  1502                           ; Number of cases is 2, Range of values is 35 to 42
  1503                           ; switch strategies available:
  1504                           ; Name         Instructions Cycles
  1505                           ; simple_byte            7     4 (average)
  1506                           ; direct_byte           35    11 (fixed)
  1507                           ; jumptable            263     9 (fixed)
  1508                           ;	Chosen strategy is simple_byte
  1509     06D6  0876               	movf	??_display,w
  1510     06D7  3A23               	xorlw	35	; case 35
  1511     06D8  1903               	skipnz
  1512     06D9  2EBB               	goto	l977
  1513     06DA  3A09               	xorlw	9	; case 42
  1514     06DB  1903               	skipnz
  1515     06DC  2EBB               	goto	l977
  1516     06DD  2EC4               	goto	l979
  1517     06DE                     l983:
  1518                           
  1519                           ;main.c: 35: ;main.c: 36: void main(void) {
  1520     06DE  30C0               	movlw	192
  1521     06DF  00F4               	movwf	clcd_print@addr
  1522     06E0  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1523     06E1  120A  118A  264E  120A  118A  	fcall	_clcd_print
  1524     06E6                     l52:
  1525     06E6  0008               	return
  1526     06E7                     __end_of_display:
  1527                           
  1528                           	psect	text8
  1529     05F1                     __ptext8:	
  1530 ;; *************** function _clcd_putch *****************
  1531 ;; Defined at:
  1532 ;;		line 56 in file "clcd.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  data            1    wreg     const unsigned char 
  1535 ;;  addr            1    4[COMMON] unsigned char 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  data            1    5[COMMON] const unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0, pclath, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         1       0       0       0       0
  1548 ;;      Locals:         1       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0
  1550 ;;      Totals:         2       0       0       0       0
  1551 ;;Total ram usage:        2 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 1
  1554 ;; This function calls:
  1555 ;;		_clcd_write
  1556 ;; This function is called by:
  1557 ;;		_display
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561     05F1                     _clcd_putch:	
  1562                           ;psect for function _clcd_putch
  1563                           
  1564                           
  1565                           ;incstack = 0
  1566                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1567                           ;clcd_putch@data stored from wreg
  1568     05F1  00F5               	movwf	clcd_putch@data
  1569     05F2                     l963:
  1570                           
  1571                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
  1572     05F2  01F0               	clrf	clcd_write@mode
  1573     05F3  0874               	movf	clcd_putch@addr,w
  1574     05F4  120A  118A  2676  120A  118A  	fcall	_clcd_write
  1575                           
  1576                           ;clcd.c: 59:     clcd_write(data, 1);
  1577     05F9  01F0               	clrf	clcd_write@mode
  1578     05FA  0AF0               	incf	clcd_write@mode,f
  1579     05FB  0875               	movf	clcd_putch@data,w
  1580     05FC  120A  118A  2676  120A  118A  	fcall	_clcd_write
  1581     0601                     l26:
  1582     0601  0008               	return
  1583     0602                     __end_of_clcd_putch:
  1584                           
  1585                           	psect	text9
  1586     064E                     __ptext9:	
  1587 ;; *************** function _clcd_print *****************
  1588 ;; Defined at:
  1589 ;;		line 62 in file "clcd.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  str             1    wreg     PTR const unsigned char 
  1592 ;;		 -> STR_3(17), STR_2(17), STR_1(6), 
  1593 ;;  addr            1    4[COMMON] unsigned char 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  str             1    5[COMMON] PTR const unsigned char 
  1596 ;;		 -> STR_3(17), STR_2(17), STR_1(6), 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         1       0       0       0       0
  1607 ;;      Locals:         1       0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0
  1609 ;;      Totals:         2       0       0       0       0
  1610 ;;Total ram usage:        2 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 1
  1613 ;; This function calls:
  1614 ;;		_clcd_write
  1615 ;; This function is called by:
  1616 ;;		_display
  1617 ;;		_init_config
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621     064E                     _clcd_print:	
  1622                           ;psect for function _clcd_print
  1623                           
  1624                           
  1625                           ;incstack = 0
  1626                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1627                           ;clcd_print@str stored from wreg
  1628     064E  00F5               	movwf	clcd_print@str
  1629     064F                     l965:
  1630                           
  1631                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  1632     064F  01F0               	clrf	clcd_write@mode
  1633     0650  0874               	movf	clcd_print@addr,w
  1634     0651  120A  118A  2676  120A  118A  	fcall	_clcd_write
  1635                           
  1636                           ;clcd.c: 66:     while (*str != '\0')
  1637     0656  2E69               	goto	l971
  1638     0657                     l967:
  1639                           
  1640                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  1641     0657  01F0               	clrf	clcd_write@mode
  1642     0658  0AF0               	incf	clcd_write@mode,f
  1643     0659  0875               	movf	clcd_print@str,w
  1644     065A  0084               	movwf	4
  1645     065B  120A  118A  2003  120A  118A  	fcall	stringdir
  1646     0660  120A  118A  2676  120A  118A  	fcall	_clcd_write
  1647     0665                     l969:
  1648                           
  1649                           ;clcd.c: 69:         str++;
  1650     0665  3001               	movlw	1
  1651     0666  00FF               	movwf	btemp+1
  1652     0667  087F               	movf	btemp+1,w
  1653     0668  07F5               	addwf	clcd_print@str,f
  1654     0669                     l971:
  1655                           
  1656                           ;clcd.c: 66:     while (*str != '\0')
  1657     0669  0875               	movf	clcd_print@str,w
  1658     066A  0084               	movwf	4
  1659     066B  120A  118A  2003  120A  118A  	fcall	stringdir
  1660     0670  3A00               	xorlw	0
  1661     0671  1D03               	skipz
  1662     0672  2E74               	goto	u291
  1663     0673  2E75               	goto	u290
  1664     0674                     u291:
  1665     0674  2E57               	goto	l967
  1666     0675                     u290:
  1667     0675                     l32:
  1668     0675  0008               	return
  1669     0676                     __end_of_clcd_print:
  1670                           
  1671                           	psect	text10
  1672     0676                     __ptext10:	
  1673 ;; *************** function _clcd_write *****************
  1674 ;; Defined at:
  1675 ;;		line 4 in file "clcd.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  byte            1    wreg     unsigned char 
  1678 ;;  mode            1    0[COMMON] unsigned char 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  byte            1    3[COMMON] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1690 ;;      Params:         1       0       0       0       0
  1691 ;;      Locals:         1       0       0       0       0
  1692 ;;      Temps:          2       0       0       0       0
  1693 ;;      Totals:         4       0       0       0       0
  1694 ;;Total ram usage:        4 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_init_display_controller
  1700 ;;		_clcd_putch
  1701 ;;		_clcd_print
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705     0676                     _clcd_write:	
  1706                           ;psect for function _clcd_write
  1707                           
  1708                           
  1709                           ;incstack = 0
  1710                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  1711                           ;clcd_write@byte stored from wreg
  1712     0676  00F3               	movwf	clcd_write@byte
  1713     0677                     l911:
  1714                           
  1715                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
  1716     0677  1870               	btfsc	clcd_write@mode,0
  1717     0678  2E7A               	goto	u261
  1718     0679  2E7E               	goto	u260
  1719     067A                     u261:
  1720     067A  1283               	bcf	3,5	;RP0=0, select bank0
  1721     067B  1303               	bcf	3,6	;RP1=0, select bank0
  1722     067C  1509               	bsf	9,2	;volatile
  1723     067D  2E81               	goto	u274
  1724     067E                     u260:
  1725     067E  1283               	bcf	3,5	;RP0=0, select bank0
  1726     067F  1303               	bcf	3,6	;RP1=0, select bank0
  1727     0680  1109               	bcf	9,2	;volatile
  1728     0681                     u274:
  1729     0681                     l913:
  1730                           
  1731                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  1732     0681  0873               	movf	clcd_write@byte,w
  1733     0682  39F0               	andlw	240
  1734     0683  0088               	movwf	8	;volatile
  1735     0684                     l915:
  1736                           
  1737                           ;clcd.c: 9:     RE1 = 1;
  1738     0684  1489               	bsf	9,1	;volatile
  1739     0685                     l917:
  1740                           
  1741                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1742     0685  30A6               	movlw	166
  1743     0686  00F1               	movwf	??_clcd_write
  1744     0687                     u387:
  1745     0687  0BF1               	decfsz	??_clcd_write,f
  1746     0688  2E87               	goto	u387
  1747     0689  0000               	nop
  1748     068A                     l919:
  1749                           
  1750                           ;clcd.c: 11:     RE1 = 0;
  1751     068A  1283               	bcf	3,5	;RP0=0, select bank0
  1752     068B  1303               	bcf	3,6	;RP1=0, select bank0
  1753     068C  1089               	bcf	9,1	;volatile
  1754     068D                     l921:
  1755                           
  1756                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  1757     068D  0873               	movf	clcd_write@byte,w
  1758     068E  390F               	andlw	15
  1759     068F  00F1               	movwf	??_clcd_write
  1760     0690  3003               	movlw	3
  1761     0691                     u285:
  1762     0691  1003               	clrc
  1763     0692  0DF1               	rlf	??_clcd_write,f
  1764     0693  3EFF               	addlw	-1
  1765     0694  1D03               	skipz
  1766     0695  2E91               	goto	u285
  1767     0696  1003               	clrc
  1768     0697  0D71               	rlf	??_clcd_write,w
  1769     0698  0088               	movwf	8	;volatile
  1770     0699                     l923:
  1771                           
  1772                           ;clcd.c: 14:     RE1 = 1;
  1773     0699  1489               	bsf	9,1	;volatile
  1774     069A                     l925:
  1775                           
  1776                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1777     069A  30A6               	movlw	166
  1778     069B  00F1               	movwf	??_clcd_write
  1779     069C                     u397:
  1780     069C  0BF1               	decfsz	??_clcd_write,f
  1781     069D  2E9C               	goto	u397
  1782     069E  0000               	nop
  1783     069F                     l927:
  1784                           
  1785                           ;clcd.c: 16:     RE1 = 0;
  1786     069F  1283               	bcf	3,5	;RP0=0, select bank0
  1787     06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1788     06A1  1089               	bcf	9,1	;volatile
  1789     06A2                     l929:
  1790                           
  1791                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1792     06A2  301B               	movlw	27
  1793     06A3  00F2               	movwf	??_clcd_write+1
  1794     06A4  309E               	movlw	158
  1795     06A5  00F1               	movwf	??_clcd_write
  1796     06A6                     u407:
  1797     06A6  0BF1               	decfsz	??_clcd_write,f
  1798     06A7  2EA6               	goto	u407
  1799     06A8  0BF2               	decfsz	??_clcd_write+1,f
  1800     06A9  2EA6               	goto	u407
  1801     06AA  0000               	nop
  1802     06AB                     l17:
  1803     06AB  0008               	return
  1804     06AC                     __end_of_clcd_write:
  1805     007E                     btemp	set	126	;btemp
  1806     007E                     wtemp0	set	126
  1807                           
  1808                           	psect	idloc
  1809                           
  1810                           ;Config register IDLOC0 @ 0x2000
  1811                           ;	unspecified, using default values
  1812     2000                     	org	8192
  1813     2000  3FFF               	dw	16383
  1814                           
  1815                           ;Config register IDLOC1 @ 0x2001
  1816                           ;	unspecified, using default values
  1817     2001                     	org	8193
  1818     2001  3FFF               	dw	16383
  1819                           
  1820                           ;Config register IDLOC2 @ 0x2002
  1821                           ;	unspecified, using default values
  1822     2002                     	org	8194
  1823     2002  3FFF               	dw	16383
  1824                           
  1825                           ;Config register IDLOC3 @ 0x2003
  1826                           ;	unspecified, using default values
  1827     2003                     	org	8195
  1828     2003  3FFF               	dw	16383
  1829                           
  1830                           	psect	config
  1831                           
  1832                           ;Config register CONFIG @ 0x2007
  1833                           ;	Oscillator Selection bits
  1834                           ;	FOSC = 0x3, unprogrammed default
  1835                           ;	Watchdog Timer Enable bit
  1836                           ;	WDTE = OFF, WDT disabled
  1837                           ;	Power-up Timer Enable bit
  1838                           ;	PWRTE = 0x1, unprogrammed default
  1839                           ;	Brown-out Reset Enable bit
  1840                           ;	BOREN = 0x1, unprogrammed default
  1841                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1842                           ;	LVP = 0x1, unprogrammed default
  1843                           ;	Data EEPROM Memory Code Protection bit
  1844                           ;	CPD = 0x1, unprogrammed default
  1845                           ;	Flash Program Memory Write Enable bits
  1846                           ;	WRT = 0x3, unprogrammed default
  1847                           ;	In-Circuit Debugger Mode bit
  1848                           ;	DEBUG = 0x1, unprogrammed default
  1849                           ;	Flash Program Memory Code Protection bit
  1850                           ;	CP = 0x1, unprogrammed default
  1851     2007                     	org	8199
  1852     2007  3FFB               	dw	16379

Data Sizes:
    Strings     40
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[6]), STR_2(CODE[17]), STR_3(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_display
    _read_matrix_keypad->_scan_keypad
    _init_config->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _display->_clcd_print
    _display->_clcd_putch
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4838
                                              9 COMMON     1     1      0
                            _display
                        _init_config
                 _read_matrix_keypad
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   2     2      0     135
                                              2 COMMON     2     2      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      60
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    2198
                         _clcd_print
                          _init_clcd
                 _init_matrix_keypad
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _display                                              3     3      0    2482
                                              6 COMMON     3     3      0
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    1098
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           2     1      1    1296
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     _clcd_print
       _clcd_write
     _clcd_putch
       _clcd_write
   _init_config
     _clcd_print
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
   _read_matrix_keypad
     _scan_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Oct 27 18:42:07 2023

                              pc 0002                   clcd_print@addr 0074                               l20 0749  
                             l23 05E0                               l32 0675                               l17 06AB  
                             l26 0601                               l52 06E6                               l55 0614  
                             l91 0762                               l92 076A                               l93 07F5  
                             l86 05F0                               l94 0776                               l95 0770  
                             u50 0762                               u51 0761                               u60 0768  
                             u61 0767                               u70 076E                               u71 076D  
                             u80 0774                               u81 0773                               u90 078C  
                             u91 078B                               fsr 0004               _init_matrix_keypad 05E1  
                            l100 078C                              l101 0794                              l110 07CA  
                            l102 07A0                              l111 07C4                              l103 079A  
                            l116 07E0                              l108 07B6                              l117 07E8  
                            l109 07BE                              l119 07EE                              l127 064D  
                            l801 07C2                              l811 07CE                              l741 05EA  
                            l821 07EC                              l813 07D2                              l911 0677  
                            l743 05ED                              l831 07F4                              l815 07E6  
                            l807 07C8                              l751 0750                              l921 068D  
                            l913 0681                              l745 05EE                              l737 05E1  
                            l761 076E                              l753 0754                              l923 0699  
                            l915 0684                              l931 06E7                              l747 05EF  
                            l739 05E9                              l827 07F2                              l771 077A  
                            l755 0768                              l925 069A                              l917 0685  
                            l941 0712                              l933 06EF                              l781 0798  
                            l773 077E                              l749 074A                              l927 069F  
                            l919 068A                              l951 073D                              l943 0715  
                            l935 06F6                              l791 07A4                              l775 0792  
                            l767 0774                              l855 062C                              l929 06A2  
                            l953 0744                              l945 071C                              l937 0706  
                            l961 05DB                              l793 07A8                              l881 064C  
                            l865 0639                              l857 0632                              l971 0669  
                            l963 05F2                              l947 0728                              l939 070B  
                            l955 05D6                              l795 07BC                              l787 079E  
                            l867 063E                              l859 0637                              l965 064F  
                            l981 06CE                              l973 06AD                              l949 072D  
                            l957 05D9                              l869 0643                              l877 0645  
                            l967 0657                              l975 06B2                              l983 06DE  
                            l959 05DA                              l991 060C                              l879 064A  
                            l969 0665                              l977 06BB                              l993 0615  
                            l979 06C4                              l995 061A                              l989 0602  
                            l997 0621                              _RB0 0030                              _RB1 0031  
                            _RB2 0032                              _RD0 0040                              _RD1 0041  
                            _RD2 0042                              _RE1 0049                              _RD3 0043  
                            u100 0792                              _RE2 004A                              u101 0791  
                            u110 0798                              u111 0797                              u200 07F2  
                            u120 079E                              u201 07F1                              u121 079D  
                            u130 07B6                              u131 07B5                              u300 06B2  
                            u140 07BC                              u220 0637                              u301 06B1  
                            u141 07BB                              u221 0636                              u150 07C2  
                            u230 063E                              u151 07C1                              u231 063D  
                            u160 07C8                              u240 0643                              u161 07C7  
                            u241 0642                              u170 07E0                              u250 064A  
                            u171 07DF                              u251 0649                              u260 067E  
                            u180 07E6                              u261 067A                              u317 06EB  
                            u181 07E5                              u190 07EC                              u407 06A6  
                            u327 06FA                              u191 07EB                              u337 0708  
                            u274 0681                              u290 0675                              u291 0674  
                            u347 071E                              u285 0691                              u357 072A  
                            u367 0738                              u377 0746                              u387 0687  
                            u397 069C                   clcd_putch@addr 0074                              fsr0 0004  
                 clcd_putch@data 0075              ?_init_matrix_keypad 0070                             l1019 06D6  
                           STR_1 002B                             STR_2 001A                             STR_3 0009  
                           _main 0615                             btemp 007E                             start 0000  
           ??_init_matrix_keypad 0070                   clcd_write@byte 0073                   clcd_write@mode 0070  
                          ?_main 0070                     ?_init_config 0070                            _PORTD 0008  
                          _TRISB 0086                            _TRISD 0088                            _nRBPU 040F  
                __end_of_display 06E7               _read_matrix_keypad 062B                            pclath 000A  
            ?_read_matrix_keypad 0070                            status 0003                            wtemp0 007E  
                   ?_scan_keypad 0070                  __initialization 07F6                     __end_of_main 062B  
           ??_read_matrix_keypad 0072                           ??_main 0079                           _TRISE1 0449  
                         _TRISE2 044A          _init_display_controller 06E7                        ??_display 0076  
                   __pdataCOMMON 007A          __end_of__initialization 07FC                   __pcstackCOMMON 0070  
      ??_init_display_controller 0074                       _clcd_print 064E                       _clcd_putch 05F1  
                     _clcd_write 0676                       __pmaintext 0615                       __stringtab 0003  
                        __ptext1 062B                          __ptext2 074A                          __ptext3 0602  
                        __ptext4 05E1                          __ptext5 05D6                          __ptext6 06E7  
                        __ptext7 06AC                          __ptext8 05F1                          __ptext9 064E  
                        _display 06AC  __end_of_init_display_controller 074A                __end_of_init_clcd 05E1  
                        main@key 0079             end_of_initialization 07FC                      ?_clcd_print 0074  
                    ?_clcd_putch 0074                      ?_clcd_write 0070                    clcd_print@str 0075  
                     display@key 0078                    __pidataCOMMON 05D5              start_initialization 07F6  
                   scan_keypad@i 0070           read_matrix_keypad@mode 0072           read_matrix_keypad@once 007A  
                  ??_init_config 0076                        ___latbits 0002                    ??_scan_keypad 0070  
                      __pstrings 0003                         ?_display 0070                        _init_clcd 05D6  
            __end_of_init_config 0615         ?_init_display_controller 0070                     ??_clcd_print 0075  
                   ??_clcd_putch 0075       __end_of_init_matrix_keypad 05F1                     ??_clcd_write 0071  
            __end_of_scan_keypad 07F6                      __stringbase 0008               __end_of_clcd_print 0676  
             __end_of_clcd_putch 0602               __end_of_clcd_write 06AC                       ?_init_clcd 0070  
          read_matrix_keypad@key 0073       __end_of_read_matrix_keypad 064E               __end_of__stringtab 0009  
                    _init_config 0602                         __ptext10 0676                      _scan_keypad 074A  
                    ??_init_clcd 0076                        stringcode 0003                         stringdir 0003  
                       stringtab 0003  
