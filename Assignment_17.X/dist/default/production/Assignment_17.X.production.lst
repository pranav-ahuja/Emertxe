

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Oct 30 15:39:50 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 18/08/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877A Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     0091                     	;# 
   111     0092                     	;# 
   112     0093                     	;# 
   113     0094                     	;# 
   114     0098                     	;# 
   115     0099                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     018C                     	;# 
   125     018D                     	;# 
   126     0000                     	;# 
   127     0001                     	;# 
   128     0002                     	;# 
   129     0003                     	;# 
   130     0004                     	;# 
   131     0005                     	;# 
   132     0006                     	;# 
   133     0007                     	;# 
   134     0008                     	;# 
   135     0009                     	;# 
   136     000A                     	;# 
   137     000B                     	;# 
   138     000C                     	;# 
   139     000D                     	;# 
   140     000E                     	;# 
   141     000E                     	;# 
   142     000F                     	;# 
   143     0010                     	;# 
   144     0011                     	;# 
   145     0012                     	;# 
   146     0013                     	;# 
   147     0014                     	;# 
   148     0015                     	;# 
   149     0015                     	;# 
   150     0016                     	;# 
   151     0017                     	;# 
   152     0018                     	;# 
   153     0019                     	;# 
   154     001A                     	;# 
   155     001B                     	;# 
   156     001B                     	;# 
   157     001C                     	;# 
   158     001D                     	;# 
   159     001E                     	;# 
   160     001F                     	;# 
   161     0081                     	;# 
   162     0085                     	;# 
   163     0086                     	;# 
   164     0087                     	;# 
   165     0088                     	;# 
   166     0089                     	;# 
   167     008C                     	;# 
   168     008D                     	;# 
   169     008E                     	;# 
   170     0091                     	;# 
   171     0092                     	;# 
   172     0093                     	;# 
   173     0094                     	;# 
   174     0098                     	;# 
   175     0099                     	;# 
   176     009C                     	;# 
   177     009D                     	;# 
   178     009E                     	;# 
   179     009F                     	;# 
   180     010C                     	;# 
   181     010D                     	;# 
   182     010E                     	;# 
   183     010F                     	;# 
   184     018C                     	;# 
   185     018D                     	;# 
   186     0000                     	;# 
   187     0001                     	;# 
   188     0002                     	;# 
   189     0003                     	;# 
   190     0004                     	;# 
   191     0005                     	;# 
   192     0006                     	;# 
   193     0007                     	;# 
   194     0008                     	;# 
   195     0009                     	;# 
   196     000A                     	;# 
   197     000B                     	;# 
   198     000C                     	;# 
   199     000D                     	;# 
   200     000E                     	;# 
   201     000E                     	;# 
   202     000F                     	;# 
   203     0010                     	;# 
   204     0011                     	;# 
   205     0012                     	;# 
   206     0013                     	;# 
   207     0014                     	;# 
   208     0015                     	;# 
   209     0015                     	;# 
   210     0016                     	;# 
   211     0017                     	;# 
   212     0018                     	;# 
   213     0019                     	;# 
   214     001A                     	;# 
   215     001B                     	;# 
   216     001B                     	;# 
   217     001C                     	;# 
   218     001D                     	;# 
   219     001E                     	;# 
   220     001F                     	;# 
   221     0081                     	;# 
   222     0085                     	;# 
   223     0086                     	;# 
   224     0087                     	;# 
   225     0088                     	;# 
   226     0089                     	;# 
   227     008C                     	;# 
   228     008D                     	;# 
   229     008E                     	;# 
   230     0091                     	;# 
   231     0092                     	;# 
   232     0093                     	;# 
   233     0094                     	;# 
   234     0098                     	;# 
   235     0099                     	;# 
   236     009C                     	;# 
   237     009D                     	;# 
   238     009E                     	;# 
   239     009F                     	;# 
   240     010C                     	;# 
   241     010D                     	;# 
   242     010E                     	;# 
   243     010F                     	;# 
   244     018C                     	;# 
   245     018D                     	;# 
   246     0000                     	;# 
   247     0001                     	;# 
   248     0002                     	;# 
   249     0003                     	;# 
   250     0004                     	;# 
   251     0005                     	;# 
   252     0006                     	;# 
   253     0007                     	;# 
   254     0008                     	;# 
   255     0009                     	;# 
   256     000A                     	;# 
   257     000B                     	;# 
   258     000C                     	;# 
   259     000D                     	;# 
   260     000E                     	;# 
   261     000E                     	;# 
   262     000F                     	;# 
   263     0010                     	;# 
   264     0011                     	;# 
   265     0012                     	;# 
   266     0013                     	;# 
   267     0014                     	;# 
   268     0015                     	;# 
   269     0015                     	;# 
   270     0016                     	;# 
   271     0017                     	;# 
   272     0018                     	;# 
   273     0019                     	;# 
   274     001A                     	;# 
   275     001B                     	;# 
   276     001B                     	;# 
   277     001C                     	;# 
   278     001D                     	;# 
   279     001E                     	;# 
   280     001F                     	;# 
   281     0081                     	;# 
   282     0085                     	;# 
   283     0086                     	;# 
   284     0087                     	;# 
   285     0088                     	;# 
   286     0089                     	;# 
   287     008C                     	;# 
   288     008D                     	;# 
   289     008E                     	;# 
   290     0091                     	;# 
   291     0092                     	;# 
   292     0093                     	;# 
   293     0094                     	;# 
   294     0098                     	;# 
   295     0099                     	;# 
   296     009C                     	;# 
   297     009D                     	;# 
   298     009E                     	;# 
   299     009F                     	;# 
   300     010C                     	;# 
   301     010D                     	;# 
   302     010E                     	;# 
   303     010F                     	;# 
   304     018C                     	;# 
   305     018D                     	;# 
   306     0000                     	;# 
   307     0001                     	;# 
   308     0002                     	;# 
   309     0003                     	;# 
   310     0004                     	;# 
   311     0005                     	;# 
   312     0006                     	;# 
   313     0007                     	;# 
   314     0008                     	;# 
   315     0009                     	;# 
   316     000A                     	;# 
   317     000B                     	;# 
   318     000C                     	;# 
   319     000D                     	;# 
   320     000E                     	;# 
   321     000E                     	;# 
   322     000F                     	;# 
   323     0010                     	;# 
   324     0011                     	;# 
   325     0012                     	;# 
   326     0013                     	;# 
   327     0014                     	;# 
   328     0015                     	;# 
   329     0015                     	;# 
   330     0016                     	;# 
   331     0017                     	;# 
   332     0018                     	;# 
   333     0019                     	;# 
   334     001A                     	;# 
   335     001B                     	;# 
   336     001B                     	;# 
   337     001C                     	;# 
   338     001D                     	;# 
   339     001E                     	;# 
   340     001F                     	;# 
   341     0081                     	;# 
   342     0085                     	;# 
   343     0086                     	;# 
   344     0087                     	;# 
   345     0088                     	;# 
   346     0089                     	;# 
   347     008C                     	;# 
   348     008D                     	;# 
   349     008E                     	;# 
   350     0091                     	;# 
   351     0092                     	;# 
   352     0093                     	;# 
   353     0094                     	;# 
   354     0098                     	;# 
   355     0099                     	;# 
   356     009C                     	;# 
   357     009D                     	;# 
   358     009E                     	;# 
   359     009F                     	;# 
   360     010C                     	;# 
   361     010D                     	;# 
   362     010E                     	;# 
   363     010F                     	;# 
   364     018C                     	;# 
   365     018D                     	;# 
   366     0000                     	;# 
   367     0001                     	;# 
   368     0002                     	;# 
   369     0003                     	;# 
   370     0004                     	;# 
   371     0005                     	;# 
   372     0006                     	;# 
   373     0007                     	;# 
   374     0008                     	;# 
   375     0009                     	;# 
   376     000A                     	;# 
   377     000B                     	;# 
   378     000C                     	;# 
   379     000D                     	;# 
   380     000E                     	;# 
   381     000E                     	;# 
   382     000F                     	;# 
   383     0010                     	;# 
   384     0011                     	;# 
   385     0012                     	;# 
   386     0013                     	;# 
   387     0014                     	;# 
   388     0015                     	;# 
   389     0015                     	;# 
   390     0016                     	;# 
   391     0017                     	;# 
   392     0018                     	;# 
   393     0019                     	;# 
   394     001A                     	;# 
   395     001B                     	;# 
   396     001B                     	;# 
   397     001C                     	;# 
   398     001D                     	;# 
   399     001E                     	;# 
   400     001F                     	;# 
   401     0081                     	;# 
   402     0085                     	;# 
   403     0086                     	;# 
   404     0087                     	;# 
   405     0088                     	;# 
   406     0089                     	;# 
   407     008C                     	;# 
   408     008D                     	;# 
   409     008E                     	;# 
   410     0091                     	;# 
   411     0092                     	;# 
   412     0093                     	;# 
   413     0094                     	;# 
   414     0098                     	;# 
   415     0099                     	;# 
   416     009C                     	;# 
   417     009D                     	;# 
   418     009E                     	;# 
   419     009F                     	;# 
   420     010C                     	;# 
   421     010D                     	;# 
   422     010E                     	;# 
   423     010F                     	;# 
   424     018C                     	;# 
   425     018D                     	;# 
   426                           
   427                           	psect	idataBANK0
   428     06B0                     __pidataBANK0:
   429                           
   430                           ;initializer for main@once
   431     06B0  3401               	retlw	1
   432     06B1  3400               	retlw	0
   433                           
   434                           ;initializer for read_matrix_keypad@once
   435     06B2  3401               	retlw	1
   436     0001                     _TMR0	set	1
   437     0008                     _PORTD	set	8
   438     0032                     _RB2	set	50
   439     0031                     _RB1	set	49
   440     0030                     _RB0	set	48
   441     0040                     _RD0	set	64
   442     0041                     _RD1	set	65
   443     0042                     _RD2	set	66
   444     0043                     _RD3	set	67
   445     005A                     _TMR0IF	set	90
   446     005F                     _GIE	set	95
   447     0049                     _RE1	set	73
   448     004A                     _RE2	set	74
   449     0086                     _TRISB	set	134
   450     0088                     _TRISD	set	136
   451     040B                     _PSA	set	1035
   452     040D                     _T0CS	set	1037
   453     040F                     _nRBPU	set	1039
   454     0449                     _TRISE1	set	1097
   455     044A                     _TRISE2	set	1098
   456                           
   457                           	psect	strings
   458     0500                     __pstrings:
   459     0500                     stringtab:
   460     0500                     __stringtab:
   461     0500                     stringcode:	
   462                           ;	String table - string pointers are 1 byte each
   463                           
   464     0500                     stringdir:
   465     0500  3005               	movlw	high stringdir
   466     0501  008A               	movwf	10
   467     0502  0804               	movf	4,w
   468     0503  0A84               	incf	4,f
   469     0504  0782               	addwf	2,f
   470     0505                     __stringbase:
   471     0505  3400               	retlw	0
   472     0506                     __end_of__stringtab:
   473     0506                     STR_2:
   474     0506  3453               	retlw	83	;'S'
   475     0507  3463               	retlw	99	;'c'
   476     0508  3472               	retlw	114	;'r'
   477     0509  346F               	retlw	111	;'o'
   478     050A  346C               	retlw	108	;'l'
   479     050B  346C               	retlw	108	;'l'
   480     050C  3469               	retlw	105	;'i'
   481     050D  346E               	retlw	110	;'n'
   482     050E  3467               	retlw	103	;'g'
   483     050F  3420               	retlw	32	;' '
   484     0510  344D               	retlw	77	;'M'
   485     0511  3461               	retlw	97	;'a'
   486     0512  3472               	retlw	114	;'r'
   487     0513  3471               	retlw	113	;'q'
   488     0514  3475               	retlw	117	;'u'
   489     0515  3465               	retlw	101	;'e'
   490     0516  3400               	retlw	0
   491     0517                     STR_4:
   492     0517  3445               	retlw	69	;'E'
   493     0518  346E               	retlw	110	;'n'
   494     0519  3474               	retlw	116	;'t'
   495     051A  3465               	retlw	101	;'e'
   496     051B  3472               	retlw	114	;'r'
   497     051C  3420               	retlw	32	;' '
   498     051D  344E               	retlw	78	;'N'
   499     051E  3465               	retlw	101	;'e'
   500     051F  3477               	retlw	119	;'w'
   501     0520  3420               	retlw	32	;' '
   502     0521  344E               	retlw	78	;'N'
   503     0522  3475               	retlw	117	;'u'
   504     0523  346D               	retlw	109	;'m'
   505     0524  3462               	retlw	98	;'b'
   506     0525  3465               	retlw	101	;'e'
   507     0526  3472               	retlw	114	;'r'
   508     0527  3400               	retlw	0
   509     0528                     STR_1:
   510     0528  3465               	retlw	101	;'e'
   511     0529  346E               	retlw	110	;'n'
   512     052A  3474               	retlw	116	;'t'
   513     052B  3465               	retlw	101	;'e'
   514     052C  3472               	retlw	114	;'r'
   515     052D  3420               	retlw	32	;' '
   516     052E  3474               	retlw	116	;'t'
   517     052F  3468               	retlw	104	;'h'
   518     0530  3465               	retlw	101	;'e'
   519     0531  3420               	retlw	32	;' '
   520     0532  346E               	retlw	110	;'n'
   521     0533  3475               	retlw	117	;'u'
   522     0534  346D               	retlw	109	;'m'
   523     0535  3462               	retlw	98	;'b'
   524     0536  3465               	retlw	101	;'e'
   525     0537  3472               	retlw	114	;'r'
   526     0538  3400               	retlw	0
   527     0539                     STR_3:
   528     0539  3452               	retlw	82	;'R'
   529     053A  3465               	retlw	101	;'e'
   530     053B  346C               	retlw	108	;'l'
   531     053C  3465               	retlw	101	;'e'
   532     053D  3461               	retlw	97	;'a'
   533     053E  3473               	retlw	115	;'s'
   534     053F  3465               	retlw	101	;'e'
   535     0540  3420               	retlw	32	;' '
   536     0541  3473               	retlw	115	;'s'
   537     0542  3474               	retlw	116	;'t'
   538     0543  346F               	retlw	111	;'o'
   539     0544  3470               	retlw	112	;'p'
   540     0545  3420               	retlw	32	;' '
   541     0546  346B               	retlw	107	;'k'
   542     0547  3465               	retlw	101	;'e'
   543     0548  3479               	retlw	121	;'y'
   544     0549  3400               	retlw	0
   545     054A                     STR_5:
   546     054A  344D               	retlw	77	;'M'
   547     054B  3473               	retlw	115	;'s'
   548     054C  3467               	retlw	103	;'g'
   549     054D  343A               	retlw	58	;':'
   550     054E  3400               	retlw	0
   551                           
   552                           	psect	cinit
   553     0011                     start_initialization:	
   554                           ; #config settings
   555                           
   556     0011                     __initialization:
   557                           
   558                           ; Initialize objects allocated to BANK0
   559     0011  120A  118A  26B0  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   560     0016  00DA               	movwf	__pdataBANK0& (0+127)
   561     0017  120A  118A  26B1  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   562     001C  00DB               	movwf	(__pdataBANK0+1)& (0+127)
   563     001D  120A  118A  26B2  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   564     0022  00DC               	movwf	(__pdataBANK0+2)& (0+127)
   565                           
   566                           ; Clear objects allocated to BANK0
   567     0023  1383               	bcf	3,7	;select IRP bank0
   568     0024  3020               	movlw	low __pbssBANK0
   569     0025  0084               	movwf	4
   570     0026  3048               	movlw	low (__pbssBANK0+40)
   571     0027  120A  118A  26A8  120A  118A  	fcall	clear_ram0
   572                           
   573                           ; Clear objects allocated to COMMON
   574     002C  01FB               	clrf	__pbssCOMMON& (0+127)
   575     002D  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   576     002E                     end_of_initialization:	
   577                           ;End of C runtime variable initialization code
   578                           
   579     002E                     __end_of__initialization:
   580     002E  0183               	clrf	3
   581     002F  120A  118A  2832   	ljmp	_main	;jump to C main() function
   582                           
   583                           	psect	bssCOMMON
   584     007B                     __pbssCOMMON:
   585     007B                     _sigma:
   586     007B                     	ds	2
   587                           
   588                           	psect	bssBANK0
   589     0020                     __pbssBANK0:
   590     0020                     main@arr:
   591     0020                     	ds	16
   592     0030                     main@pwd:
   593     0030                     	ds	8
   594     0038                     isr@count:
   595     0038                     	ds	2
   596     003A                     main@char_pos:
   597     003A                     	ds	2
   598     003C                     main@pos:
   599     003C                     	ds	2
   600     003E                     main@temp:
   601     003E                     	ds	2
   602     0040                     main@count:
   603     0040                     	ds	2
   604     0042                     main@scroll:
   605     0042                     	ds	2
   606     0044                     main@count_letter:
   607     0044                     	ds	2
   608     0046                     main@edit_key:
   609     0046                     	ds	2
   610                           
   611                           	psect	dataBANK0
   612     005A                     __pdataBANK0:
   613     005A                     main@once:
   614     005A                     	ds	2
   615     005C                     read_matrix_keypad@once:
   616     005C                     	ds	1
   617                           
   618                           	psect	clrtext
   619     06A8                     clear_ram0:	
   620                           ;	Called with FSR containing the base address, and
   621                           ;	W with the last address+1
   622                           
   623     06A8  0064               	clrwdt	;clear the watchdog before getting into this loop
   624     06A9                     clrloop0:
   625     06A9  0180               	clrf	0	;clear RAM location pointed to by FSR
   626     06AA  0A84               	incf	4,f	;increment pointer
   627     06AB  0604               	xorwf	4,w	;XOR with final address
   628     06AC  1903               	btfsc	3,2	;have we reached the end yet?
   629     06AD  3400               	retlw	0	;all done for this memory range, return
   630     06AE  0604               	xorwf	4,w	;XOR again to restore value
   631     06AF  2EA9               	goto	clrloop0	;do the next byte
   632                           
   633                           	psect	cstackCOMMON
   634     0070                     __pcstackCOMMON:
   635     0070                     ?_init_clcd:
   636     0070                     ?_init_matrix_keypad:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?_init_timer0:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?_read_matrix_keypad:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ?_init_config:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ?_main:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ?_isr:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0070                     ?_init_display_controller:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ?_scan_keypad:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?___awdiv:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ___awdiv@divisor:	
   664                           ; 2 bytes @ 0x0
   665                           
   666                           
   667                           ; 2 bytes @ 0x0
   668     0070                     	ds	2
   669     0072                     ___awdiv@dividend:
   670                           
   671                           ; 2 bytes @ 0x2
   672     0072                     	ds	2
   673     0074                     ??___awdiv:
   674     0074                     ___awdiv@counter:	
   675                           ; 1 bytes @ 0x4
   676                           
   677                           
   678                           ; 1 bytes @ 0x4
   679     0074                     	ds	1
   680     0075                     ___awdiv@sign:
   681                           
   682                           ; 1 bytes @ 0x5
   683     0075                     	ds	1
   684     0076                     ___awdiv@quotient:
   685                           
   686                           ; 2 bytes @ 0x6
   687     0076                     	ds	2
   688     0078                     ??_isr:
   689                           
   690                           ; 1 bytes @ 0x8
   691     0078                     	ds	3
   692                           
   693                           	psect	cstackBANK0
   694     0048                     __pcstackBANK0:
   695     0048                     ??_init_matrix_keypad:
   696     0048                     ??_init_timer0:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0048                     ?_clcd_write:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0048                     ?_clcd_write@clcd$F109:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0048                     ??_scan_keypad:	
   706                           ; 1 bytes @ 0x0
   707                           
   708     0048                     clcd_write@mode:	
   709                           ; 1 bytes @ 0x0
   710                           
   711     0048                     clcd_write@clcd$F109@mode:	
   712                           ; 1 bytes @ 0x0
   713                           
   714     0048                     scan_keypad@i:	
   715                           ; 1 bytes @ 0x0
   716                           
   717                           
   718                           ; 2 bytes @ 0x0
   719     0048                     	ds	1
   720     0049                     ??_clcd_write:
   721     0049                     ??_clcd_write@clcd$F109:	
   722                           ; 1 bytes @ 0x1
   723                           
   724                           
   725                           ; 1 bytes @ 0x1
   726     0049                     	ds	1
   727     004A                     ??_read_matrix_keypad:
   728     004A                     read_matrix_keypad@mode:	
   729                           ; 1 bytes @ 0x2
   730                           
   731                           
   732                           ; 1 bytes @ 0x2
   733     004A                     	ds	1
   734     004B                     clcd_write@byte:
   735     004B                     clcd_write@clcd$F109@byte:	
   736                           ; 1 bytes @ 0x3
   737                           
   738     004B                     read_matrix_keypad@key:	
   739                           ; 1 bytes @ 0x3
   740                           
   741                           
   742                           ; 1 bytes @ 0x3
   743     004B                     	ds	1
   744     004C                     ?_clcd_print:
   745     004C                     ?_clcd_putch:	
   746                           ; 1 bytes @ 0x4
   747                           
   748     004C                     ??_init_display_controller:	
   749                           ; 1 bytes @ 0x4
   750                           
   751     004C                     clcd_putch@addr:	
   752                           ; 1 bytes @ 0x4
   753                           
   754     004C                     clcd_print@addr:	
   755                           ; 1 bytes @ 0x4
   756                           
   757                           
   758                           ; 1 bytes @ 0x4
   759     004C                     	ds	1
   760     004D                     ??_clcd_print:
   761     004D                     ??_clcd_putch:	
   762                           ; 1 bytes @ 0x5
   763                           
   764     004D                     clcd_putch@data:	
   765                           ; 1 bytes @ 0x5
   766                           
   767     004D                     clcd_print@str:	
   768                           ; 1 bytes @ 0x5
   769                           
   770                           
   771                           ; 1 bytes @ 0x5
   772     004D                     	ds	1
   773     004E                     ??_init_clcd:
   774     004E                     ??_init_config:	
   775                           ; 1 bytes @ 0x6
   776                           
   777     004E                     ??_main:	
   778                           ; 1 bytes @ 0x6
   779                           
   780                           
   781                           ; 1 bytes @ 0x6
   782     004E                     	ds	2
   783     0050                     main@i:
   784                           
   785                           ; 4 bytes @ 0x8
   786     0050                     	ds	4
   787     0054                     main@i_87:
   788                           
   789                           ; 4 bytes @ 0xC
   790     0054                     	ds	4
   791     0058                     main@cur_key:
   792                           
   793                           ; 1 bytes @ 0x10
   794     0058                     	ds	1
   795     0059                     main@key:
   796                           
   797                           ; 1 bytes @ 0x11
   798     0059                     	ds	1
   799                           
   800                           	psect	maintext
   801     0032                     __pmaintext:	
   802 ;;
   803 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   804 ;;
   805 ;; *************** function _main *****************
   806 ;; Defined at:
   807 ;;		line 43 in file "main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  i               4   12[BANK0 ] unsigned long 
   812 ;;  i               4    8[BANK0 ] unsigned long 
   813 ;;  key             1   17[BANK0 ] unsigned char 
   814 ;;  cur_key         1   16[BANK0 ] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : B00/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         0      10       0       0       0
   826 ;;      Temps:          0       2       0       0       0
   827 ;;      Totals:         0      12       0       0       0
   828 ;;Total ram usage:       12 bytes
   829 ;; Hardware stack levels required when called: 6
   830 ;; This function calls:
   831 ;;		_clcd_print
   832 ;;		_clcd_putch
   833 ;;		_clcd_write
   834 ;;		_init_config
   835 ;;		_read_matrix_keypad
   836 ;; This function is called by:
   837 ;;		Startup code after reset
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841     0032                     _main:	
   842                           ;psect for function _main
   843                           
   844     0032                     l1484:	
   845                           ;incstack = 0
   846                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   847                           
   848                           
   849                           ;main.c: 44:         };main.c: 45:         if(cur_key == 1 && scroll == 1);main.c: 46:  
      +                                 {;main.c: 47: ;main.c: 49: 
   850     0032  120A  118A  2654  120A  118A  	fcall	_init_config
   851     0037                     l1486:
   852                           
   853                           ;main.c: 53:                 if(char_pos < 0)
   854     0037  3001               	movlw	1
   855     0038  120A  118A  262D  120A  118A  	fcall	_read_matrix_keypad
   856     003D  1283               	bcf	3,5	;RP0=0, select bank0
   857     003E  1303               	bcf	3,6	;RP1=0, select bank0
   858     003F  00D9               	movwf	main@key
   859     0040                     l1488:
   860                           
   861                           ;main.c: 55:                 if(char_pos > 15)
   862     0040  0A59               	incf	main@key,w
   863     0041  1903               	btfsc	3,2
   864     0042  2844               	goto	u1141
   865     0043  2845               	goto	u1140
   866     0044                     u1141:
   867     0044  2847               	goto	l1492
   868     0045                     u1140:
   869     0045                     l1490:
   870                           
   871                           ;main.c: 56:                     char_pos = char_pos - 15;;main.c: 57:                 c
      +                          lcd_putch(arr[count],(0xC0 + char_pos));
   872     0045  0859               	movf	main@key,w
   873     0046  00D8               	movwf	main@cur_key
   874     0047                     l1492:
   875                           
   876                           ;main.c: 59:             pos--;
   877     0047  0358               	decf	main@cur_key,w
   878     0048  1D03               	btfss	3,2
   879     0049  284B               	goto	u1151
   880     004A  284C               	goto	u1150
   881     004B                     u1151:
   882     004B  28E6               	goto	l1530
   883     004C                     u1150:
   884     004C                     l1494:
   885     004C  0342               	decf	main@scroll,w
   886     004D  0443               	iorwf	main@scroll+1,w
   887     004E  1D03               	btfss	3,2
   888     004F  2851               	goto	u1161
   889     0050  2852               	goto	u1160
   890     0051                     u1161:
   891     0051  28E6               	goto	l1530
   892     0052                     u1160:
   893     0052                     l1496:
   894                           
   895                           ;main.c: 60:             if(pos < 0);main.c: 62: 
   896     0052  01C8               	clrf	clcd_write@mode
   897     0053  3001               	movlw	1
   898     0054  120A  118A  254F  120A  118A  	fcall	_clcd_write
   899     0059                     l1498:
   900                           
   901                           ;main.c: 64:         }
   902     0059  1283               	bcf	3,5	;RP0=0, select bank0
   903     005A  1303               	bcf	3,6	;RP1=0, select bank0
   904     005B  01C0               	clrf	main@count
   905     005C  01C1               	clrf	main@count+1
   906     005D  289E               	goto	l1514
   907     005E                     l1500:
   908                           
   909                           ;main.c: 65:         if(cur_key == 2 && scroll == 1);main.c: 66:         {
   910     005E  1283               	bcf	3,5	;RP0=0, select bank0
   911     005F  1303               	bcf	3,6	;RP1=0, select bank0
   912     0060  0840               	movf	main@count,w
   913     0061  073C               	addwf	main@pos,w
   914     0062  00BA               	movwf	main@char_pos
   915     0063  0841               	movf	main@count+1,w
   916     0064  1803               	skipnc
   917     0065  0A41               	incf	main@count+1,w
   918     0066  073D               	addwf	main@pos+1,w
   919     0067  00BB               	movwf	main@char_pos+1
   920     0068                     l1502:
   921                           
   922                           ;main.c: 67:             clcd_write(0x01,0);
   923     0068  1FBB               	btfss	main@char_pos+1,7
   924     0069  286B               	goto	u1171
   925     006A  286C               	goto	u1170
   926     006B                     u1171:
   927     006B  2870               	goto	l1506
   928     006C                     u1170:
   929     006C                     l1504:
   930                           
   931                           ;main.c: 68: 
   932     006C  300F               	movlw	15
   933     006D  00BA               	movwf	main@char_pos
   934     006E  3000               	movlw	0
   935     006F  00BB               	movwf	main@char_pos+1
   936     0070                     l1506:
   937                           
   938                           ;main.c: 69:             for(count = 0; count <= count_letter; count++)
   939     0070  083B               	movf	main@char_pos+1,w
   940     0071  3A80               	xorlw	128
   941     0072  00FF               	movwf	btemp+1
   942     0073  3080               	movlw	128
   943     0074  027F               	subwf	btemp+1,w
   944     0075  1D03               	skipz
   945     0076  2879               	goto	u1185
   946     0077  3010               	movlw	16
   947     0078  023A               	subwf	main@char_pos,w
   948     0079                     u1185:
   949     0079  1C03               	skipc
   950     007A  287C               	goto	u1181
   951     007B  287D               	goto	u1180
   952     007C                     u1181:
   953     007C  2887               	goto	l1510
   954     007D                     u1180:
   955     007D                     l1508:
   956                           
   957                           ;main.c: 70:             {
   958     007D  1283               	bcf	3,5	;RP0=0, select bank0
   959     007E  1303               	bcf	3,6	;RP1=0, select bank0
   960     007F  083A               	movf	main@char_pos,w
   961     0080  3EF1               	addlw	241
   962     0081  00BA               	movwf	main@char_pos
   963     0082  083B               	movf	main@char_pos+1,w
   964     0083  1803               	skipnc
   965     0084  3E01               	addlw	1
   966     0085  3EFF               	addlw	255
   967     0086  00BB               	movwf	main@char_pos+1
   968     0087                     l1510:
   969                           
   970                           ;main.c: 71:                 char_pos = pos + count;
   971     0087  1283               	bcf	3,5	;RP0=0, select bank0
   972     0088  1303               	bcf	3,6	;RP1=0, select bank0
   973     0089  083A               	movf	main@char_pos,w
   974     008A  3EC0               	addlw	192
   975     008B  00CC               	movwf	clcd_putch@addr
   976     008C  0840               	movf	main@count,w
   977     008D  3E20               	addlw	(low (main@arr| 0))& (0+255)
   978     008E  0084               	movwf	4
   979     008F  1383               	bcf	3,7	;select IRP bank0
   980     0090  0800               	movf	0,w
   981     0091  120A  118A  266F  120A  118A  	fcall	_clcd_putch
   982     0096                     l1512:
   983                           
   984                           ;main.c: 72:                 if(char_pos < 0)
   985     0096  3001               	movlw	1
   986     0097  1283               	bcf	3,5	;RP0=0, select bank0
   987     0098  1303               	bcf	3,6	;RP1=0, select bank0
   988     0099  07C0               	addwf	main@count,f
   989     009A  1803               	skipnc
   990     009B  0AC1               	incf	main@count+1,f
   991     009C  3000               	movlw	0
   992     009D  07C1               	addwf	main@count+1,f
   993     009E                     l1514:
   994     009E  0845               	movf	main@count_letter+1,w
   995     009F  3A80               	xorlw	128
   996     00A0  00CE               	movwf	??_main
   997     00A1  0841               	movf	main@count+1,w
   998     00A2  3A80               	xorlw	128
   999     00A3  024E               	subwf	??_main,w
  1000     00A4  1D03               	skipz
  1001     00A5  28A8               	goto	u1195
  1002     00A6  0840               	movf	main@count,w
  1003     00A7  0244               	subwf	main@count_letter,w
  1004     00A8                     u1195:
  1005     00A8  1803               	skipnc
  1006     00A9  28AB               	goto	u1191
  1007     00AA  28AC               	goto	u1190
  1008     00AB                     u1191:
  1009     00AB  285E               	goto	l1500
  1010     00AC                     u1190:
  1011     00AC                     l1516:
  1012                           
  1013                           ;main.c: 73:                     char_pos = 15;
  1014     00AC  30FF               	movlw	255
  1015     00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1016     00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1017     00AF  07BC               	addwf	main@pos,f
  1018     00B0  1803               	skipnc
  1019     00B1  0ABD               	incf	main@pos+1,f
  1020     00B2  30FF               	movlw	255
  1021     00B3  07BD               	addwf	main@pos+1,f
  1022     00B4                     l1518:
  1023                           
  1024                           ;main.c: 74:                 if(char_pos > 15)
  1025     00B4  1FBD               	btfss	main@pos+1,7
  1026     00B5  28B7               	goto	u1201
  1027     00B6  28B8               	goto	u1200
  1028     00B7                     u1201:
  1029     00B7  28BC               	goto	l63
  1030     00B8                     u1200:
  1031     00B8                     l1520:
  1032                           
  1033                           ;main.c: 75:                     char_pos = char_pos - 15;
  1034     00B8  300F               	movlw	15
  1035     00B9  00BC               	movwf	main@pos
  1036     00BA  3000               	movlw	0
  1037     00BB  00BD               	movwf	main@pos+1
  1038     00BC                     l63:
  1039                           
  1040                           ;main.c: 77:             }
  1041     00BC  3000               	movlw	0
  1042     00BD  00D3               	movwf	main@i+3
  1043     00BE  3000               	movlw	0
  1044     00BF  00D2               	movwf	main@i+2
  1045     00C0  3000               	movlw	0
  1046     00C1  00D1               	movwf	main@i+1
  1047     00C2  3000               	movlw	0
  1048     00C3  00D0               	movwf	main@i
  1049     00C4                     l1526:
  1050     00C4  3001               	movlw	1
  1051     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1052     00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1053     00C7  07D0               	addwf	main@i,f
  1054     00C8  3000               	movlw	0
  1055     00C9  1803               	skipnc
  1056     00CA  3001               	movlw	1
  1057     00CB  07D1               	addwf	main@i+1,f
  1058     00CC  3000               	movlw	0
  1059     00CD  1803               	skipnc
  1060     00CE  3001               	movlw	1
  1061     00CF  07D2               	addwf	main@i+2,f
  1062     00D0  3000               	movlw	0
  1063     00D1  1803               	skipnc
  1064     00D2  3001               	movlw	1
  1065     00D3  07D3               	addwf	main@i+3,f
  1066     00D4                     l1528:
  1067     00D4  0853               	movf	main@i+3,w
  1068     00D5  1D03               	btfss	3,2
  1069     00D6  28E6               	goto	u1210
  1070     00D7  0852               	movf	main@i+2,w
  1071     00D8  1D03               	btfss	3,2
  1072     00D9  28E6               	goto	u1210
  1073     00DA  309C               	movlw	156
  1074     00DB  0251               	subwf	main@i+1,w
  1075     00DC  1D03               	skipz
  1076     00DD  28E2               	goto	u1213
  1077     00DE  3040               	movlw	64
  1078     00DF  0250               	subwf	main@i,w
  1079     00E0  1D03               	skipz
  1080     00E1  28E2               	goto	u1213
  1081     00E2                     u1213:
  1082     00E2  1C03               	btfss	3,0
  1083     00E3  28E5               	goto	u1211
  1084     00E4  28E6               	goto	u1210
  1085     00E5                     u1211:
  1086     00E5  28C4               	goto	l1526
  1087     00E6                     u1210:
  1088     00E6                     l1530:
  1089                           
  1090                           ;main.c: 79:             if(pos > 15)
  1091     00E6  3002               	movlw	2
  1092     00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1093     00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1094     00E9  0658               	xorwf	main@cur_key,w
  1095     00EA  1D03               	btfss	3,2
  1096     00EB  28ED               	goto	u1221
  1097     00EC  28EE               	goto	u1220
  1098     00ED                     u1221:
  1099     00ED  2993               	goto	l1570
  1100     00EE                     u1220:
  1101     00EE                     l1532:
  1102     00EE  0342               	decf	main@scroll,w
  1103     00EF  0443               	iorwf	main@scroll+1,w
  1104     00F0  1D03               	btfss	3,2
  1105     00F1  28F3               	goto	u1231
  1106     00F2  28F4               	goto	u1230
  1107     00F3                     u1231:
  1108     00F3  2993               	goto	l1570
  1109     00F4                     u1230:
  1110     00F4                     l1534:
  1111                           
  1112                           ;main.c: 80:                 pos = 0;;main.c: 81: 
  1113     00F4  01C8               	clrf	clcd_write@mode
  1114     00F5  3001               	movlw	1
  1115     00F6  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1116     00FB                     l1536:
  1117                           
  1118                           ;main.c: 83:         }
  1119     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1120     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1121     00FD  01C0               	clrf	main@count
  1122     00FE  01C1               	clrf	main@count+1
  1123     00FF  2940               	goto	l1552
  1124     0100                     l1538:
  1125                           
  1126                           ;main.c: 84: ;main.c: 85:         if(key == 1 && edit_key == 1)
  1127     0100  1283               	bcf	3,5	;RP0=0, select bank0
  1128     0101  1303               	bcf	3,6	;RP1=0, select bank0
  1129     0102  0840               	movf	main@count,w
  1130     0103  073C               	addwf	main@pos,w
  1131     0104  00BA               	movwf	main@char_pos
  1132     0105  0841               	movf	main@count+1,w
  1133     0106  1803               	skipnc
  1134     0107  0A41               	incf	main@count+1,w
  1135     0108  073D               	addwf	main@pos+1,w
  1136     0109  00BB               	movwf	main@char_pos+1
  1137     010A                     l1540:
  1138                           
  1139                           ;main.c: 86:         {
  1140     010A  1FBB               	btfss	main@char_pos+1,7
  1141     010B  290D               	goto	u1241
  1142     010C  290E               	goto	u1240
  1143     010D                     u1241:
  1144     010D  2912               	goto	l1544
  1145     010E                     u1240:
  1146     010E                     l1542:
  1147                           
  1148                           ;main.c: 87:             arr[count_letter] = arr[count_letter] + 1;
  1149     010E  300F               	movlw	15
  1150     010F  00BA               	movwf	main@char_pos
  1151     0110  3000               	movlw	0
  1152     0111  00BB               	movwf	main@char_pos+1
  1153     0112                     l1544:
  1154                           
  1155                           ;main.c: 88:             if(arr[count_letter] > '9')
  1156     0112  083B               	movf	main@char_pos+1,w
  1157     0113  3A80               	xorlw	128
  1158     0114  00FF               	movwf	btemp+1
  1159     0115  3080               	movlw	128
  1160     0116  027F               	subwf	btemp+1,w
  1161     0117  1D03               	skipz
  1162     0118  291B               	goto	u1255
  1163     0119  3010               	movlw	16
  1164     011A  023A               	subwf	main@char_pos,w
  1165     011B                     u1255:
  1166     011B  1C03               	skipc
  1167     011C  291E               	goto	u1251
  1168     011D  291F               	goto	u1250
  1169     011E                     u1251:
  1170     011E  2929               	goto	l1548
  1171     011F                     u1250:
  1172     011F                     l1546:
  1173                           
  1174                           ;main.c: 89:             {
  1175     011F  1283               	bcf	3,5	;RP0=0, select bank0
  1176     0120  1303               	bcf	3,6	;RP1=0, select bank0
  1177     0121  083A               	movf	main@char_pos,w
  1178     0122  3EF1               	addlw	241
  1179     0123  00BA               	movwf	main@char_pos
  1180     0124  083B               	movf	main@char_pos+1,w
  1181     0125  1803               	skipnc
  1182     0126  3E01               	addlw	1
  1183     0127  3EFF               	addlw	255
  1184     0128  00BB               	movwf	main@char_pos+1
  1185     0129                     l1548:
  1186                           
  1187                           ;main.c: 90:                 arr[count_letter] = '0';
  1188     0129  1283               	bcf	3,5	;RP0=0, select bank0
  1189     012A  1303               	bcf	3,6	;RP1=0, select bank0
  1190     012B  083A               	movf	main@char_pos,w
  1191     012C  3EC0               	addlw	192
  1192     012D  00CC               	movwf	clcd_putch@addr
  1193     012E  0840               	movf	main@count,w
  1194     012F  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1195     0130  0084               	movwf	4
  1196     0131  1383               	bcf	3,7	;select IRP bank0
  1197     0132  0800               	movf	0,w
  1198     0133  120A  118A  266F  120A  118A  	fcall	_clcd_putch
  1199     0138                     l1550:
  1200                           
  1201                           ;main.c: 91:             }
  1202     0138  3001               	movlw	1
  1203     0139  1283               	bcf	3,5	;RP0=0, select bank0
  1204     013A  1303               	bcf	3,6	;RP1=0, select bank0
  1205     013B  07C0               	addwf	main@count,f
  1206     013C  1803               	skipnc
  1207     013D  0AC1               	incf	main@count+1,f
  1208     013E  3000               	movlw	0
  1209     013F  07C1               	addwf	main@count+1,f
  1210     0140                     l1552:
  1211     0140  0845               	movf	main@count_letter+1,w
  1212     0141  3A80               	xorlw	128
  1213     0142  00CE               	movwf	??_main
  1214     0143  0841               	movf	main@count+1,w
  1215     0144  3A80               	xorlw	128
  1216     0145  024E               	subwf	??_main,w
  1217     0146  1D03               	skipz
  1218     0147  294A               	goto	u1265
  1219     0148  0840               	movf	main@count,w
  1220     0149  0244               	subwf	main@count_letter,w
  1221     014A                     u1265:
  1222     014A  1803               	skipnc
  1223     014B  294D               	goto	u1261
  1224     014C  294E               	goto	u1260
  1225     014D                     u1261:
  1226     014D  2900               	goto	l1538
  1227     014E                     u1260:
  1228     014E                     l1554:
  1229                           
  1230                           ;main.c: 92:             if(arr[count_letter] < '0')
  1231     014E  3001               	movlw	1
  1232     014F  1283               	bcf	3,5	;RP0=0, select bank0
  1233     0150  1303               	bcf	3,6	;RP1=0, select bank0
  1234     0151  07BC               	addwf	main@pos,f
  1235     0152  1803               	skipnc
  1236     0153  0ABD               	incf	main@pos+1,f
  1237     0154  3000               	movlw	0
  1238     0155  07BD               	addwf	main@pos+1,f
  1239     0156                     l1556:
  1240                           
  1241                           ;main.c: 93:             {
  1242     0156  083D               	movf	main@pos+1,w
  1243     0157  3A80               	xorlw	128
  1244     0158  00FF               	movwf	btemp+1
  1245     0159  3080               	movlw	128
  1246     015A  027F               	subwf	btemp+1,w
  1247     015B  1D03               	skipz
  1248     015C  295F               	goto	u1275
  1249     015D  3010               	movlw	16
  1250     015E  023C               	subwf	main@pos,w
  1251     015F                     u1275:
  1252     015F  1C03               	skipc
  1253     0160  2962               	goto	u1271
  1254     0161  2963               	goto	u1270
  1255     0162                     u1271:
  1256     0162  2967               	goto	l1560
  1257     0163                     u1270:
  1258     0163                     l1558:
  1259                           
  1260                           ;main.c: 94:                 arr[count_letter] = '9';
  1261     0163  1283               	bcf	3,5	;RP0=0, select bank0
  1262     0164  1303               	bcf	3,6	;RP1=0, select bank0
  1263     0165  01BC               	clrf	main@pos
  1264     0166  01BD               	clrf	main@pos+1
  1265     0167                     l1560:
  1266                           
  1267                           ;main.c: 96:             clcd_putch(arr[count_letter], (0xC0 + 5 + count_letter));
  1268     0167  3000               	movlw	0
  1269     0168  1283               	bcf	3,5	;RP0=0, select bank0
  1270     0169  1303               	bcf	3,6	;RP1=0, select bank0
  1271     016A  00D7               	movwf	main@i_87+3
  1272     016B  3000               	movlw	0
  1273     016C  00D6               	movwf	main@i_87+2
  1274     016D  3000               	movlw	0
  1275     016E  00D5               	movwf	main@i_87+1
  1276     016F  3000               	movlw	0
  1277     0170  00D4               	movwf	main@i_87
  1278     0171                     l1566:
  1279     0171  3001               	movlw	1
  1280     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1281     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1282     0174  07D4               	addwf	main@i_87,f
  1283     0175  3000               	movlw	0
  1284     0176  1803               	skipnc
  1285     0177  3001               	movlw	1
  1286     0178  07D5               	addwf	main@i_87+1,f
  1287     0179  3000               	movlw	0
  1288     017A  1803               	skipnc
  1289     017B  3001               	movlw	1
  1290     017C  07D6               	addwf	main@i_87+2,f
  1291     017D  3000               	movlw	0
  1292     017E  1803               	skipnc
  1293     017F  3001               	movlw	1
  1294     0180  07D7               	addwf	main@i_87+3,f
  1295     0181                     l1568:
  1296     0181  0857               	movf	main@i_87+3,w
  1297     0182  1D03               	btfss	3,2
  1298     0183  2993               	goto	u1280
  1299     0184  0856               	movf	main@i_87+2,w
  1300     0185  1D03               	btfss	3,2
  1301     0186  2993               	goto	u1280
  1302     0187  309C               	movlw	156
  1303     0188  0255               	subwf	main@i_87+1,w
  1304     0189  1D03               	skipz
  1305     018A  298F               	goto	u1283
  1306     018B  3040               	movlw	64
  1307     018C  0254               	subwf	main@i_87,w
  1308     018D  1D03               	skipz
  1309     018E  298F               	goto	u1283
  1310     018F                     u1283:
  1311     018F  1C03               	btfss	3,0
  1312     0190  2992               	goto	u1281
  1313     0191  2993               	goto	u1280
  1314     0192                     u1281:
  1315     0192  2971               	goto	l1566
  1316     0193                     u1280:
  1317     0193                     l1570:
  1318                           
  1319                           ;main.c: 99: 
  1320     0193  1283               	bcf	3,5	;RP0=0, select bank0
  1321     0194  1303               	bcf	3,6	;RP1=0, select bank0
  1322     0195  0359               	decf	main@key,w
  1323     0196  1D03               	btfss	3,2
  1324     0197  2999               	goto	u1291
  1325     0198  299A               	goto	u1290
  1326     0199                     u1291:
  1327     0199  29DD               	goto	l75
  1328     019A                     u1290:
  1329     019A                     l1572:
  1330     019A  0346               	decf	main@edit_key,w
  1331     019B  0447               	iorwf	main@edit_key+1,w
  1332     019C  1D03               	btfss	3,2
  1333     019D  299F               	goto	u1301
  1334     019E  29A0               	goto	u1300
  1335     019F                     u1301:
  1336     019F  29DD               	goto	l75
  1337     01A0                     u1300:
  1338     01A0                     l1574:
  1339                           
  1340                           ;main.c: 100:         if(key == 2 && edit_key == 1);main.c: 101:         {
  1341     01A0  0844               	movf	main@count_letter,w
  1342     01A1  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1343     01A2  0084               	movwf	4
  1344     01A3  1383               	bcf	3,7	;select IRP bank0
  1345     01A4  0800               	movf	0,w
  1346     01A5  3E01               	addlw	1
  1347     01A6  00FF               	movwf	btemp+1
  1348     01A7  0844               	movf	main@count_letter,w
  1349     01A8  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1350     01A9  0084               	movwf	4
  1351     01AA  087F               	movf	btemp+1,w
  1352     01AB  0080               	movwf	0
  1353     01AC                     l1576:
  1354                           
  1355                           ;main.c: 102:             arr[count_letter] = arr[count_letter] - 1;
  1356     01AC  0844               	movf	main@count_letter,w
  1357     01AD  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1358     01AE  0084               	movwf	4
  1359     01AF  303A               	movlw	58
  1360     01B0  0200               	subwf	0,w
  1361     01B1  1C03               	skipc
  1362     01B2  29B4               	goto	u1311
  1363     01B3  29B5               	goto	u1310
  1364     01B4                     u1311:
  1365     01B4  29BA               	goto	l76
  1366     01B5                     u1310:
  1367     01B5                     l1578:
  1368                           
  1369                           ;main.c: 103:             if(arr[count_letter] > '9');main.c: 104:             {
  1370     01B5  0844               	movf	main@count_letter,w
  1371     01B6  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1372     01B7  0084               	movwf	4
  1373     01B8  3030               	movlw	48
  1374     01B9  0080               	movwf	0
  1375     01BA                     l76:	
  1376                           ;main.c: 105:                 arr[count_letter] = '0';
  1377                           
  1378                           
  1379                           ;main.c: 106:             }
  1380     01BA  0844               	movf	main@count_letter,w
  1381     01BB  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1382     01BC  0084               	movwf	4
  1383     01BD  3030               	movlw	48
  1384     01BE  0200               	subwf	0,w
  1385     01BF  1803               	skipnc
  1386     01C0  29C2               	goto	u1321
  1387     01C1  29C3               	goto	u1320
  1388     01C2                     u1321:
  1389     01C2  29C8               	goto	l1582
  1390     01C3                     u1320:
  1391     01C3                     l1580:
  1392                           
  1393                           ;main.c: 107:             if(arr[count_letter] < '0');main.c: 108:             {
  1394     01C3  0844               	movf	main@count_letter,w
  1395     01C4  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1396     01C5  0084               	movwf	4
  1397     01C6  3039               	movlw	57
  1398     01C7  0080               	movwf	0
  1399     01C8                     l1582:
  1400                           
  1401                           ;main.c: 110:             }
  1402     01C8  0844               	movf	main@count_letter,w
  1403     01C9  3EC5               	addlw	197
  1404     01CA  00CC               	movwf	clcd_putch@addr
  1405     01CB  0844               	movf	main@count_letter,w
  1406     01CC  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1407     01CD  0084               	movwf	4
  1408     01CE  0800               	movf	0,w
  1409     01CF  120A  118A  266F  120A  118A  	fcall	_clcd_putch
  1410     01D4                     l1584:
  1411                           
  1412                           ;main.c: 111:            clcd_putch(arr[count_letter], (0xC0 + 5 + count_letter));
  1413     01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1414     01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1415     01D6  01C8               	clrf	clcd_write@mode
  1416     01D7  3010               	movlw	16
  1417     01D8  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1418     01DD                     l75:	
  1419                           ;main.c: 112:             clcd_write(0x10, 0);
  1420                           
  1421                           
  1422                           ;main.c: 114: 
  1423     01DD  3002               	movlw	2
  1424     01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1425     01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1426     01E0  0659               	xorwf	main@key,w
  1427     01E1  1D03               	btfss	3,2
  1428     01E2  29E4               	goto	u1331
  1429     01E3  29E5               	goto	u1330
  1430     01E4                     u1331:
  1431     01E4  2A28               	goto	l78
  1432     01E5                     u1330:
  1433     01E5                     l1586:
  1434     01E5  0346               	decf	main@edit_key,w
  1435     01E6  0447               	iorwf	main@edit_key+1,w
  1436     01E7  1D03               	btfss	3,2
  1437     01E8  29EA               	goto	u1341
  1438     01E9  29EB               	goto	u1340
  1439     01EA                     u1341:
  1440     01EA  2A28               	goto	l78
  1441     01EB                     u1340:
  1442     01EB                     l1588:
  1443                           
  1444                           ;main.c: 115:         if(key == 3);main.c: 116:         {
  1445     01EB  0844               	movf	main@count_letter,w
  1446     01EC  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1447     01ED  0084               	movwf	4
  1448     01EE  1383               	bcf	3,7	;select IRP bank0
  1449     01EF  0800               	movf	0,w
  1450     01F0  3EFF               	addlw	255
  1451     01F1  00FF               	movwf	btemp+1
  1452     01F2  0844               	movf	main@count_letter,w
  1453     01F3  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1454     01F4  0084               	movwf	4
  1455     01F5  087F               	movf	btemp+1,w
  1456     01F6  0080               	movwf	0
  1457     01F7                     l1590:
  1458                           
  1459                           ;main.c: 117:             edit_key = !edit_key;
  1460     01F7  0844               	movf	main@count_letter,w
  1461     01F8  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1462     01F9  0084               	movwf	4
  1463     01FA  303A               	movlw	58
  1464     01FB  0200               	subwf	0,w
  1465     01FC  1C03               	skipc
  1466     01FD  29FF               	goto	u1351
  1467     01FE  2A00               	goto	u1350
  1468     01FF                     u1351:
  1469     01FF  2A05               	goto	l79
  1470     0200                     u1350:
  1471     0200                     l1592:
  1472                           
  1473                           ;main.c: 118: ;main.c: 119:             scroll = !scroll;
  1474     0200  0844               	movf	main@count_letter,w
  1475     0201  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1476     0202  0084               	movwf	4
  1477     0203  3030               	movlw	48
  1478     0204  0080               	movwf	0
  1479     0205                     l79:	
  1480                           ;main.c: 120:             if(scroll == 1)
  1481                           
  1482                           
  1483                           ;main.c: 121:             {
  1484     0205  0844               	movf	main@count_letter,w
  1485     0206  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1486     0207  0084               	movwf	4
  1487     0208  3030               	movlw	48
  1488     0209  0200               	subwf	0,w
  1489     020A  1803               	skipnc
  1490     020B  2A0D               	goto	u1361
  1491     020C  2A0E               	goto	u1360
  1492     020D                     u1361:
  1493     020D  2A13               	goto	l1596
  1494     020E                     u1360:
  1495     020E                     l1594:
  1496                           
  1497                           ;main.c: 122:                 cur_key = 1;;main.c: 123:             }
  1498     020E  0844               	movf	main@count_letter,w
  1499     020F  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1500     0210  0084               	movwf	4
  1501     0211  3039               	movlw	57
  1502     0212  0080               	movwf	0
  1503     0213                     l1596:
  1504                           
  1505                           ;main.c: 125:             clcd_write(0x01,0);
  1506     0213  0844               	movf	main@count_letter,w
  1507     0214  3EC5               	addlw	197
  1508     0215  00CC               	movwf	clcd_putch@addr
  1509     0216  0844               	movf	main@count_letter,w
  1510     0217  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1511     0218  0084               	movwf	4
  1512     0219  0800               	movf	0,w
  1513     021A  120A  118A  266F  120A  118A  	fcall	_clcd_putch
  1514     021F                     l1598:
  1515                           
  1516                           ;main.c: 126:             clcd_print("Scrolling Marque", (0x80 + 0));
  1517     021F  1283               	bcf	3,5	;RP0=0, select bank0
  1518     0220  1303               	bcf	3,6	;RP1=0, select bank0
  1519     0221  01C8               	clrf	clcd_write@mode
  1520     0222  3010               	movlw	16
  1521     0223  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1522     0228                     l78:	
  1523                           ;main.c: 127:             clcd_print("Release stop key", (0xC0 + 0));
  1524                           
  1525                           
  1526                           ;main.c: 129: 
  1527     0228  3003               	movlw	3
  1528     0229  1283               	bcf	3,5	;RP0=0, select bank0
  1529     022A  1303               	bcf	3,6	;RP1=0, select bank0
  1530     022B  0659               	xorwf	main@key,w
  1531     022C  1D03               	btfss	3,2
  1532     022D  2A2F               	goto	u1371
  1533     022E  2A30               	goto	u1370
  1534     022F                     u1371:
  1535     022F  2A78               	goto	l1610
  1536     0230                     u1370:
  1537     0230                     l1600:
  1538                           
  1539                           ;main.c: 130:         if(key == 4 || once);main.c: 131:         {
  1540     0230  0846               	movf	main@edit_key,w
  1541     0231  0447               	iorwf	main@edit_key+1,w
  1542     0232  1903               	btfsc	3,2
  1543     0233  2A35               	goto	u1381
  1544     0234  2A37               	goto	u1380
  1545     0235                     u1381:
  1546     0235  3001               	movlw	1
  1547     0236  2A38               	goto	u1390
  1548     0237                     u1380:
  1549     0237  3000               	movlw	0
  1550     0238                     u1390:
  1551     0238  00CE               	movwf	??_main
  1552     0239  01CF               	clrf	??_main+1
  1553     023A  084E               	movf	??_main,w
  1554     023B  00C6               	movwf	main@edit_key
  1555     023C  084F               	movf	??_main+1,w
  1556     023D  00C7               	movwf	main@edit_key+1
  1557                           
  1558                           ;main.c: 133:             scroll = 0;
  1559     023E  0842               	movf	main@scroll,w
  1560     023F  0443               	iorwf	main@scroll+1,w
  1561     0240  1903               	btfsc	3,2
  1562     0241  2A43               	goto	u1401
  1563     0242  2A45               	goto	u1400
  1564     0243                     u1401:
  1565     0243  3001               	movlw	1
  1566     0244  2A46               	goto	u1410
  1567     0245                     u1400:
  1568     0245  3000               	movlw	0
  1569     0246                     u1410:
  1570     0246  00CE               	movwf	??_main
  1571     0247  01CF               	clrf	??_main+1
  1572     0248  084E               	movf	??_main,w
  1573     0249  00C2               	movwf	main@scroll
  1574     024A  084F               	movf	??_main+1,w
  1575     024B  00C3               	movwf	main@scroll+1
  1576                           
  1577                           ;main.c: 134:             count_letter = 0;
  1578     024C  0342               	decf	main@scroll,w
  1579     024D  0443               	iorwf	main@scroll+1,w
  1580     024E  1D03               	btfss	3,2
  1581     024F  2A51               	goto	u1421
  1582     0250  2A52               	goto	u1420
  1583     0251                     u1421:
  1584     0251  2A54               	goto	l1604
  1585     0252                     u1420:
  1586     0252                     l1602:
  1587                           
  1588                           ;main.c: 135:             arr[count_letter] = '0';;main.c: 136:             clcd_write(0
      +                          x01,0);
  1589     0252  01D8               	clrf	main@cur_key
  1590     0253  0AD8               	incf	main@cur_key,f
  1591     0254                     l1604:
  1592                           
  1593                           ;main.c: 138:             clcd_print("Msg:", (0xC0 + 0));
  1594     0254  01C8               	clrf	clcd_write@mode
  1595     0255  300C               	movlw	12
  1596     0256  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1597                           
  1598                           ;main.c: 139:             clcd_putch(arr[0], (0xC0 + count_letter + 5));
  1599     025B  1283               	bcf	3,5	;RP0=0, select bank0
  1600     025C  1303               	bcf	3,6	;RP1=0, select bank0
  1601     025D  01C8               	clrf	clcd_write@mode
  1602     025E  3001               	movlw	1
  1603     025F  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1604     0264                     l1606:
  1605                           
  1606                           ;main.c: 140:             clcd_write(0x0F, 0);
  1607     0264  3080               	movlw	128
  1608     0265  1283               	bcf	3,5	;RP0=0, select bank0
  1609     0266  1303               	bcf	3,6	;RP1=0, select bank0
  1610     0267  00CC               	movwf	clcd_print@addr
  1611     0268  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1612     0269  120A  118A  25FF  120A  118A  	fcall	_clcd_print
  1613     026E                     l1608:
  1614                           
  1615                           ;main.c: 141:             clcd_write(0x10, 0);
  1616     026E  30C0               	movlw	192
  1617     026F  1283               	bcf	3,5	;RP0=0, select bank0
  1618     0270  1303               	bcf	3,6	;RP1=0, select bank0
  1619     0271  00CC               	movwf	clcd_print@addr
  1620     0272  3034               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1621     0273  120A  118A  25FF  120A  118A  	fcall	_clcd_print
  1622     0278                     l1610:
  1623                           
  1624                           ;main.c: 144:         }
  1625     0278  3004               	movlw	4
  1626     0279  1283               	bcf	3,5	;RP0=0, select bank0
  1627     027A  1303               	bcf	3,6	;RP1=0, select bank0
  1628     027B  0659               	xorwf	main@key,w
  1629     027C  1903               	btfsc	3,2
  1630     027D  2A7F               	goto	u1431
  1631     027E  2A80               	goto	u1430
  1632     027F                     u1431:
  1633     027F  2A86               	goto	l1614
  1634     0280                     u1430:
  1635     0280                     l1612:
  1636     0280  085A               	movf	main@once,w
  1637     0281  045B               	iorwf	main@once+1,w
  1638     0282  1903               	btfsc	3,2
  1639     0283  2A85               	goto	u1441
  1640     0284  2A86               	goto	u1440
  1641     0285                     u1441:
  1642     0285  2ACB               	goto	l1636
  1643     0286                     u1440:
  1644     0286                     l1614:
  1645                           
  1646                           ;main.c: 145: ;main.c: 146:         if(key == 5 && edit_key == 1)
  1647     0286  3001               	movlw	1
  1648     0287  00C6               	movwf	main@edit_key
  1649     0288  3000               	movlw	0
  1650     0289  00C7               	movwf	main@edit_key+1
  1651     028A                     l1616:
  1652                           
  1653                           ;main.c: 147:         {
  1654     028A  01C2               	clrf	main@scroll
  1655     028B  01C3               	clrf	main@scroll+1
  1656     028C                     l1618:
  1657                           
  1658                           ;main.c: 148:             count_letter++;
  1659     028C  01C4               	clrf	main@count_letter
  1660     028D  01C5               	clrf	main@count_letter+1
  1661     028E                     l1620:
  1662                           
  1663                           ;main.c: 149:             arr[count_letter] = '0';
  1664     028E  3030               	movlw	48
  1665     028F  00A0               	movwf	main@arr
  1666     0290                     l1622:
  1667                           
  1668                           ;main.c: 150:             if(count_letter > 10)
  1669     0290  01C8               	clrf	clcd_write@mode
  1670     0291  3001               	movlw	1
  1671     0292  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1672     0297                     l1624:
  1673                           
  1674                           ;main.c: 151:             {
  1675     0297  3080               	movlw	128
  1676     0298  1283               	bcf	3,5	;RP0=0, select bank0
  1677     0299  1303               	bcf	3,6	;RP1=0, select bank0
  1678     029A  00CC               	movwf	clcd_print@addr
  1679     029B  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1680     029C  120A  118A  25FF  120A  118A  	fcall	_clcd_print
  1681     02A1                     l1626:
  1682                           
  1683                           ;main.c: 152:                 count_letter = 10;
  1684     02A1  30C0               	movlw	192
  1685     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1686     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1687     02A4  00CC               	movwf	clcd_print@addr
  1688     02A5  3045               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1689     02A6  120A  118A  25FF  120A  118A  	fcall	_clcd_print
  1690     02AB                     l1628:
  1691                           
  1692                           ;main.c: 153:             }
  1693     02AB  30C5               	movlw	197
  1694     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1695     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1696     02AE  00CC               	movwf	clcd_putch@addr
  1697     02AF  0820               	movf	main@arr,w
  1698     02B0  120A  118A  266F  120A  118A  	fcall	_clcd_putch
  1699     02B5                     l1630:
  1700                           
  1701                           ;main.c: 154:             clcd_putch(arr[count_letter], (0xC0 + 5 + count_letter));
  1702     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1703     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1704     02B7  01C8               	clrf	clcd_write@mode
  1705     02B8  300F               	movlw	15
  1706     02B9  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1707     02BE                     l1632:
  1708                           
  1709                           ;main.c: 155:             clcd_write(0x10, 0);
  1710     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1711     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1712     02C0  01C8               	clrf	clcd_write@mode
  1713     02C1  3010               	movlw	16
  1714     02C2  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1715     02C7                     l1634:
  1716                           
  1717                           ;main.c: 157: 
  1718     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1719     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1720     02C9  01DA               	clrf	main@once
  1721     02CA  01DB               	clrf	main@once+1
  1722     02CB                     l1636:
  1723                           
  1724                           ;main.c: 160:             arr[count_letter] = '0';
  1725     02CB  3005               	movlw	5
  1726     02CC  0659               	xorwf	main@key,w
  1727     02CD  1D03               	btfss	3,2
  1728     02CE  2AD0               	goto	u1451
  1729     02CF  2AD1               	goto	u1450
  1730     02D0                     u1451:
  1731     02D0  2B0E               	goto	l1652
  1732     02D1                     u1450:
  1733     02D1                     l1638:
  1734     02D1  0346               	decf	main@edit_key,w
  1735     02D2  0447               	iorwf	main@edit_key+1,w
  1736     02D3  1D03               	btfss	3,2
  1737     02D4  2AD6               	goto	u1461
  1738     02D5  2AD7               	goto	u1460
  1739     02D6                     u1461:
  1740     02D6  2B0E               	goto	l1652
  1741     02D7                     u1460:
  1742     02D7                     l1640:
  1743                           
  1744                           ;main.c: 161:             clcd_putch(0x00, (0xC0 + 5 + count_letter));;main.c: 162:     
      +                                  count_letter--;
  1745     02D7  3001               	movlw	1
  1746     02D8  07C4               	addwf	main@count_letter,f
  1747     02D9  1803               	skipnc
  1748     02DA  0AC5               	incf	main@count_letter+1,f
  1749     02DB  3000               	movlw	0
  1750     02DC  07C5               	addwf	main@count_letter+1,f
  1751     02DD                     l1642:
  1752                           
  1753                           ;main.c: 163:             if(count_letter < 0)
  1754     02DD  0844               	movf	main@count_letter,w
  1755     02DE  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1756     02DF  0084               	movwf	4
  1757     02E0  3030               	movlw	48
  1758     02E1  1383               	bcf	3,7	;select IRP bank0
  1759     02E2  0080               	movwf	0
  1760     02E3                     l1644:
  1761                           
  1762                           ;main.c: 164:             {
  1763     02E3  0845               	movf	main@count_letter+1,w
  1764     02E4  3A80               	xorlw	128
  1765     02E5  00FF               	movwf	btemp+1
  1766     02E6  3080               	movlw	128
  1767     02E7  027F               	subwf	btemp+1,w
  1768     02E8  1D03               	skipz
  1769     02E9  2AEC               	goto	u1475
  1770     02EA  300B               	movlw	11
  1771     02EB  0244               	subwf	main@count_letter,w
  1772     02EC                     u1475:
  1773     02EC  1C03               	skipc
  1774     02ED  2AEF               	goto	u1471
  1775     02EE  2AF0               	goto	u1470
  1776     02EF                     u1471:
  1777     02EF  2AF6               	goto	l1648
  1778     02F0                     u1470:
  1779     02F0                     l1646:
  1780                           
  1781                           ;main.c: 165:                 count_letter = 0;;main.c: 166:             }
  1782     02F0  300A               	movlw	10
  1783     02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1784     02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1785     02F3  00C4               	movwf	main@count_letter
  1786     02F4  3000               	movlw	0
  1787     02F5  00C5               	movwf	main@count_letter+1
  1788     02F6                     l1648:
  1789                           
  1790                           ;main.c: 168:             clcd_write(0x10, 0);
  1791     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1792     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1793     02F8  0844               	movf	main@count_letter,w
  1794     02F9  3EC5               	addlw	197
  1795     02FA  00CC               	movwf	clcd_putch@addr
  1796     02FB  0844               	movf	main@count_letter,w
  1797     02FC  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1798     02FD  0084               	movwf	4
  1799     02FE  1383               	bcf	3,7	;select IRP bank0
  1800     02FF  0800               	movf	0,w
  1801     0300  120A  118A  266F  120A  118A  	fcall	_clcd_putch
  1802     0305                     l1650:
  1803                           
  1804                           ;main.c: 169: 
  1805     0305  1283               	bcf	3,5	;RP0=0, select bank0
  1806     0306  1303               	bcf	3,6	;RP1=0, select bank0
  1807     0307  01C8               	clrf	clcd_write@mode
  1808     0308  3010               	movlw	16
  1809     0309  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1810     030E                     l1652:
  1811                           
  1812                           ;main.c: 172:     return;
  1813     030E  3006               	movlw	6
  1814     030F  1283               	bcf	3,5	;RP0=0, select bank0
  1815     0310  1303               	bcf	3,6	;RP1=0, select bank0
  1816     0311  0659               	xorwf	main@key,w
  1817     0312  1D03               	btfss	3,2
  1818     0313  2B15               	goto	u1481
  1819     0314  2B16               	goto	u1480
  1820     0315                     u1481:
  1821     0315  2837               	goto	l1486
  1822     0316                     u1480:
  1823     0316                     l1654:
  1824     0316  0346               	decf	main@edit_key,w
  1825     0317  0447               	iorwf	main@edit_key+1,w
  1826     0318  1D03               	btfss	3,2
  1827     0319  2B1B               	goto	u1491
  1828     031A  2B1C               	goto	u1490
  1829     031B                     u1491:
  1830     031B  2837               	goto	l1486
  1831     031C                     u1490:
  1832     031C                     l1656:
  1833                           
  1834                           ;main.c: 173: }
  1835     031C  0844               	movf	main@count_letter,w
  1836     031D  3E20               	addlw	(low (main@arr| 0))& (0+255)
  1837     031E  0084               	movwf	4
  1838     031F  3030               	movlw	48
  1839     0320  1383               	bcf	3,7	;select IRP bank0
  1840     0321  0080               	movwf	0
  1841     0322                     l1658:
  1842     0322  0844               	movf	main@count_letter,w
  1843     0323  3EC5               	addlw	197
  1844     0324  00CC               	movwf	clcd_putch@addr
  1845     0325  3000               	movlw	0
  1846     0326  120A  118A  266F  120A  118A  	fcall	_clcd_putch
  1847     032B                     l1660:
  1848     032B  30FF               	movlw	255
  1849     032C  1283               	bcf	3,5	;RP0=0, select bank0
  1850     032D  1303               	bcf	3,6	;RP1=0, select bank0
  1851     032E  07C4               	addwf	main@count_letter,f
  1852     032F  1803               	skipnc
  1853     0330  0AC5               	incf	main@count_letter+1,f
  1854     0331  30FF               	movlw	255
  1855     0332  07C5               	addwf	main@count_letter+1,f
  1856     0333                     l1662:
  1857     0333  1FC5               	btfss	main@count_letter+1,7
  1858     0334  2B36               	goto	u1501
  1859     0335  2B37               	goto	u1500
  1860     0336                     u1501:
  1861     0336  2B39               	goto	l1666
  1862     0337                     u1500:
  1863     0337                     l1664:
  1864     0337  01C4               	clrf	main@count_letter
  1865     0338  01C5               	clrf	main@count_letter+1
  1866     0339                     l1666:
  1867     0339  01C8               	clrf	clcd_write@mode
  1868     033A  3010               	movlw	16
  1869     033B  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1870     0340                     l1668:
  1871     0340  1283               	bcf	3,5	;RP0=0, select bank0
  1872     0341  1303               	bcf	3,6	;RP1=0, select bank0
  1873     0342  01C8               	clrf	clcd_write@mode
  1874     0343  3010               	movlw	16
  1875     0344  120A  118A  254F  120A  118A  	fcall	_clcd_write
  1876     0349  2837               	goto	l1486
  1877     034A  120A  118A  280E   	ljmp	start
  1878     034D                     __end_of_main:
  1879                           
  1880                           	psect	text1
  1881     062D                     __ptext1:	
  1882 ;; *************** function _read_matrix_keypad *****************
  1883 ;; Defined at:
  1884 ;;		line 111 in file "matrix_keypad.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  mode            1    wreg     unsigned char 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  mode            1    2[BANK0 ] unsigned char 
  1889 ;;  key             1    3[BANK0 ] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      unsigned char 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       0       0       0
  1900 ;;      Locals:         0       2       0       0       0
  1901 ;;      Temps:          0       0       0       0       0
  1902 ;;      Totals:         0       2       0       0       0
  1903 ;;Total ram usage:        2 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 3
  1906 ;; This function calls:
  1907 ;;		_scan_keypad
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913     062D                     _read_matrix_keypad:	
  1914                           ;psect for function _read_matrix_keypad
  1915                           
  1916                           
  1917                           ;incstack = 0
  1918                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
  1919                           ;read_matrix_keypad@mode stored from wreg
  1920     062D  1283               	bcf	3,5	;RP0=0, select bank0
  1921     062E  1303               	bcf	3,6	;RP1=0, select bank0
  1922     062F  00CA               	movwf	read_matrix_keypad@mode
  1923     0630                     l1408:
  1924                           
  1925                           ;matrix_keypad.c: 111: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 112: {;matrix_keypad.c: 113:     static unsigned char once = 1;;matrix_keypad.c: 11
      +                          4:     unsigned char key;;matrix_keypad.c: 116:     key = scan_keypad();
  1926     0630  120A  118A  234D  120A  118A  	fcall	_scan_keypad
  1927     0635  1283               	bcf	3,5	;RP0=0, select bank0
  1928     0636  1303               	bcf	3,6	;RP1=0, select bank0
  1929     0637  00CB               	movwf	read_matrix_keypad@key
  1930     0638                     l1410:
  1931                           
  1932                           ;matrix_keypad.c: 118:     if (mode == 0)
  1933     0638  084A               	movf	read_matrix_keypad@mode,w
  1934     0639  1D03               	btfss	3,2
  1935     063A  2E3C               	goto	u1001
  1936     063B  2E3D               	goto	u1000
  1937     063C                     u1001:
  1938     063C  2E3F               	goto	l1418
  1939     063D                     u1000:
  1940     063D                     l1412:
  1941                           
  1942                           ;matrix_keypad.c: 119:     {;matrix_keypad.c: 120:         return key;
  1943     063D  084B               	movf	read_matrix_keypad@key,w
  1944     063E  2E53               	goto	l203
  1945     063F                     l1418:
  1946                           
  1947                           ;matrix_keypad.c: 123:     {;matrix_keypad.c: 124:         if ((key != 0xFF) && once)
  1948     063F  0A4B               	incf	read_matrix_keypad@key,w
  1949     0640  1903               	btfsc	3,2
  1950     0641  2E43               	goto	u1011
  1951     0642  2E44               	goto	u1010
  1952     0643                     u1011:
  1953     0643  2E4B               	goto	l1430
  1954     0644                     u1010:
  1955     0644                     l1420:
  1956     0644  085C               	movf	read_matrix_keypad@once,w
  1957     0645  1903               	btfsc	3,2
  1958     0646  2E48               	goto	u1021
  1959     0647  2E49               	goto	u1020
  1960     0648                     u1021:
  1961     0648  2E4B               	goto	l1430
  1962     0649                     u1020:
  1963     0649                     l1422:
  1964                           
  1965                           ;matrix_keypad.c: 125:         {;matrix_keypad.c: 126:             once = 0;
  1966     0649  01DC               	clrf	read_matrix_keypad@once
  1967     064A  2E3D               	goto	l1412
  1968     064B                     l1430:
  1969     064B  0A4B               	incf	read_matrix_keypad@key,w
  1970     064C  1D03               	btfss	3,2
  1971     064D  2E4F               	goto	u1031
  1972     064E  2E50               	goto	u1030
  1973     064F                     u1031:
  1974     064F  2E52               	goto	l1434
  1975     0650                     u1030:
  1976     0650                     l1432:
  1977                           
  1978                           ;matrix_keypad.c: 131:         {;matrix_keypad.c: 132:             once = 1;
  1979     0650  01DC               	clrf	read_matrix_keypad@once
  1980     0651  0ADC               	incf	read_matrix_keypad@once,f
  1981     0652                     l1434:
  1982                           
  1983                           ;matrix_keypad.c: 136:     return 0xFF;
  1984     0652  30FF               	movlw	255
  1985     0653                     l203:
  1986     0653  0008               	return
  1987     0654                     __end_of_read_matrix_keypad:
  1988                           
  1989                           	psect	text2
  1990     034D                     __ptext2:	
  1991 ;; *************** function _scan_keypad *****************
  1992 ;; Defined at:
  1993 ;;		line 24 in file "matrix_keypad.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  i               2    0[BANK0 ] int 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      unsigned char 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       0       0       0       0
  2008 ;;      Locals:         0       2       0       0       0
  2009 ;;      Temps:          0       0       0       0       0
  2010 ;;      Totals:         0       2       0       0       0
  2011 ;;Total ram usage:        2 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 2
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_read_matrix_keypad
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021     034D                     _scan_keypad:	
  2022                           ;psect for function _scan_keypad
  2023                           
  2024     034D                     l1296:	
  2025                           ;incstack = 0
  2026                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  2027                           
  2028                           
  2029                           ;matrix_keypad.c: 26:     int i;;matrix_keypad.c: 28:     RD3 = 0;
  2030     034D  1283               	bcf	3,5	;RP0=0, select bank0
  2031     034E  1303               	bcf	3,6	;RP1=0, select bank0
  2032     034F  1188               	bcf	8,3	;volatile
  2033                           
  2034                           ;matrix_keypad.c: 29:     RD2 = 1;
  2035     0350  1508               	bsf	8,2	;volatile
  2036                           
  2037                           ;matrix_keypad.c: 30:     RD1 = 1;
  2038     0351  1488               	bsf	8,1	;volatile
  2039                           
  2040                           ;matrix_keypad.c: 31:     RD0 = 1;
  2041     0352  1408               	bsf	8,0	;volatile
  2042     0353                     l1298:
  2043                           
  2044                           ;matrix_keypad.c: 33:     for (i = 100; i--; );
  2045     0353  3064               	movlw	100
  2046     0354  00C8               	movwf	scan_keypad@i
  2047     0355  3000               	movlw	0
  2048     0356  00C9               	movwf	scan_keypad@i+1
  2049     0357                     l1300:
  2050     0357  30FF               	movlw	255
  2051     0358  07C8               	addwf	scan_keypad@i,f
  2052     0359  1803               	skipnc
  2053     035A  0AC9               	incf	scan_keypad@i+1,f
  2054     035B  30FF               	movlw	255
  2055     035C  07C9               	addwf	scan_keypad@i+1,f
  2056     035D  0A48               	incf	scan_keypad@i,w
  2057     035E  1D03               	skipz
  2058     035F  2B64               	goto	u811
  2059     0360  0A49               	incf	scan_keypad@i+1,w
  2060     0361  1D03               	btfss	3,2
  2061     0362  2B64               	goto	u811
  2062     0363  2B65               	goto	u810
  2063     0364                     u811:
  2064     0364  2B57               	goto	l1300
  2065     0365                     u810:
  2066     0365                     l167:
  2067                           
  2068                           ;matrix_keypad.c: 35:     if (RB0 == 0)
  2069     0365  1806               	btfsc	6,0	;volatile
  2070     0366  2B68               	goto	u821
  2071     0367  2B69               	goto	u820
  2072     0368                     u821:
  2073     0368  2B6B               	goto	l168
  2074     0369                     u820:
  2075     0369                     l1302:
  2076                           
  2077                           ;matrix_keypad.c: 36:     {;matrix_keypad.c: 37:         return 1;
  2078     0369  3001               	movlw	1
  2079     036A  2BF0               	goto	l169
  2080     036B                     l168:	
  2081                           ;matrix_keypad.c: 39:     else if (RB1 == 0)
  2082                           
  2083     036B  1886               	btfsc	6,1	;volatile
  2084     036C  2B6E               	goto	u831
  2085     036D  2B6F               	goto	u830
  2086     036E                     u831:
  2087     036E  2B71               	goto	l171
  2088     036F                     u830:
  2089     036F                     l1308:
  2090                           
  2091                           ;matrix_keypad.c: 40:     {;matrix_keypad.c: 41:         return 2;
  2092     036F  3002               	movlw	2
  2093     0370  2BF0               	goto	l169
  2094     0371                     l171:	
  2095                           ;matrix_keypad.c: 43:     else if (RB2 == 0)
  2096                           
  2097     0371  1906               	btfsc	6,2	;volatile
  2098     0372  2B74               	goto	u841
  2099     0373  2B75               	goto	u840
  2100     0374                     u841:
  2101     0374  2B77               	goto	l170
  2102     0375                     u840:
  2103     0375                     l1314:
  2104                           
  2105                           ;matrix_keypad.c: 44:     {;matrix_keypad.c: 45:         return 3;
  2106     0375  3003               	movlw	3
  2107     0376  2BF0               	goto	l169
  2108     0377                     l170:
  2109                           
  2110                           ;matrix_keypad.c: 48:     RD3 = 1;
  2111     0377  1588               	bsf	8,3	;volatile
  2112                           
  2113                           ;matrix_keypad.c: 49:     RD2 = 0;
  2114     0378  1108               	bcf	8,2	;volatile
  2115                           
  2116                           ;matrix_keypad.c: 50:     RD1 = 1;
  2117     0379  1488               	bsf	8,1	;volatile
  2118                           
  2119                           ;matrix_keypad.c: 51:     RD0 = 1;
  2120     037A  1408               	bsf	8,0	;volatile
  2121     037B                     l1318:
  2122                           
  2123                           ;matrix_keypad.c: 53:     for (i = 100; i--; );
  2124     037B  3064               	movlw	100
  2125     037C  00C8               	movwf	scan_keypad@i
  2126     037D  3000               	movlw	0
  2127     037E  00C9               	movwf	scan_keypad@i+1
  2128     037F                     l1320:
  2129     037F  30FF               	movlw	255
  2130     0380  07C8               	addwf	scan_keypad@i,f
  2131     0381  1803               	skipnc
  2132     0382  0AC9               	incf	scan_keypad@i+1,f
  2133     0383  30FF               	movlw	255
  2134     0384  07C9               	addwf	scan_keypad@i+1,f
  2135     0385  0A48               	incf	scan_keypad@i,w
  2136     0386  1D03               	skipz
  2137     0387  2B8C               	goto	u851
  2138     0388  0A49               	incf	scan_keypad@i+1,w
  2139     0389  1D03               	btfss	3,2
  2140     038A  2B8C               	goto	u851
  2141     038B  2B8D               	goto	u850
  2142     038C                     u851:
  2143     038C  2B7F               	goto	l1320
  2144     038D                     u850:
  2145     038D                     l176:
  2146                           
  2147                           ;matrix_keypad.c: 55:     if (RB0 == 0)
  2148     038D  1806               	btfsc	6,0	;volatile
  2149     038E  2B90               	goto	u861
  2150     038F  2B91               	goto	u860
  2151     0390                     u861:
  2152     0390  2B93               	goto	l177
  2153     0391                     u860:
  2154     0391                     l1322:
  2155                           
  2156                           ;matrix_keypad.c: 56:     {;matrix_keypad.c: 57:         return 4;
  2157     0391  3004               	movlw	4
  2158     0392  2BF0               	goto	l169
  2159     0393                     l177:	
  2160                           ;matrix_keypad.c: 59:     else if (RB1 == 0)
  2161                           
  2162     0393  1886               	btfsc	6,1	;volatile
  2163     0394  2B96               	goto	u871
  2164     0395  2B97               	goto	u870
  2165     0396                     u871:
  2166     0396  2B99               	goto	l179
  2167     0397                     u870:
  2168     0397                     l1328:
  2169                           
  2170                           ;matrix_keypad.c: 60:     {;matrix_keypad.c: 61:         return 5;
  2171     0397  3005               	movlw	5
  2172     0398  2BF0               	goto	l169
  2173     0399                     l179:	
  2174                           ;matrix_keypad.c: 63:     else if (RB2 == 0)
  2175                           
  2176     0399  1906               	btfsc	6,2	;volatile
  2177     039A  2B9C               	goto	u881
  2178     039B  2B9D               	goto	u880
  2179     039C                     u881:
  2180     039C  2B9F               	goto	l178
  2181     039D                     u880:
  2182     039D                     l1334:
  2183                           
  2184                           ;matrix_keypad.c: 64:     {;matrix_keypad.c: 65:         return 6;
  2185     039D  3006               	movlw	6
  2186     039E  2BF0               	goto	l169
  2187     039F                     l178:
  2188                           
  2189                           ;matrix_keypad.c: 68:     RD3 = 1;
  2190     039F  1588               	bsf	8,3	;volatile
  2191                           
  2192                           ;matrix_keypad.c: 69:     RD2 = 1;
  2193     03A0  1508               	bsf	8,2	;volatile
  2194                           
  2195                           ;matrix_keypad.c: 70:     RD1 = 0;
  2196     03A1  1088               	bcf	8,1	;volatile
  2197                           
  2198                           ;matrix_keypad.c: 71:     RD0 = 1;
  2199     03A2  1408               	bsf	8,0	;volatile
  2200     03A3                     l1338:
  2201                           
  2202                           ;matrix_keypad.c: 73:     for (i = 100; i--; );
  2203     03A3  3064               	movlw	100
  2204     03A4  00C8               	movwf	scan_keypad@i
  2205     03A5  3000               	movlw	0
  2206     03A6  00C9               	movwf	scan_keypad@i+1
  2207     03A7                     l1340:
  2208     03A7  30FF               	movlw	255
  2209     03A8  07C8               	addwf	scan_keypad@i,f
  2210     03A9  1803               	skipnc
  2211     03AA  0AC9               	incf	scan_keypad@i+1,f
  2212     03AB  30FF               	movlw	255
  2213     03AC  07C9               	addwf	scan_keypad@i+1,f
  2214     03AD  0A48               	incf	scan_keypad@i,w
  2215     03AE  1D03               	skipz
  2216     03AF  2BB4               	goto	u891
  2217     03B0  0A49               	incf	scan_keypad@i+1,w
  2218     03B1  1D03               	btfss	3,2
  2219     03B2  2BB4               	goto	u891
  2220     03B3  2BB5               	goto	u890
  2221     03B4                     u891:
  2222     03B4  2BA7               	goto	l1340
  2223     03B5                     u890:
  2224     03B5                     l184:
  2225                           
  2226                           ;matrix_keypad.c: 75:     if (RB0 == 0)
  2227     03B5  1806               	btfsc	6,0	;volatile
  2228     03B6  2BB8               	goto	u901
  2229     03B7  2BB9               	goto	u900
  2230     03B8                     u901:
  2231     03B8  2BBB               	goto	l185
  2232     03B9                     u900:
  2233     03B9                     l1342:
  2234                           
  2235                           ;matrix_keypad.c: 76:     {;matrix_keypad.c: 77:         return 7;
  2236     03B9  3007               	movlw	7
  2237     03BA  2BF0               	goto	l169
  2238     03BB                     l185:	
  2239                           ;matrix_keypad.c: 79:     else if (RB1 == 0)
  2240                           
  2241     03BB  1886               	btfsc	6,1	;volatile
  2242     03BC  2BBE               	goto	u911
  2243     03BD  2BBF               	goto	u910
  2244     03BE                     u911:
  2245     03BE  2BC1               	goto	l187
  2246     03BF                     u910:
  2247     03BF                     l1348:
  2248                           
  2249                           ;matrix_keypad.c: 80:     {;matrix_keypad.c: 81:         return 8;
  2250     03BF  3008               	movlw	8
  2251     03C0  2BF0               	goto	l169
  2252     03C1                     l187:	
  2253                           ;matrix_keypad.c: 83:     else if (RB2 == 0)
  2254                           
  2255     03C1  1906               	btfsc	6,2	;volatile
  2256     03C2  2BC4               	goto	u921
  2257     03C3  2BC5               	goto	u920
  2258     03C4                     u921:
  2259     03C4  2BC7               	goto	l186
  2260     03C5                     u920:
  2261     03C5                     l1354:
  2262                           
  2263                           ;matrix_keypad.c: 84:     {;matrix_keypad.c: 85:         return 9;
  2264     03C5  3009               	movlw	9
  2265     03C6  2BF0               	goto	l169
  2266     03C7                     l186:
  2267                           
  2268                           ;matrix_keypad.c: 88:     RD3 = 1;
  2269     03C7  1588               	bsf	8,3	;volatile
  2270                           
  2271                           ;matrix_keypad.c: 89:     RD2 = 1;
  2272     03C8  1508               	bsf	8,2	;volatile
  2273                           
  2274                           ;matrix_keypad.c: 90:     RD1 = 1;
  2275     03C9  1488               	bsf	8,1	;volatile
  2276                           
  2277                           ;matrix_keypad.c: 91:     RD0 = 0;
  2278     03CA  1008               	bcf	8,0	;volatile
  2279     03CB                     l1358:
  2280                           
  2281                           ;matrix_keypad.c: 93:     for (i = 100; i--; );
  2282     03CB  3064               	movlw	100
  2283     03CC  00C8               	movwf	scan_keypad@i
  2284     03CD  3000               	movlw	0
  2285     03CE  00C9               	movwf	scan_keypad@i+1
  2286     03CF                     l1360:
  2287     03CF  30FF               	movlw	255
  2288     03D0  07C8               	addwf	scan_keypad@i,f
  2289     03D1  1803               	skipnc
  2290     03D2  0AC9               	incf	scan_keypad@i+1,f
  2291     03D3  30FF               	movlw	255
  2292     03D4  07C9               	addwf	scan_keypad@i+1,f
  2293     03D5  0A48               	incf	scan_keypad@i,w
  2294     03D6  1D03               	skipz
  2295     03D7  2BDC               	goto	u931
  2296     03D8  0A49               	incf	scan_keypad@i+1,w
  2297     03D9  1D03               	btfss	3,2
  2298     03DA  2BDC               	goto	u931
  2299     03DB  2BDD               	goto	u930
  2300     03DC                     u931:
  2301     03DC  2BCF               	goto	l1360
  2302     03DD                     u930:
  2303     03DD                     l192:
  2304                           
  2305                           ;matrix_keypad.c: 95:     if (RB0 == 0)
  2306     03DD  1806               	btfsc	6,0	;volatile
  2307     03DE  2BE0               	goto	u941
  2308     03DF  2BE1               	goto	u940
  2309     03E0                     u941:
  2310     03E0  2BE3               	goto	l193
  2311     03E1                     u940:
  2312     03E1                     l1362:
  2313                           
  2314                           ;matrix_keypad.c: 96:     {;matrix_keypad.c: 97:         return '*';
  2315     03E1  302A               	movlw	42
  2316     03E2  2BF0               	goto	l169
  2317     03E3                     l193:	
  2318                           ;matrix_keypad.c: 99:     else if (RB1 == 0)
  2319                           
  2320     03E3  1886               	btfsc	6,1	;volatile
  2321     03E4  2BE6               	goto	u951
  2322     03E5  2BE7               	goto	u950
  2323     03E6                     u951:
  2324     03E6  2BE9               	goto	l195
  2325     03E7                     u950:
  2326     03E7                     l1368:
  2327                           
  2328                           ;matrix_keypad.c: 100:     {;matrix_keypad.c: 101:         return 0;
  2329     03E7  3000               	movlw	0
  2330     03E8  2BF0               	goto	l169
  2331     03E9                     l195:	
  2332                           ;matrix_keypad.c: 103:     else if (RB2 == 0)
  2333                           
  2334     03E9  1906               	btfsc	6,2	;volatile
  2335     03EA  2BEC               	goto	u961
  2336     03EB  2BED               	goto	u960
  2337     03EC                     u961:
  2338     03EC  2BEF               	goto	l1378
  2339     03ED                     u960:
  2340     03ED                     l1374:
  2341                           
  2342                           ;matrix_keypad.c: 104:     {;matrix_keypad.c: 105:         return '#';
  2343     03ED  3023               	movlw	35
  2344     03EE  2BF0               	goto	l169
  2345     03EF                     l1378:
  2346                           
  2347                           ;matrix_keypad.c: 108:     return 0xFF;
  2348     03EF  30FF               	movlw	255
  2349     03F0                     l169:
  2350     03F0  0008               	return
  2351     03F1                     __end_of_scan_keypad:
  2352                           
  2353                           	psect	text3
  2354     0654                     __ptext3:	
  2355 ;; *************** function _init_config *****************
  2356 ;; Defined at:
  2357 ;;		line 33 in file "main.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0
  2374 ;;      Totals:         0       0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 5
  2378 ;; This function calls:
  2379 ;;		_clcd_print
  2380 ;;		_init_clcd
  2381 ;;		_init_matrix_keypad
  2382 ;;		_init_timer0
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388     0654                     _init_config:	
  2389                           ;psect for function _init_config
  2390                           
  2391     0654                     l1402:	
  2392                           ;incstack = 0
  2393                           ; Regs used in _init_config: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2394                           
  2395                           
  2396                           ;main.c: 35:     init_config();
  2397     0654  178B               	bsf	11,7	;volatile
  2398     0655                     l1404:
  2399                           
  2400                           ;main.c: 36: 
  2401     0655  120A  118A  2694  120A  118A  	fcall	_init_clcd
  2402                           
  2403                           ;main.c: 37:     while (1) {
  2404     065A  120A  118A  2684  120A  118A  	fcall	_init_matrix_keypad
  2405                           
  2406                           ;main.c: 38: 
  2407     065F  120A  118A  269F  120A  118A  	fcall	_init_timer0
  2408     0664                     l1406:
  2409                           
  2410                           ;main.c: 39:         key = read_matrix_keypad(1);
  2411     0664  3080               	movlw	128
  2412     0665  1283               	bcf	3,5	;RP0=0, select bank0
  2413     0666  1303               	bcf	3,6	;RP1=0, select bank0
  2414     0667  00CC               	movwf	clcd_print@addr
  2415     0668  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2416     0669  120A  118A  25FF  120A  118A  	fcall	_clcd_print
  2417     066E                     l30:
  2418     066E  0008               	return
  2419     066F                     __end_of_init_config:
  2420                           
  2421                           	psect	text4
  2422     069F                     __ptext4:	
  2423 ;; *************** function _init_timer0 *****************
  2424 ;; Defined at:
  2425 ;;		line 3 in file "timers.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2439 ;;      Params:         0       0       0       0       0
  2440 ;;      Locals:         0       0       0       0       0
  2441 ;;      Temps:          0       0       0       0       0
  2442 ;;      Totals:         0       0       0       0       0
  2443 ;;Total ram usage:        0 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; Hardware stack levels required when called: 2
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_init_config
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453     069F                     _init_timer0:	
  2454                           ;psect for function _init_timer0
  2455                           
  2456     069F                     l1284:	
  2457                           ;incstack = 0
  2458                           ; Regs used in _init_timer0: [wreg]
  2459                           
  2460                           
  2461                           ;timers.c: 6:     T0CS = 0;
  2462     069F  1683               	bsf	3,5	;RP0=1, select bank1
  2463     06A0  1303               	bcf	3,6	;RP1=0, select bank1
  2464     06A1  1281               	bcf	1,5	;volatile
  2465                           
  2466                           ;timers.c: 9:     PSA = 1;
  2467     06A2  1581               	bsf	1,3	;volatile
  2468     06A3                     l1286:
  2469                           
  2470                           ;timers.c: 11:     TMR0 = 6;
  2471     06A3  3006               	movlw	6
  2472     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2473     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2474     06A6  0081               	movwf	1	;volatile
  2475     06A7                     l216:
  2476     06A7  0008               	return
  2477     06A8                     __end_of_init_timer0:
  2478                           
  2479                           	psect	text5
  2480     0684                     __ptext5:	
  2481 ;; *************** function _init_matrix_keypad *****************
  2482 ;; Defined at:
  2483 ;;		line 4 in file "matrix_keypad.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;		None
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2497 ;;      Params:         0       0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0
  2500 ;;      Totals:         0       0       0       0       0
  2501 ;;Total ram usage:        0 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 2
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_init_config
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511     0684                     _init_matrix_keypad:	
  2512                           ;psect for function _init_matrix_keypad
  2513                           
  2514     0684                     l1272:	
  2515                           ;incstack = 0
  2516                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  2517                           
  2518                           
  2519                           ;matrix_keypad.c: 8:     TRISB = TRISB | 0x07;
  2520     0684  1683               	bsf	3,5	;RP0=1, select bank1
  2521     0685  1303               	bcf	3,6	;RP1=0, select bank1
  2522     0686  0806               	movf	6,w	;volatile
  2523     0687  3807               	iorlw	7
  2524     0688  0086               	movwf	6	;volatile
  2525                           
  2526                           ;matrix_keypad.c: 12:     TRISD = TRISD & 0xF0;
  2527     0689  0808               	movf	8,w	;volatile
  2528     068A  39F0               	andlw	240
  2529     068B  0088               	movwf	8	;volatile
  2530     068C                     l1274:
  2531                           
  2532                           ;matrix_keypad.c: 15:     nRBPU = 0;
  2533     068C  1381               	bcf	1,7	;volatile
  2534     068D                     l1276:
  2535                           
  2536                           ;matrix_keypad.c: 18:     RD3 = 1;
  2537     068D  1283               	bcf	3,5	;RP0=0, select bank0
  2538     068E  1303               	bcf	3,6	;RP1=0, select bank0
  2539     068F  1588               	bsf	8,3	;volatile
  2540     0690                     l1278:
  2541                           
  2542                           ;matrix_keypad.c: 19:     RD2 = 1;
  2543     0690  1508               	bsf	8,2	;volatile
  2544     0691                     l1280:
  2545                           
  2546                           ;matrix_keypad.c: 20:     RD1 = 1;
  2547     0691  1488               	bsf	8,1	;volatile
  2548     0692                     l1282:
  2549                           
  2550                           ;matrix_keypad.c: 21:     RD0 = 1;
  2551     0692  1408               	bsf	8,0	;volatile
  2552     0693                     l162:
  2553     0693  0008               	return
  2554     0694                     __end_of_init_matrix_keypad:
  2555                           
  2556                           	psect	text6
  2557     0694                     __ptext6:	
  2558 ;; *************** function _init_clcd *****************
  2559 ;; Defined at:
  2560 ;;		line 44 in file "clcd.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0, pclath, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2574 ;;      Params:         0       0       0       0       0
  2575 ;;      Locals:         0       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0
  2577 ;;      Totals:         0       0       0       0       0
  2578 ;;Total ram usage:        0 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 4
  2581 ;; This function calls:
  2582 ;;		_init_display_controller
  2583 ;; This function is called by:
  2584 ;;		_init_config
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588     0694                     _init_clcd:	
  2589                           ;psect for function _init_clcd
  2590                           
  2591     0694                     l1264:	
  2592                           ;incstack = 0
  2593                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  2594                           
  2595                           
  2596                           ;clcd.c: 47:     TRISD = 0x00;
  2597     0694  1683               	bsf	3,5	;RP0=1, select bank1
  2598     0695  1303               	bcf	3,6	;RP1=0, select bank1
  2599     0696  0188               	clrf	8	;volatile
  2600     0697                     l1266:
  2601                           
  2602                           ;clcd.c: 50:     TRISE2 = 0;
  2603     0697  1109               	bcf	9,2	;volatile
  2604     0698                     l1268:
  2605                           
  2606                           ;clcd.c: 51:     TRISE1 = 0;
  2607     0698  1089               	bcf	9,1	;volatile
  2608     0699                     l1270:
  2609                           
  2610                           ;clcd.c: 53:     init_display_controller();
  2611     0699  120A  118A  23F1  120A  118A  	fcall	_init_display_controller
  2612     069E                     l130:
  2613     069E  0008               	return
  2614     069F                     __end_of_init_clcd:
  2615                           
  2616                           	psect	text7
  2617     03F1                     __ptext7:	
  2618 ;; *************** function _init_display_controller *****************
  2619 ;; Defined at:
  2620 ;;		line 21 in file "clcd.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2, status,0, pclath, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2634 ;;      Params:         0       0       0       0       0
  2635 ;;      Locals:         0       0       0       0       0
  2636 ;;      Temps:          0       2       0       0       0
  2637 ;;      Totals:         0       2       0       0       0
  2638 ;;Total ram usage:        2 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 3
  2641 ;; This function calls:
  2642 ;;		_clcd_write@clcd$F109
  2643 ;; This function is called by:
  2644 ;;		_init_clcd
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648     03F1                     _init_display_controller:	
  2649                           ;psect for function _init_display_controller
  2650                           
  2651     03F1                     l1240:	
  2652                           ;incstack = 0
  2653                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  2654                           
  2655                           
  2656                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  2657     03F1  30C3               	movlw	195
  2658     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2659     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2660     03F4  00CD               	movwf	??_init_display_controller+1
  2661     03F5  30CC               	movlw	204
  2662     03F6  00CC               	movwf	??_init_display_controller
  2663     03F7                     u1537:
  2664     03F7  0BCC               	decfsz	??_init_display_controller,f
  2665     03F8  2BF7               	goto	u1537
  2666     03F9  0BCD               	decfsz	??_init_display_controller+1,f
  2667     03FA  2BF7               	goto	u1537
  2668     03FB  0000               	nop
  2669     03FC                     l1242:
  2670                           
  2671                           ;clcd.c: 27:     clcd_write(0x33, 0);
  2672     03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2673     03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2674     03FE  01C8               	clrf	clcd_write@clcd$F109@mode
  2675     03FF  3033               	movlw	51
  2676     0400  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F109
  2677     0405                     l1244:
  2678                           
  2679                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2680     0405  301B               	movlw	27
  2681     0406  1283               	bcf	3,5	;RP0=0, select bank0
  2682     0407  1303               	bcf	3,6	;RP1=0, select bank0
  2683     0408  00CD               	movwf	??_init_display_controller+1
  2684     0409  309D               	movlw	157
  2685     040A  00CC               	movwf	??_init_display_controller
  2686     040B                     u1547:
  2687     040B  0BCC               	decfsz	??_init_display_controller,f
  2688     040C  2C0B               	goto	u1547
  2689     040D  0BCD               	decfsz	??_init_display_controller+1,f
  2690     040E  2C0B               	goto	u1547
  2691     040F  2C10               	nop2
  2692                           
  2693                           ;clcd.c: 29:     clcd_write(0x33, 0);
  2694     0410  1283               	bcf	3,5	;RP0=0, select bank0
  2695     0411  1303               	bcf	3,6	;RP1=0, select bank0
  2696     0412  01C8               	clrf	clcd_write@clcd$F109@mode
  2697     0413  3033               	movlw	51
  2698     0414  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F109
  2699     0419                     l1246:
  2700                           
  2701                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2702     0419  30A5               	movlw	165
  2703     041A  1283               	bcf	3,5	;RP0=0, select bank0
  2704     041B  1303               	bcf	3,6	;RP1=0, select bank0
  2705     041C  00CC               	movwf	??_init_display_controller
  2706     041D                     u1557:
  2707     041D  0BCC               	decfsz	??_init_display_controller,f
  2708     041E  2C1D               	goto	u1557
  2709     041F  2C20               	nop2
  2710     0420                     l1248:
  2711                           
  2712                           ;clcd.c: 31:     clcd_write(0x33, 0);
  2713     0420  1283               	bcf	3,5	;RP0=0, select bank0
  2714     0421  1303               	bcf	3,6	;RP1=0, select bank0
  2715     0422  01C8               	clrf	clcd_write@clcd$F109@mode
  2716     0423  3033               	movlw	51
  2717     0424  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F109
  2718     0429                     l1250:
  2719                           
  2720                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  2721     0429  2C2A               	nop2	;2 cycle nop
  2722     042A  2C2B               	nop2	;2 cycle nop
  2723     042B  0000               	nop
  2724     042C                     l1252:
  2725                           
  2726                           ;clcd.c: 34:     clcd_write(0x02, 0);
  2727     042C  1283               	bcf	3,5	;RP0=0, select bank0
  2728     042D  1303               	bcf	3,6	;RP1=0, select bank0
  2729     042E  01C8               	clrf	clcd_write@clcd$F109@mode
  2730     042F  3002               	movlw	2
  2731     0430  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F109
  2732     0435                     l1254:
  2733                           
  2734                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2735     0435  30A5               	movlw	165
  2736     0436  1283               	bcf	3,5	;RP0=0, select bank0
  2737     0437  1303               	bcf	3,6	;RP1=0, select bank0
  2738     0438  00CC               	movwf	??_init_display_controller
  2739     0439                     u1567:
  2740     0439  0BCC               	decfsz	??_init_display_controller,f
  2741     043A  2C39               	goto	u1567
  2742     043B  2C3C               	nop2
  2743                           
  2744                           ;clcd.c: 36:     clcd_write(0x28, 0);
  2745     043C  1283               	bcf	3,5	;RP0=0, select bank0
  2746     043D  1303               	bcf	3,6	;RP1=0, select bank0
  2747     043E  01C8               	clrf	clcd_write@clcd$F109@mode
  2748     043F  3028               	movlw	40
  2749     0440  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F109
  2750     0445                     l1256:
  2751                           
  2752                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2753     0445  30A5               	movlw	165
  2754     0446  1283               	bcf	3,5	;RP0=0, select bank0
  2755     0447  1303               	bcf	3,6	;RP1=0, select bank0
  2756     0448  00CC               	movwf	??_init_display_controller
  2757     0449                     u1577:
  2758     0449  0BCC               	decfsz	??_init_display_controller,f
  2759     044A  2C49               	goto	u1577
  2760     044B  2C4C               	nop2
  2761     044C                     l1258:
  2762                           
  2763                           ;clcd.c: 38:     clcd_write(0x01, 0);
  2764     044C  1283               	bcf	3,5	;RP0=0, select bank0
  2765     044D  1303               	bcf	3,6	;RP1=0, select bank0
  2766     044E  01C8               	clrf	clcd_write@clcd$F109@mode
  2767     044F  3001               	movlw	1
  2768     0450  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F109
  2769                           
  2770                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2771     0455  3004               	movlw	4
  2772     0456  1283               	bcf	3,5	;RP0=0, select bank0
  2773     0457  1303               	bcf	3,6	;RP1=0, select bank0
  2774     0458  00CD               	movwf	??_init_display_controller+1
  2775     0459  303D               	movlw	61
  2776     045A  00CC               	movwf	??_init_display_controller
  2777     045B                     u1587:
  2778     045B  0BCC               	decfsz	??_init_display_controller,f
  2779     045C  2C5B               	goto	u1587
  2780     045D  0BCD               	decfsz	??_init_display_controller+1,f
  2781     045E  2C5B               	goto	u1587
  2782     045F                     l1260:
  2783                           
  2784                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  2785     045F  1283               	bcf	3,5	;RP0=0, select bank0
  2786     0460  1303               	bcf	3,6	;RP1=0, select bank0
  2787     0461  01C8               	clrf	clcd_write@clcd$F109@mode
  2788     0462  300C               	movlw	12
  2789     0463  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F109
  2790     0468                     l1262:
  2791                           
  2792                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2793     0468  30A5               	movlw	165
  2794     0469  1283               	bcf	3,5	;RP0=0, select bank0
  2795     046A  1303               	bcf	3,6	;RP1=0, select bank0
  2796     046B  00CC               	movwf	??_init_display_controller
  2797     046C                     u1597:
  2798     046C  0BCC               	decfsz	??_init_display_controller,f
  2799     046D  2C6C               	goto	u1597
  2800     046E  2C6F               	nop2
  2801     046F                     l127:
  2802     046F  0008               	return
  2803     0470                     __end_of_init_display_controller:
  2804                           
  2805                           	psect	text8
  2806     05FF                     __ptext8:	
  2807 ;; *************** function _clcd_print *****************
  2808 ;; Defined at:
  2809 ;;		line 62 in file "clcd.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  str             1    wreg     PTR const unsigned char 
  2812 ;;		 -> STR_5(5), STR_4(17), STR_3(17), STR_2(17), 
  2813 ;;		 -> STR_1(17), 
  2814 ;;  addr            1    4[BANK0 ] unsigned char 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  str             1    5[BANK0 ] PTR const unsigned char 
  2817 ;;		 -> STR_5(5), STR_4(17), STR_3(17), STR_2(17), 
  2818 ;;		 -> STR_1(17), 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       1       0       0       0
  2829 ;;      Locals:         0       1       0       0       0
  2830 ;;      Temps:          0       0       0       0       0
  2831 ;;      Totals:         0       2       0       0       0
  2832 ;;Total ram usage:        2 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 3
  2835 ;; This function calls:
  2836 ;;		_clcd_write@clcd$F109
  2837 ;; This function is called by:
  2838 ;;		_init_config
  2839 ;;		_main
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843     05FF                     _clcd_print:	
  2844                           ;psect for function _clcd_print
  2845                           
  2846                           
  2847                           ;incstack = 0
  2848                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2849                           ;clcd_print@str stored from wreg
  2850     05FF  1283               	bcf	3,5	;RP0=0, select bank0
  2851     0600  1303               	bcf	3,6	;RP1=0, select bank0
  2852     0601  00CD               	movwf	clcd_print@str
  2853     0602                     l1288:
  2854                           
  2855                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  2856     0602  01C8               	clrf	clcd_write@clcd$F109@mode
  2857     0603  084C               	movf	clcd_print@addr,w
  2858     0604  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F109
  2859                           
  2860                           ;clcd.c: 66:     while (*str != '\0')
  2861     0609  2E1E               	goto	l1294
  2862     060A                     l1290:
  2863                           
  2864                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  2865     060A  01C8               	clrf	clcd_write@clcd$F109@mode
  2866     060B  0AC8               	incf	clcd_write@clcd$F109@mode,f
  2867     060C  084D               	movf	clcd_print@str,w
  2868     060D  0084               	movwf	4
  2869     060E  120A  118A  2500  120A  118A  	fcall	stringdir
  2870     0613  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F109
  2871     0618                     l1292:
  2872                           
  2873                           ;clcd.c: 69:         str++;
  2874     0618  3001               	movlw	1
  2875     0619  00FF               	movwf	btemp+1
  2876     061A  087F               	movf	btemp+1,w
  2877     061B  1283               	bcf	3,5	;RP0=0, select bank0
  2878     061C  1303               	bcf	3,6	;RP1=0, select bank0
  2879     061D  07CD               	addwf	clcd_print@str,f
  2880     061E                     l1294:
  2881                           
  2882                           ;clcd.c: 66:     while (*str != '\0')
  2883     061E  1283               	bcf	3,5	;RP0=0, select bank0
  2884     061F  1303               	bcf	3,6	;RP1=0, select bank0
  2885     0620  084D               	movf	clcd_print@str,w
  2886     0621  0084               	movwf	4
  2887     0622  120A  118A  2500  120A  118A  	fcall	stringdir
  2888     0627  3A00               	xorlw	0
  2889     0628  1D03               	skipz
  2890     0629  2E2B               	goto	u801
  2891     062A  2E2C               	goto	u800
  2892     062B                     u801:
  2893     062B  2E0A               	goto	l1290
  2894     062C                     u800:
  2895     062C                     l139:
  2896     062C  0008               	return
  2897     062D                     __end_of_clcd_print:
  2898                           
  2899                           	psect	text9
  2900     054F                     __ptext9:	
  2901 ;; *************** function _clcd_write *****************
  2902 ;; Defined at:
  2903 ;;		line 16 in file "main.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  byte            1    wreg     unsigned char 
  2906 ;;  mode            1    0[BANK0 ] unsigned char 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  byte            1    3[BANK0 ] unsigned char 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2918 ;;      Params:         0       1       0       0       0
  2919 ;;      Locals:         0       1       0       0       0
  2920 ;;      Temps:          0       2       0       0       0
  2921 ;;      Totals:         0       4       0       0       0
  2922 ;;Total ram usage:        4 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; Hardware stack levels required when called: 2
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_main
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932     054F                     _clcd_write:	
  2933                           ;psect for function _clcd_write
  2934                           
  2935                           
  2936                           ;incstack = 0
  2937                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  2938                           ;clcd_write@byte stored from wreg
  2939     054F  1283               	bcf	3,5	;RP0=0, select bank0
  2940     0550  1303               	bcf	3,6	;RP1=0, select bank0
  2941     0551  00CB               	movwf	clcd_write@byte
  2942     0552                     l1382:
  2943                           
  2944                           ;main.c: 16:     _delay((unsigned long)((4100)*(20000000/4000000.0)));;main.c: 17: };mai
      +                          n.c: 18: 
  2945     0552  1848               	btfsc	clcd_write@mode,0
  2946     0553  2D55               	goto	u971
  2947     0554  2D59               	goto	u970
  2948     0555                     u971:
  2949     0555  1283               	bcf	3,5	;RP0=0, select bank0
  2950     0556  1303               	bcf	3,6	;RP1=0, select bank0
  2951     0557  1509               	bsf	9,2	;volatile
  2952     0558  2D5C               	goto	u984
  2953     0559                     u970:
  2954     0559  1283               	bcf	3,5	;RP0=0, select bank0
  2955     055A  1303               	bcf	3,6	;RP1=0, select bank0
  2956     055B  1109               	bcf	9,2	;volatile
  2957     055C                     u984:
  2958     055C                     l1384:
  2959                           
  2960                           ;main.c: 20: 
  2961     055C  084B               	movf	clcd_write@byte,w
  2962     055D  39F0               	andlw	240
  2963     055E  0088               	movwf	8	;volatile
  2964     055F                     l1386:
  2965                           
  2966                           ;main.c: 21:     GIE = 1;
  2967     055F  1489               	bsf	9,1	;volatile
  2968     0560                     l1388:
  2969                           
  2970                           ;main.c: 22:     init_clcd();
  2971     0560  30A5               	movlw	165
  2972     0561  1283               	bcf	3,5	;RP0=0, select bank0
  2973     0562  1303               	bcf	3,6	;RP1=0, select bank0
  2974     0563  00C9               	movwf	??_clcd_write
  2975     0564                     u1607:
  2976     0564  0BC9               	decfsz	??_clcd_write,f
  2977     0565  2D64               	goto	u1607
  2978     0566  2D67               	nop2
  2979     0567                     l1390:
  2980                           
  2981                           ;main.c: 23:     init_matrix_keypad();
  2982     0567  1283               	bcf	3,5	;RP0=0, select bank0
  2983     0568  1303               	bcf	3,6	;RP1=0, select bank0
  2984     0569  1089               	bcf	9,1	;volatile
  2985     056A                     l1392:
  2986                           
  2987                           ;main.c: 25:     clcd_print("enter the number", (0x80 + 0));
  2988     056A  084B               	movf	clcd_write@byte,w
  2989     056B  390F               	andlw	15
  2990     056C  00C9               	movwf	??_clcd_write
  2991     056D  3003               	movlw	3
  2992     056E                     u995:
  2993     056E  1003               	clrc
  2994     056F  0DC9               	rlf	??_clcd_write,f
  2995     0570  3EFF               	addlw	-1
  2996     0571  1D03               	skipz
  2997     0572  2D6E               	goto	u995
  2998     0573  1003               	clrc
  2999     0574  0D49               	rlf	??_clcd_write,w
  3000     0575  0088               	movwf	8	;volatile
  3001     0576                     l1394:
  3002                           
  3003                           ;main.c: 26: 
  3004     0576  1489               	bsf	9,1	;volatile
  3005     0577                     l1396:
  3006                           
  3007                           ;main.c: 27: }
  3008     0577  30A5               	movlw	165
  3009     0578  1283               	bcf	3,5	;RP0=0, select bank0
  3010     0579  1303               	bcf	3,6	;RP1=0, select bank0
  3011     057A  00C9               	movwf	??_clcd_write
  3012     057B                     u1617:
  3013     057B  0BC9               	decfsz	??_clcd_write,f
  3014     057C  2D7B               	goto	u1617
  3015     057D  2D7E               	nop2
  3016     057E                     l1398:
  3017                           
  3018                           ;main.c: 28: 
  3019     057E  1283               	bcf	3,5	;RP0=0, select bank0
  3020     057F  1303               	bcf	3,6	;RP1=0, select bank0
  3021     0580  1089               	bcf	9,1	;volatile
  3022     0581                     l1400:
  3023                           
  3024                           ;main.c: 30:     unsigned char key, cur_key;
  3025     0581  301B               	movlw	27
  3026     0582  1283               	bcf	3,5	;RP0=0, select bank0
  3027     0583  1303               	bcf	3,6	;RP1=0, select bank0
  3028     0584  00CA               	movwf	??_clcd_write+1
  3029     0585  309D               	movlw	157
  3030     0586  00C9               	movwf	??_clcd_write
  3031     0587                     u1627:
  3032     0587  0BC9               	decfsz	??_clcd_write,f
  3033     0588  2D87               	goto	u1627
  3034     0589  0BCA               	decfsz	??_clcd_write+1,f
  3035     058A  2D87               	goto	u1627
  3036     058B  2D8C               	nop2
  3037     058C                     l27:
  3038     058C  0008               	return
  3039     058D                     __end_of_clcd_write:
  3040                           
  3041                           	psect	text10
  3042     066F                     __ptext10:	
  3043 ;; *************** function _clcd_putch *****************
  3044 ;; Defined at:
  3045 ;;		line 56 in file "clcd.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  data            1    wreg     const unsigned char 
  3048 ;;  addr            1    4[BANK0 ] unsigned char 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  data            1    5[BANK0 ] const unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0, pclath, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3060 ;;      Params:         0       1       0       0       0
  3061 ;;      Locals:         0       1       0       0       0
  3062 ;;      Temps:          0       0       0       0       0
  3063 ;;      Totals:         0       2       0       0       0
  3064 ;;Total ram usage:        2 bytes
  3065 ;; Hardware stack levels used: 1
  3066 ;; Hardware stack levels required when called: 3
  3067 ;; This function calls:
  3068 ;;		_clcd_write@clcd$F109
  3069 ;; This function is called by:
  3070 ;;		_main
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074     066F                     _clcd_putch:	
  3075                           ;psect for function _clcd_putch
  3076                           
  3077                           
  3078                           ;incstack = 0
  3079                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  3080                           ;clcd_putch@data stored from wreg
  3081     066F  1283               	bcf	3,5	;RP0=0, select bank0
  3082     0670  1303               	bcf	3,6	;RP1=0, select bank0
  3083     0671  00CD               	movwf	clcd_putch@data
  3084     0672                     l1438:
  3085                           
  3086                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
  3087     0672  01C8               	clrf	clcd_write@clcd$F109@mode
  3088     0673  084C               	movf	clcd_putch@addr,w
  3089     0674  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F109
  3090                           
  3091                           ;clcd.c: 59:     clcd_write(data, 1);
  3092     0679  1283               	bcf	3,5	;RP0=0, select bank0
  3093     067A  1303               	bcf	3,6	;RP1=0, select bank0
  3094     067B  01C8               	clrf	clcd_write@clcd$F109@mode
  3095     067C  0AC8               	incf	clcd_write@clcd$F109@mode,f
  3096     067D  084D               	movf	clcd_putch@data,w
  3097     067E  120A  118A  258D  120A  118A  	fcall	_clcd_write@clcd$F109
  3098     0683                     l133:
  3099     0683  0008               	return
  3100     0684                     __end_of_clcd_putch:
  3101                           
  3102                           	psect	text11
  3103     058D                     __ptext11:	
  3104 ;; *************** function _clcd_write@clcd$F109 *****************
  3105 ;; Defined at:
  3106 ;;		line 4 in file "clcd.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  byte            1    wreg     unsigned char 
  3109 ;;  mode            1    0[BANK0 ] unsigned char 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  byte            1    3[BANK0 ] unsigned char 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3121 ;;      Params:         0       1       0       0       0
  3122 ;;      Locals:         0       1       0       0       0
  3123 ;;      Temps:          0       2       0       0       0
  3124 ;;      Totals:         0       4       0       0       0
  3125 ;;Total ram usage:        4 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 2
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_init_display_controller
  3132 ;;		_clcd_putch
  3133 ;;		_clcd_print
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137     058D                     _clcd_write@clcd$F109:	
  3138                           ;psect for function _clcd_write@clcd$F109
  3139                           
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in _clcd_write@clcd$F109: [wreg+status,2+status,0]
  3143                           ;clcd_write@clcd$F109@byte stored from wreg
  3144     058D  1283               	bcf	3,5	;RP0=0, select bank0
  3145     058E  1303               	bcf	3,6	;RP1=0, select bank0
  3146     058F  00CB               	movwf	clcd_write@clcd$F109@byte
  3147     0590                     l1220:
  3148                           
  3149                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
  3150     0590  1848               	btfsc	clcd_write@clcd$F109@mode,0
  3151     0591  2D93               	goto	u771
  3152     0592  2D97               	goto	u770
  3153     0593                     u771:
  3154     0593  1283               	bcf	3,5	;RP0=0, select bank0
  3155     0594  1303               	bcf	3,6	;RP1=0, select bank0
  3156     0595  1509               	bsf	9,2	;volatile
  3157     0596  2D9A               	goto	u784
  3158     0597                     u770:
  3159     0597  1283               	bcf	3,5	;RP0=0, select bank0
  3160     0598  1303               	bcf	3,6	;RP1=0, select bank0
  3161     0599  1109               	bcf	9,2	;volatile
  3162     059A                     u784:
  3163     059A                     l1222:
  3164                           
  3165                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  3166     059A  084B               	movf	clcd_write@clcd$F109@byte,w
  3167     059B  39F0               	andlw	240
  3168     059C  0088               	movwf	8	;volatile
  3169     059D                     l1224:
  3170                           
  3171                           ;clcd.c: 9:     RE1 = 1;
  3172     059D  1489               	bsf	9,1	;volatile
  3173     059E                     l1226:
  3174                           
  3175                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3176     059E  30A5               	movlw	165
  3177     059F  1283               	bcf	3,5	;RP0=0, select bank0
  3178     05A0  1303               	bcf	3,6	;RP1=0, select bank0
  3179     05A1  00C9               	movwf	??_clcd_write@clcd$F109
  3180     05A2                     u1637:
  3181     05A2  0BC9               	decfsz	??_clcd_write@clcd$F109,f
  3182     05A3  2DA2               	goto	u1637
  3183     05A4  2DA5               	nop2
  3184     05A5                     l1228:
  3185                           
  3186                           ;clcd.c: 11:     RE1 = 0;
  3187     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  3188     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  3189     05A7  1089               	bcf	9,1	;volatile
  3190     05A8                     l1230:
  3191                           
  3192                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  3193     05A8  084B               	movf	clcd_write@clcd$F109@byte,w
  3194     05A9  390F               	andlw	15
  3195     05AA  00C9               	movwf	??_clcd_write@clcd$F109
  3196     05AB  3003               	movlw	3
  3197     05AC                     u795:
  3198     05AC  1003               	clrc
  3199     05AD  0DC9               	rlf	??_clcd_write@clcd$F109,f
  3200     05AE  3EFF               	addlw	-1
  3201     05AF  1D03               	skipz
  3202     05B0  2DAC               	goto	u795
  3203     05B1  1003               	clrc
  3204     05B2  0D49               	rlf	??_clcd_write@clcd$F109,w
  3205     05B3  0088               	movwf	8	;volatile
  3206     05B4                     l1232:
  3207                           
  3208                           ;clcd.c: 14:     RE1 = 1;
  3209     05B4  1489               	bsf	9,1	;volatile
  3210     05B5                     l1234:
  3211                           
  3212                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3213     05B5  30A5               	movlw	165
  3214     05B6  1283               	bcf	3,5	;RP0=0, select bank0
  3215     05B7  1303               	bcf	3,6	;RP1=0, select bank0
  3216     05B8  00C9               	movwf	??_clcd_write@clcd$F109
  3217     05B9                     u1647:
  3218     05B9  0BC9               	decfsz	??_clcd_write@clcd$F109,f
  3219     05BA  2DB9               	goto	u1647
  3220     05BB  2DBC               	nop2
  3221     05BC                     l1236:
  3222                           
  3223                           ;clcd.c: 16:     RE1 = 0;
  3224     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3225     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3226     05BE  1089               	bcf	9,1	;volatile
  3227     05BF                     l1238:
  3228                           
  3229                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  3230     05BF  301B               	movlw	27
  3231     05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3232     05C1  1303               	bcf	3,6	;RP1=0, select bank0
  3233     05C2  00CA               	movwf	??_clcd_write@clcd$F109+1
  3234     05C3  309D               	movlw	157
  3235     05C4  00C9               	movwf	??_clcd_write@clcd$F109
  3236     05C5                     u1657:
  3237     05C5  0BC9               	decfsz	??_clcd_write@clcd$F109,f
  3238     05C6  2DC5               	goto	u1657
  3239     05C7  0BCA               	decfsz	??_clcd_write@clcd$F109+1,f
  3240     05C8  2DC5               	goto	u1657
  3241     05C9  2DCA               	nop2
  3242     05CA                     l124:
  3243     05CA  0008               	return
  3244     05CB                     __end_of_clcd_write@clcd$F109:
  3245                           
  3246                           	psect	text12
  3247     05CB                     __ptext12:	
  3248 ;; *************** function _isr *****************
  3249 ;; Defined at:
  3250 ;;		line 4 in file "isr.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3264 ;;      Params:         0       0       0       0       0
  3265 ;;      Locals:         0       0       0       0       0
  3266 ;;      Temps:          3       0       0       0       0
  3267 ;;      Totals:         3       0       0       0       0
  3268 ;;Total ram usage:        3 bytes
  3269 ;; Hardware stack levels used: 1
  3270 ;; Hardware stack levels required when called: 1
  3271 ;; This function calls:
  3272 ;;		___awdiv
  3273 ;; This function is called by:
  3274 ;;		Interrupt level 1
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278     05CB                     _isr:	
  3279                           ;psect for function _isr
  3280                           
  3281     05CB                     i1l1670:
  3282                           
  3283                           ;isr.c: 6:     static unsigned int count = 0;;isr.c: 8:     if (TMR0IF == 1)
  3284     05CB  1D0B               	btfss	11,2	;volatile
  3285     05CC  2DCE               	goto	u151_21
  3286     05CD  2DCF               	goto	u151_20
  3287     05CE                     u151_21:
  3288     05CE  2DF6               	goto	i1l107
  3289     05CF                     u151_20:
  3290     05CF                     i1l1672:
  3291                           
  3292                           ;isr.c: 9:     {;isr.c: 11:         TMR0 = TMR0 + 6 + 2;
  3293     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3294     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3295     05D1  0801               	movf	1,w	;volatile
  3296     05D2  3E08               	addlw	8
  3297     05D3  0081               	movwf	1	;volatile
  3298     05D4                     i1l1674:
  3299                           
  3300                           ;isr.c: 13:         if (++count == (20000/sigma))
  3301     05D4  087C               	movf	_sigma+1,w
  3302     05D5  00F1               	movwf	___awdiv@divisor+1
  3303     05D6  087B               	movf	_sigma,w
  3304     05D7  00F0               	movwf	___awdiv@divisor
  3305     05D8  3020               	movlw	32
  3306     05D9  00F2               	movwf	___awdiv@dividend
  3307     05DA  304E               	movlw	78
  3308     05DB  00F3               	movwf	___awdiv@dividend+1
  3309     05DC  120A  118A  2470  120A  118A  	fcall	___awdiv
  3310     05E1  3001               	movlw	1
  3311     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3312     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3313     05E4  07B8               	addwf	isr@count,f
  3314     05E5  1803               	skipnc
  3315     05E6  0AB9               	incf	isr@count+1,f
  3316     05E7  3000               	movlw	0
  3317     05E8  07B9               	addwf	isr@count+1,f
  3318     05E9  0871               	movf	?___awdiv+1,w
  3319     05EA  0639               	xorwf	isr@count+1,w
  3320     05EB  1D03               	skipz
  3321     05EC  2DEF               	goto	u152_25
  3322     05ED  0870               	movf	?___awdiv,w
  3323     05EE  0638               	xorwf	isr@count,w
  3324     05EF                     u152_25:
  3325     05EF  1D03               	skipz
  3326     05F0  2DF2               	goto	u152_21
  3327     05F1  2DF3               	goto	u152_20
  3328     05F2                     u152_21:
  3329     05F2  2DF5               	goto	i1l1678
  3330     05F3                     u152_20:
  3331     05F3                     i1l1676:
  3332                           
  3333                           ;isr.c: 14:         {;isr.c: 15:             count = 0;
  3334     05F3  01B8               	clrf	isr@count
  3335     05F4  01B9               	clrf	isr@count+1
  3336     05F5                     i1l1678:
  3337                           
  3338                           ;isr.c: 17:         TMR0IF = 0;
  3339     05F5  110B               	bcf	11,2	;volatile
  3340     05F6                     i1l107:
  3341     05F6  087A               	movf	??_isr+2,w
  3342     05F7  00FF               	movwf	btemp+1
  3343     05F8  0879               	movf	??_isr+1,w
  3344     05F9  008A               	movwf	10
  3345     05FA  0E78               	swapf	??_isr,w
  3346     05FB  0083               	movwf	3
  3347     05FC  0EFE               	swapf	btemp,f
  3348     05FD  0E7E               	swapf	btemp,w
  3349     05FE  0009               	retfie
  3350     05FF                     __end_of_isr:
  3351                           
  3352                           	psect	intentry
  3353     0004                     __pintentry:	
  3354                           ;incstack = 0
  3355                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3356                           
  3357     0004                     interrupt_function:
  3358     007E                     saved_w	set	btemp
  3359     0004  00FE               	movwf	btemp
  3360     0005  0E03               	swapf	3,w
  3361     0006  00F8               	movwf	??_isr
  3362     0007  080A               	movf	10,w
  3363     0008  00F9               	movwf	??_isr+1
  3364     0009  087F               	movf	btemp+1,w
  3365     000A  00FA               	movwf	??_isr+2
  3366     000B  120A  118A  2DCB   	ljmp	_isr
  3367                           
  3368                           	psect	text13
  3369     0470                     __ptext13:	
  3370 ;; *************** function ___awdiv *****************
  3371 ;; Defined at:
  3372 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  divisor         2    0[COMMON] int 
  3375 ;;  dividend        2    2[COMMON] int 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  quotient        2    6[COMMON] int 
  3378 ;;  sign            1    5[COMMON] unsigned char 
  3379 ;;  counter         1    4[COMMON] unsigned char 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  2    0[COMMON] int 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0, btemp+1
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3389 ;;      Params:         4       0       0       0       0
  3390 ;;      Locals:         4       0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0
  3392 ;;      Totals:         8       0       0       0       0
  3393 ;;Total ram usage:        8 bytes
  3394 ;; Hardware stack levels used: 1
  3395 ;; This function calls:
  3396 ;;		Nothing
  3397 ;; This function is called by:
  3398 ;;		_isr
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402     0470                     ___awdiv:	
  3403                           ;psect for function ___awdiv
  3404                           
  3405     0470                     i1l1440:	
  3406                           ;incstack = 0
  3407                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3408                           
  3409     0470  01F5               	clrf	___awdiv@sign
  3410     0471                     i1l1442:
  3411     0471  1FF1               	btfss	___awdiv@divisor+1,7
  3412     0472  2C74               	goto	u104_21
  3413     0473  2C75               	goto	u104_20
  3414     0474                     u104_21:
  3415     0474  2C7C               	goto	i1l1448
  3416     0475                     u104_20:
  3417     0475                     i1l1444:
  3418     0475  09F0               	comf	___awdiv@divisor,f
  3419     0476  09F1               	comf	___awdiv@divisor+1,f
  3420     0477  0AF0               	incf	___awdiv@divisor,f
  3421     0478  1903               	skipnz
  3422     0479  0AF1               	incf	___awdiv@divisor+1,f
  3423     047A                     i1l1446:
  3424     047A  01F5               	clrf	___awdiv@sign
  3425     047B  0AF5               	incf	___awdiv@sign,f
  3426     047C                     i1l1448:
  3427     047C  1FF3               	btfss	___awdiv@dividend+1,7
  3428     047D  2C7F               	goto	u105_21
  3429     047E  2C80               	goto	u105_20
  3430     047F                     u105_21:
  3431     047F  2C89               	goto	i1l1454
  3432     0480                     u105_20:
  3433     0480                     i1l1450:
  3434     0480  09F2               	comf	___awdiv@dividend,f
  3435     0481  09F3               	comf	___awdiv@dividend+1,f
  3436     0482  0AF2               	incf	___awdiv@dividend,f
  3437     0483  1903               	skipnz
  3438     0484  0AF3               	incf	___awdiv@dividend+1,f
  3439     0485                     i1l1452:
  3440     0485  3001               	movlw	1
  3441     0486  00FF               	movwf	btemp+1
  3442     0487  087F               	movf	btemp+1,w
  3443     0488  06F5               	xorwf	___awdiv@sign,f
  3444     0489                     i1l1454:
  3445     0489  01F6               	clrf	___awdiv@quotient
  3446     048A  01F7               	clrf	___awdiv@quotient+1
  3447     048B                     i1l1456:
  3448     048B  0870               	movf	___awdiv@divisor,w
  3449     048C  0471               	iorwf	___awdiv@divisor+1,w
  3450     048D  1903               	btfsc	3,2
  3451     048E  2C90               	goto	u106_21
  3452     048F  2C91               	goto	u106_20
  3453     0490                     u106_21:
  3454     0490  2CC8               	goto	i1l1476
  3455     0491                     u106_20:
  3456     0491                     i1l1458:
  3457     0491  01F4               	clrf	___awdiv@counter
  3458     0492  0AF4               	incf	___awdiv@counter,f
  3459     0493  2C9F               	goto	i1l1464
  3460     0494                     i1l1460:
  3461     0494  3001               	movlw	1
  3462     0495                     u107_25:
  3463     0495  1003               	clrc
  3464     0496  0DF0               	rlf	___awdiv@divisor,f
  3465     0497  0DF1               	rlf	___awdiv@divisor+1,f
  3466     0498  3EFF               	addlw	-1
  3467     0499  1D03               	skipz
  3468     049A  2C95               	goto	u107_25
  3469     049B                     i1l1462:
  3470     049B  3001               	movlw	1
  3471     049C  00FF               	movwf	btemp+1
  3472     049D  087F               	movf	btemp+1,w
  3473     049E  07F4               	addwf	___awdiv@counter,f
  3474     049F                     i1l1464:
  3475     049F  1FF1               	btfss	___awdiv@divisor+1,7
  3476     04A0  2CA2               	goto	u108_21
  3477     04A1  2CA3               	goto	u108_20
  3478     04A2                     u108_21:
  3479     04A2  2C94               	goto	i1l1460
  3480     04A3                     u108_20:
  3481     04A3                     i1l1466:
  3482     04A3  3001               	movlw	1
  3483     04A4                     u109_25:
  3484     04A4  1003               	clrc
  3485     04A5  0DF6               	rlf	___awdiv@quotient,f
  3486     04A6  0DF7               	rlf	___awdiv@quotient+1,f
  3487     04A7  3EFF               	addlw	-1
  3488     04A8  1D03               	skipz
  3489     04A9  2CA4               	goto	u109_25
  3490     04AA  0871               	movf	___awdiv@divisor+1,w
  3491     04AB  0273               	subwf	___awdiv@dividend+1,w
  3492     04AC  1D03               	skipz
  3493     04AD  2CB0               	goto	u110_25
  3494     04AE  0870               	movf	___awdiv@divisor,w
  3495     04AF  0272               	subwf	___awdiv@dividend,w
  3496     04B0                     u110_25:
  3497     04B0  1C03               	skipc
  3498     04B1  2CB3               	goto	u110_21
  3499     04B2  2CB4               	goto	u110_20
  3500     04B3                     u110_21:
  3501     04B3  2CBB               	goto	i1l1472
  3502     04B4                     u110_20:
  3503     04B4                     i1l1468:
  3504     04B4  0870               	movf	___awdiv@divisor,w
  3505     04B5  02F2               	subwf	___awdiv@dividend,f
  3506     04B6  0871               	movf	___awdiv@divisor+1,w
  3507     04B7  1C03               	skipc
  3508     04B8  03F3               	decf	___awdiv@dividend+1,f
  3509     04B9  02F3               	subwf	___awdiv@dividend+1,f
  3510     04BA                     i1l1470:
  3511     04BA  1476               	bsf	___awdiv@quotient,0
  3512     04BB                     i1l1472:
  3513     04BB  3001               	movlw	1
  3514     04BC                     u111_25:
  3515     04BC  1003               	clrc
  3516     04BD  0CF1               	rrf	___awdiv@divisor+1,f
  3517     04BE  0CF0               	rrf	___awdiv@divisor,f
  3518     04BF  3EFF               	addlw	-1
  3519     04C0  1D03               	skipz
  3520     04C1  2CBC               	goto	u111_25
  3521     04C2                     i1l1474:
  3522     04C2  3001               	movlw	1
  3523     04C3  02F4               	subwf	___awdiv@counter,f
  3524     04C4  1D03               	btfss	3,2
  3525     04C5  2CC7               	goto	u112_21
  3526     04C6  2CC8               	goto	u112_20
  3527     04C7                     u112_21:
  3528     04C7  2CA3               	goto	i1l1466
  3529     04C8                     u112_20:
  3530     04C8                     i1l1476:
  3531     04C8  0875               	movf	___awdiv@sign,w
  3532     04C9  1903               	btfsc	3,2
  3533     04CA  2CCC               	goto	u113_21
  3534     04CB  2CCD               	goto	u113_20
  3535     04CC                     u113_21:
  3536     04CC  2CD2               	goto	i1l1480
  3537     04CD                     u113_20:
  3538     04CD                     i1l1478:
  3539     04CD  09F6               	comf	___awdiv@quotient,f
  3540     04CE  09F7               	comf	___awdiv@quotient+1,f
  3541     04CF  0AF6               	incf	___awdiv@quotient,f
  3542     04D0  1903               	skipnz
  3543     04D1  0AF7               	incf	___awdiv@quotient+1,f
  3544     04D2                     i1l1480:
  3545     04D2  0877               	movf	___awdiv@quotient+1,w
  3546     04D3  00F1               	movwf	?___awdiv+1
  3547     04D4  0876               	movf	___awdiv@quotient,w
  3548     04D5  00F0               	movwf	?___awdiv
  3549     04D6                     i1l455:
  3550     04D6  0008               	return
  3551     04D7                     __end_of___awdiv:
  3552     007E                     btemp	set	126	;btemp
  3553     007E                     wtemp0	set	126
  3554                           
  3555                           	psect	idloc
  3556                           
  3557                           ;Config register IDLOC0 @ 0x2000
  3558                           ;	unspecified, using default values
  3559     2000                     	org	8192
  3560     2000  3FFF               	dw	16383
  3561                           
  3562                           ;Config register IDLOC1 @ 0x2001
  3563                           ;	unspecified, using default values
  3564     2001                     	org	8193
  3565     2001  3FFF               	dw	16383
  3566                           
  3567                           ;Config register IDLOC2 @ 0x2002
  3568                           ;	unspecified, using default values
  3569     2002                     	org	8194
  3570     2002  3FFF               	dw	16383
  3571                           
  3572                           ;Config register IDLOC3 @ 0x2003
  3573                           ;	unspecified, using default values
  3574     2003                     	org	8195
  3575     2003  3FFF               	dw	16383
  3576                           
  3577                           	psect	config
  3578                           
  3579                           ;Config register CONFIG @ 0x2007
  3580                           ;	Oscillator Selection bits
  3581                           ;	FOSC = 0x3, unprogrammed default
  3582                           ;	Watchdog Timer Enable bit
  3583                           ;	WDTE = OFF, WDT disabled
  3584                           ;	Power-up Timer Enable bit
  3585                           ;	PWRTE = 0x1, unprogrammed default
  3586                           ;	Brown-out Reset Enable bit
  3587                           ;	BOREN = 0x1, unprogrammed default
  3588                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3589                           ;	LVP = 0x1, unprogrammed default
  3590                           ;	Data EEPROM Memory Code Protection bit
  3591                           ;	CPD = 0x1, unprogrammed default
  3592                           ;	Flash Program Memory Write Enable bits
  3593                           ;	WRT = 0x3, unprogrammed default
  3594                           ;	In-Circuit Debugger Mode bit
  3595                           ;	DEBUG = 0x1, unprogrammed default
  3596                           ;	Flash Program Memory Code Protection bit
  3597                           ;	CP = 0x1, unprogrammed default
  3598     2007                     	org	8199
  3599     2007  3FFB               	dw	16379

Data Sizes:
    Strings     73
    Constant    0
    Data        3
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     18      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv

Critical Paths under _main in BANK0

    _main->_clcd_print
    _main->_clcd_putch
    _read_matrix_keypad->_scan_keypad
    _init_config->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write@clcd$F109
    _clcd_print->_clcd_write@clcd$F109
    _clcd_putch->_clcd_write@clcd$F109

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    6904
                                              6 BANK0     12    12      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                        _init_config
                 _read_matrix_keypad
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   2     2      0     203
                                              2 BANK0      2     2      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      92
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    2416
                         _clcd_print
                          _init_clcd
                 _init_matrix_keypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 BANK0      2     2      0
               _clcd_write@clcd$F109
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           2     1      1    1514
                                              4 BANK0      2     1      1
               _clcd_write@clcd$F109
 ---------------------------------------------------------------------------------
 (1) _clcd_write                                           4     3      1     978
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1    1478
                                              4 BANK0      2     1      1
               _clcd_write@clcd$F109
 ---------------------------------------------------------------------------------
 (4) _clcd_write@clcd$F109                                 4     3      1     902
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0     452
                                              8 COMMON     3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write@clcd$F109
   _clcd_putch
     _clcd_write@clcd$F109
   _clcd_write
   _init_config
     _clcd_print
     _init_clcd
       _init_display_controller
         _clcd_write@clcd$F109
     _init_matrix_keypad
     _init_timer0
   _read_matrix_keypad
     _scan_keypad

 _isr (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      3D       5       76.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Oct 30 15:39:50 2023

                              pc 0002                   clcd_print@addr 004C                               l30 066E  
                             l27 058C                               l63 00BC                               l75 01DD  
                             l76 01BA                               l78 0228                               l79 0205  
                   ___awdiv@sign 0075                               fsr 0004               _init_matrix_keypad 0684  
                            l130 069E                              l203 0653                              l124 05CA  
                            l133 0683                              l127 046F                              l216 06A7  
                            l162 0693                              l170 0377                              l139 062C  
                            l171 0371                              l167 0365                              l192 03DD  
                            l184 03B5                              l176 038D                              l168 036B  
                            l193 03E3                              l185 03BB                              l177 0393  
                            l169 03F0                              l186 03C7                              l178 039F  
                            l195 03E9                              l187 03C1                              l179 0399  
                            _GIE 005F                              _RB0 0030                              _RB1 0031  
                            _RB2 0032                              _RD0 0040                              _RD1 0041  
                            _RD2 0042                              _RE1 0049                              _RD3 0043  
                            _RE2 004A                              u800 062C                              u801 062B  
                            u810 0365                              u811 0364                              u900 03B9  
                            u820 0369                              u901 03B8                              u821 0368  
                            u910 03BF                              u830 036F                              u911 03BE  
                            u831 036E                              _PSA 040B                              u920 03C5  
                            u840 0375                              u921 03C4                              u841 0374  
                            u770 0597                              u930 03DD                              u850 038D  
                            u771 0593                              u931 03DC                              u851 038C  
                            u940 03E1                              u860 0391                              u941 03E0  
                            u861 0390                              u950 03E7                              u870 0397  
                            u951 03E6                              u871 0396                              u784 059A  
                            u960 03ED                              u880 039D                              u961 03EC  
                            u881 039C                              u970 0559                              u890 03B5  
                            u795 05AC                              u971 0555                              u891 03B4  
                            u984 055C                              u995 056E                              _isr 05CB  
                 clcd_putch@addr 004C                              fsr0 0004                   clcd_putch@data 004D  
                            indf 0000           ??_clcd_write@clcd$F109 0049              ?_init_matrix_keypad 0070  
                           l1220 0590                             l1300 0357                             l1230 05A8  
                           l1222 059A                             l1302 0369                             l1232 05B4  
                           l1224 059D                             l1400 0581                             l1240 03F1  
                           l1320 037F                             l1234 05B5                             l1226 059E  
                           l1250 0429                             l1242 03FC                             l1402 0654  
                           l1322 0391                             l1314 0375                             l1410 0638  
                           l1236 05BC                             l1228 05A5                             l1260 045F  
                           l1252 042C                             l1244 0405                             l1404 0655  
                           l1340 03A7                             l1308 036F                             l1420 0644  
                           l1412 063D                             l1500 005E                             l1238 05BF  
                           l1262 0468                             l1254 0435                             l1246 0419  
                           l1270 0699                             l1406 0664                             l1342 03B9  
                           l1334 039D                             l1318 037B                             l1422 0649  
                           l1430 064B                             l1510 0087                             l1502 0068  
                           l1256 0445                             l1248 0420                             l1264 0694  
                           l1280 0691                             l1272 0684                             l1360 03CF  
                           l1328 0397                             l1432 0650                             l1408 0630  
                           l1600 0230                             l1520 00B8                             l1512 0096  
                           l1504 006C                             l1290 060A                             l1258 044C  
                           l1266 0697                             l1282 0692                             l1274 068C  
                           l1362 03E1                             l1354 03C5                             l1338 03A3  
                           l1434 0652                             l1418 063F                             l1602 0252  
                           l1610 0278                             l1506 0070                             l1514 009E  
                           l1530 00E6                             l1292 0618                             l1268 0698  
                           l1276 068D                             l1284 069F                             l1348 03BF  
                           l1620 028E                             l1612 0280                             l1604 0254  
                           l1540 010A                             l1532 00EE                             l1516 00AC  
                           l1508 007D                             l1438 0672                             l1390 0567  
                           l1382 0552                             l1294 061E                             l1278 0690  
                           l1286 06A3                             l1374 03ED                             l1358 03CB  
                           l1630 02B5                             l1622 0290                             l1614 0286  
                           l1606 0264                             l1550 0138                             l1542 010E  
                           l1534 00F4                             l1526 00C4                             l1518 00B4  
                           l1392 056A                             l1384 055C                             l1288 0602  
                           l1368 03E7                             l1296 034D                             l1640 02D7  
                           l1632 02BE                             l1624 0297                             l1616 028A  
                           l1608 026E                             l1560 0167                             l1544 0112  
                           l1552 0140                             l1536 00FB                             l1528 00D4  
                           l1394 0576                             l1386 055F                             l1378 03EF  
                           l1298 0353                             l1650 0305                             l1642 02DD  
                           l1634 02C7                             l1626 02A1                             l1618 028C  
                           l1554 014E                             l1546 011F                             l1538 0100  
                           l1570 0193                             l1490 0045                             l1396 0577  
                           l1388 0560                             l1660 032B                             l1644 02E3  
                           l1652 030E                             l1628 02AB                             l1636 02CB  
                           l1580 01C3                             l1572 019A                             l1556 0156  
                           l1548 0129                             l1492 0047                             l1484 0032  
                           l1398 057E                             l1662 0333                             l1654 0316  
                           l1646 02F0                             l1638 02D1                             l1590 01F7  
                           l1582 01C8                             l1574 01A0                             l1566 0171  
                           l1558 0163                             l1494 004C                             l1486 0037  
                           l1664 0337                             l1656 031C                             l1648 02F6  
                           l1592 0200                             l1584 01D4                             l1576 01AC  
                           l1568 0181                             l1496 0052                             l1488 0040  
                           l1666 0339                             l1658 0322                             l1594 020E  
                           l1586 01E5                             l1578 01B5                             l1498 0059  
                           l1668 0340                             l1596 0213                             l1588 01EB  
                           l1598 021F                             ?_isr 0070                             STR_1 0528  
                           STR_2 0506                             STR_3 0539                             STR_4 0517  
                           STR_5 054A                             u1000 063D                             u1001 063C  
                           _T0CS 040D                             u1010 0644                             u1011 0643  
                           u1020 0649                             u1021 0648                             u1030 0650  
                           u1031 064F                             u1200 00B8                             u1201 00B7  
                           u1210 00E6                             u1211 00E5                             u1300 01A0  
                           u1220 00EE                             u1140 0045                             u1301 019F  
                           u1221 00ED                             u1213 00E2                             u1141 0044  
                           u1310 01B5                             u1230 00F4                             u1150 004C  
                           u1311 01B4                             u1231 00F3                             u1151 004B  
                           u1400 0245                             u1320 01C3                             u1240 010E  
                           u1160 0052                             u1401 0243                             u1321 01C2  
                           u1241 010D                             u1161 0051                             u1410 0246  
                           u1330 01E5                             u1250 011F                             u1170 006C  
                           u1331 01E4                             u1251 011E                             u1171 006B  
                           u1500 0337                             u1420 0252                             u1340 01EB  
                           u1260 014E                             u1180 007D                             u1501 0336  
                           u1421 0251                             u1341 01EA                             u1261 014D  
                           u1181 007C                             u1430 0280                             u1350 0200  
                           u1270 0163                             u1190 00AC                             u1431 027F  
                           u1351 01FF                             u1271 0162                             u1255 011B  
                           u1191 00AB                             u1440 0286                             u1360 020E  
                           u1280 0193                             u1441 0285                             u1361 020D  
                           u1281 0192                             u1265 014A                             u1185 0079  
                           u1450 02D1                             u1370 0230                             u1290 019A  
                           u1451 02D0                             u1371 022F                             u1291 0199  
                           u1283 018F                             u1275 015F                             u1195 00A8  
                           u1460 02D7                             u1380 0237                             u1461 02D6  
                           u1381 0235                             u1470 02F0                             u1390 0238  
                           u1607 0564                             u1471 02EF                             u1480 0316  
                           u1617 057B                             u1537 03F7                             u1481 0315  
                           u1490 031C                             u1627 0587                             u1547 040B  
                           u1491 031B                             u1475 02EC                      main@cur_key 0058  
                           u1637 05A2                             u1557 041D                             u1647 05B9  
                           u1567 0439                             u1657 05C5                             u1577 0449  
                           u1587 045B                             u1597 046C                             _TMR0 0001  
                           _main 0032                             btemp 007E                             start 000E  
           ??_init_matrix_keypad 0048                   clcd_write@byte 004B                   clcd_write@mode 0048  
                   main@char_pos 003A                     main@edit_key 0046                            ??_isr 0078  
                          ?_main 0070                  __end_of___awdiv 04D7                  ___awdiv@divisor 0070  
                          i1l107 05F6                            i1l455 04D6                     ?_init_config 0070  
                ___awdiv@counter 0074                            _PORTD 0008                            _TRISB 0086  
                          _TRISD 0088                     ?_init_timer0 0070                            _nRBPU 040F  
             _read_matrix_keypad 062D                            _sigma 007B                            main@i 0050  
                          pclath 000A         clcd_write@clcd$F109@byte 004B         clcd_write@clcd$F109@mode 0048  
            ?_read_matrix_keypad 0070                            status 0003                            wtemp0 007E  
                   ?_scan_keypad 0070                  __initialization 0011                     __end_of_main 034D  
           ??_read_matrix_keypad 004A                           ??_main 004E                 ___awdiv@dividend 0072  
                         u110_20 04B4                           u110_21 04B3                           u110_25 04B0  
                         u111_25 04BC                           u112_20 04C8                           u104_20 0475  
                         i1l1440 0470                           u112_21 04C7                           u104_21 0474  
                         i1l1450 0480                           i1l1442 0471                           i1l1460 0494  
                         i1l1452 0485                           i1l1444 0475                           i1l1470 04BA  
                         i1l1462 049B                           i1l1454 0489                           i1l1446 047A  
                         i1l1480 04D2                           u113_20 04CD                           i1l1472 04BB  
                         i1l1464 049F                           i1l1456 048B                           u105_20 0480  
                         i1l1448 047C                           u113_21 04CC                           u105_21 047F  
                         i1l1474 04C2                           i1l1466 04A3                           i1l1458 0491  
                         i1l1468 04B4                           i1l1476 04C8                           i1l1478 04CD  
                         i1l1670 05CB                           u106_20 0491                           i1l1672 05CF  
                         u106_21 0490                           i1l1674 05D4                           i1l1676 05F3  
                         i1l1678 05F5                           u107_25 0495                           u108_20 04A3  
                         u108_21 04A2                           u109_25 04A4                           u151_20 05CF  
                         u151_21 05CE                           u152_20 05F3                           u152_21 05F2  
                         u152_25 05EF                           _TMR0IF 005A                           _TRISE1 0449  
                         _TRISE2 044A          _init_display_controller 03F1                        ??___awdiv 0074  
               ___awdiv@quotient 0076                           saved_w 007E          __end_of__initialization 002E  
                 __pcstackCOMMON 0070                     __pidataBANK0 06B0                       __pbssBANK0 0020  
      ??_init_display_controller 004C                       _clcd_print 05FF                       _clcd_putch 066F  
                     _clcd_write 054F                       __pmaintext 0032                       __pintentry 0004  
                     __stringtab 0500                          ___awdiv 0470                          __ptext1 062D  
                        __ptext2 034D                          __ptext3 0654                          __ptext4 069F  
                        __ptext5 0684                          __ptext6 0694                          __ptext7 03F1  
                        __ptext8 05FF                          __ptext9 054F  __end_of_init_display_controller 0470  
              __end_of_init_clcd 069F                          main@arr 0020                          main@key 0059  
                        clrloop0 06A9                          main@pos 003C                          main@pwd 0030  
           end_of_initialization 002E                 main@count_letter 0044                      ?_clcd_print 004C  
                    ?_clcd_putch 004C                      ?_clcd_write 0048                    clcd_print@str 004D  
                     main@scroll 0042              start_initialization 0011                     scan_keypad@i 0048  
         read_matrix_keypad@mode 004A           read_matrix_keypad@once 005C                      __end_of_isr 05FF  
                    __pdataBANK0 005A                    ??_init_config 004E                    ??_init_timer0 0048  
                    __pbssCOMMON 007B                        ___latbits 0002                    __pcstackBANK0 0048  
                  ??_scan_keypad 0048     __end_of_clcd_write@clcd$F109 05CB                         ?___awdiv 0070  
                      __pstrings 0500                        _init_clcd 0694              __end_of_init_config 066F  
            __end_of_init_timer0 06A8         ?_init_display_controller 0070                interrupt_function 0004  
                      clear_ram0 06A8                     ??_clcd_print 004D                     ??_clcd_putch 004D  
     __end_of_init_matrix_keypad 0694                     ??_clcd_write 0049              __end_of_scan_keypad 03F1  
                    __stringbase 0505                        main@count 0040               __end_of_clcd_print 062D  
             __end_of_clcd_putch 0684               __end_of_clcd_write 058D                       ?_init_clcd 0070  
          read_matrix_keypad@key 004B       __end_of_read_matrix_keypad 0654               __end_of__stringtab 0506  
                    _init_config 0654                      _init_timer0 069F                         __ptext10 066F  
                       __ptext11 058D                         __ptext12 05CB                         __ptext13 0470  
           _clcd_write@clcd$F109 058D                      _scan_keypad 034D                         main@i_87 0054  
                       main@once 005A                         main@temp 003E                         isr@count 0038  
                    ??_init_clcd 004E            ?_clcd_write@clcd$F109 0048                         intlevel1 0000  
                      stringcode 0500                         stringdir 0500                         stringtab 0500  
