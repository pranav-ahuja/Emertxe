

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Oct 31 18:20:48 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Generated 22/03/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     000C                     	;# 
    77     000D                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0013                     	;# 
    85     0014                     	;# 
    86     0015                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0017                     	;# 
    90     0018                     	;# 
    91     0019                     	;# 
    92     001A                     	;# 
    93     001B                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     001D                     	;# 
    97     001E                     	;# 
    98     001F                     	;# 
    99     0081                     	;# 
   100     0085                     	;# 
   101     0086                     	;# 
   102     0087                     	;# 
   103     0088                     	;# 
   104     0089                     	;# 
   105     008C                     	;# 
   106     008D                     	;# 
   107     008E                     	;# 
   108     0091                     	;# 
   109     0092                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     010C                     	;# 
   119     010D                     	;# 
   120     010E                     	;# 
   121     010F                     	;# 
   122     018C                     	;# 
   123     018D                     	;# 
   124     0000                     	;# 
   125     0001                     	;# 
   126     0002                     	;# 
   127     0003                     	;# 
   128     0004                     	;# 
   129     0005                     	;# 
   130     0006                     	;# 
   131     0007                     	;# 
   132     0008                     	;# 
   133     0009                     	;# 
   134     000A                     	;# 
   135     000B                     	;# 
   136     000C                     	;# 
   137     000D                     	;# 
   138     000E                     	;# 
   139     000E                     	;# 
   140     000F                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0014                     	;# 
   146     0015                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     001A                     	;# 
   153     001B                     	;# 
   154     001B                     	;# 
   155     001C                     	;# 
   156     001D                     	;# 
   157     001E                     	;# 
   158     001F                     	;# 
   159     0081                     	;# 
   160     0085                     	;# 
   161     0086                     	;# 
   162     0087                     	;# 
   163     0088                     	;# 
   164     0089                     	;# 
   165     008C                     	;# 
   166     008D                     	;# 
   167     008E                     	;# 
   168     0091                     	;# 
   169     0092                     	;# 
   170     0093                     	;# 
   171     0094                     	;# 
   172     0098                     	;# 
   173     0099                     	;# 
   174     009C                     	;# 
   175     009D                     	;# 
   176     009E                     	;# 
   177     009F                     	;# 
   178     010C                     	;# 
   179     010D                     	;# 
   180     010E                     	;# 
   181     010F                     	;# 
   182     018C                     	;# 
   183     018D                     	;# 
   184     0000                     	;# 
   185     0001                     	;# 
   186     0002                     	;# 
   187     0003                     	;# 
   188     0004                     	;# 
   189     0005                     	;# 
   190     0006                     	;# 
   191     0007                     	;# 
   192     0008                     	;# 
   193     0009                     	;# 
   194     000A                     	;# 
   195     000B                     	;# 
   196     000C                     	;# 
   197     000D                     	;# 
   198     000E                     	;# 
   199     000E                     	;# 
   200     000F                     	;# 
   201     0010                     	;# 
   202     0011                     	;# 
   203     0012                     	;# 
   204     0013                     	;# 
   205     0014                     	;# 
   206     0015                     	;# 
   207     0015                     	;# 
   208     0016                     	;# 
   209     0017                     	;# 
   210     0018                     	;# 
   211     0019                     	;# 
   212     001A                     	;# 
   213     001B                     	;# 
   214     001B                     	;# 
   215     001C                     	;# 
   216     001D                     	;# 
   217     001E                     	;# 
   218     001F                     	;# 
   219     0081                     	;# 
   220     0085                     	;# 
   221     0086                     	;# 
   222     0087                     	;# 
   223     0088                     	;# 
   224     0089                     	;# 
   225     008C                     	;# 
   226     008D                     	;# 
   227     008E                     	;# 
   228     0091                     	;# 
   229     0092                     	;# 
   230     0093                     	;# 
   231     0094                     	;# 
   232     0098                     	;# 
   233     0099                     	;# 
   234     009C                     	;# 
   235     009D                     	;# 
   236     009E                     	;# 
   237     009F                     	;# 
   238     010C                     	;# 
   239     010D                     	;# 
   240     010E                     	;# 
   241     010F                     	;# 
   242     018C                     	;# 
   243     018D                     	;# 
   244     0000                     	;# 
   245     0001                     	;# 
   246     0002                     	;# 
   247     0003                     	;# 
   248     0004                     	;# 
   249     0005                     	;# 
   250     0006                     	;# 
   251     0007                     	;# 
   252     0008                     	;# 
   253     0009                     	;# 
   254     000A                     	;# 
   255     000B                     	;# 
   256     000C                     	;# 
   257     000D                     	;# 
   258     000E                     	;# 
   259     000E                     	;# 
   260     000F                     	;# 
   261     0010                     	;# 
   262     0011                     	;# 
   263     0012                     	;# 
   264     0013                     	;# 
   265     0014                     	;# 
   266     0015                     	;# 
   267     0015                     	;# 
   268     0016                     	;# 
   269     0017                     	;# 
   270     0018                     	;# 
   271     0019                     	;# 
   272     001A                     	;# 
   273     001B                     	;# 
   274     001B                     	;# 
   275     001C                     	;# 
   276     001D                     	;# 
   277     001E                     	;# 
   278     001F                     	;# 
   279     0081                     	;# 
   280     0085                     	;# 
   281     0086                     	;# 
   282     0087                     	;# 
   283     0088                     	;# 
   284     0089                     	;# 
   285     008C                     	;# 
   286     008D                     	;# 
   287     008E                     	;# 
   288     0091                     	;# 
   289     0092                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0098                     	;# 
   293     0099                     	;# 
   294     009C                     	;# 
   295     009D                     	;# 
   296     009E                     	;# 
   297     009F                     	;# 
   298     010C                     	;# 
   299     010D                     	;# 
   300     010E                     	;# 
   301     010F                     	;# 
   302     018C                     	;# 
   303     018D                     	;# 
   304     0000                     	;# 
   305     0001                     	;# 
   306     0002                     	;# 
   307     0003                     	;# 
   308     0004                     	;# 
   309     0005                     	;# 
   310     0006                     	;# 
   311     0007                     	;# 
   312     0008                     	;# 
   313     0009                     	;# 
   314     000A                     	;# 
   315     000B                     	;# 
   316     000C                     	;# 
   317     000D                     	;# 
   318     000E                     	;# 
   319     000E                     	;# 
   320     000F                     	;# 
   321     0010                     	;# 
   322     0011                     	;# 
   323     0012                     	;# 
   324     0013                     	;# 
   325     0014                     	;# 
   326     0015                     	;# 
   327     0015                     	;# 
   328     0016                     	;# 
   329     0017                     	;# 
   330     0018                     	;# 
   331     0019                     	;# 
   332     001A                     	;# 
   333     001B                     	;# 
   334     001B                     	;# 
   335     001C                     	;# 
   336     001D                     	;# 
   337     001E                     	;# 
   338     001F                     	;# 
   339     0081                     	;# 
   340     0085                     	;# 
   341     0086                     	;# 
   342     0087                     	;# 
   343     0088                     	;# 
   344     0089                     	;# 
   345     008C                     	;# 
   346     008D                     	;# 
   347     008E                     	;# 
   348     0091                     	;# 
   349     0092                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0098                     	;# 
   353     0099                     	;# 
   354     009C                     	;# 
   355     009D                     	;# 
   356     009E                     	;# 
   357     009F                     	;# 
   358     010C                     	;# 
   359     010D                     	;# 
   360     010E                     	;# 
   361     010F                     	;# 
   362     018C                     	;# 
   363     018D                     	;# 
   364     0008                     _PORTD	set	8
   365     0013                     _SSPBUF	set	19
   366     0049                     _RE1	set	73
   367     004A                     _RE2	set	74
   368     00A3                     _SSPM3	set	163
   369     00A5                     _SSPEN	set	165
   370     0088                     _TRISD	set	136
   371     0091                     _SSPCON2	set	145
   372     0093                     _SSPADD	set	147
   373     0449                     _TRISE1	set	1097
   374     044A                     _TRISE2	set	1098
   375     048C                     _ACKEN	set	1164
   376     048D                     _ACKDT	set	1165
   377     048B                     _RCEN	set	1163
   378     048E                     _ACKSTAT	set	1166
   379     048A                     _PEN	set	1162
   380     0489                     _RSEN	set	1161
   381     0488                     _SEN	set	1160
   382     04A2                     _R_nW	set	1186
   383                           
   384                           	psect	strings
   385     0003                     __pstrings:
   386     0003                     stringtab:
   387     0003                     __stringtab:
   388                           
   389                           ;	String table - string pointers are 1 byte each
   390     0003  1BFF               	btfsc	btemp+1,7
   391     0004  280D               	ljmp	stringcode
   392     0005  1383               	bcf	3,7
   393     0006  187F               	btfsc	btemp+1,0
   394     0007  1783               	bsf	3,7
   395     0008  0800               	movf	0,w
   396     0009  0A84               	incf	4,f
   397     000A  1903               	skipnz
   398     000B  0AFF               	incf	btemp+1,f
   399     000C  0008               	return
   400     000D                     stringcode:
   401     000D                     stringdir:
   402     000D  3000               	movlw	high stringdir
   403     000E  008A               	movwf	10
   404     000F  0804               	movf	4,w
   405     0010  0A84               	incf	4,f
   406     0011  0782               	addwf	2,f
   407     0012                     __stringbase:
   408     0012  3400               	retlw	0
   409     0013                     __end_of__stringtab:
   410     0013                     STR_1:
   411     0013  3448               	retlw	72	;'H'
   412     0014  3448               	retlw	72	;'H'
   413     0015  343A               	retlw	58	;':'
   414     0016  344D               	retlw	77	;'M'
   415     0017  344D               	retlw	77	;'M'
   416     0018  343A               	retlw	58	;':'
   417     0019  3453               	retlw	83	;'S'
   418     001A  3453               	retlw	83	;'S'
   419     001B  3400               	retlw	0
   420                           
   421                           	psect	cinit
   422     07FC                     start_initialization:	
   423                           ; #config settings
   424                           
   425     07FC                     __initialization:
   426     07FC                     end_of_initialization:	
   427                           ;End of C runtime variable initialization code
   428                           
   429     07FC                     __end_of__initialization:
   430     07FC  0183               	clrf	3
   431     07FD  120A  118A  2D85   	ljmp	_main	;jump to C main() function
   432                           
   433                           	psect	cstackCOMMON
   434     0070                     __pcstackCOMMON:
   435     0070                     ?_init_clcd:
   436     0070                     ?_init_rtc:	
   437                           ; 1 bytes @ 0x0
   438                           
   439     0070                     ?_get_time:	
   440                           ; 1 bytes @ 0x0
   441                           
   442     0070                     ?_display_time:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0070                     ?_ds1307_read:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0070                     ?_init_config:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0070                     ?_main:	
   452                           ; 1 bytes @ 0x0
   453                           
   454     0070                     ?_i2c_wait_for_idle:	
   455                           ; 1 bytes @ 0x0
   456                           
   457     0070                     ??_i2c_wait_for_idle:	
   458                           ; 1 bytes @ 0x0
   459                           
   460     0070                     ?_i2c_start:	
   461                           ; 1 bytes @ 0x0
   462                           
   463     0070                     ??_i2c_start:	
   464                           ; 1 bytes @ 0x0
   465                           
   466     0070                     ?_i2c_repeat_start:	
   467                           ; 1 bytes @ 0x0
   468                           
   469     0070                     ??_i2c_repeat_start:	
   470                           ; 1 bytes @ 0x0
   471                           
   472     0070                     ?_i2c_stop:	
   473                           ; 1 bytes @ 0x0
   474                           
   475     0070                     ??_i2c_stop:	
   476                           ; 1 bytes @ 0x0
   477                           
   478     0070                     ?_i2c_write:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0070                     ??_i2c_write:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0070                     ?_i2c_read:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ??_i2c_read:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?_clcd_write:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ?_init_display_controller:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ?___lldiv:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     i2c_write@data:	
   500                           ; 4 bytes @ 0x0
   501                           
   502     0070                     i2c_read@data:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     clcd_write@mode:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ___lldiv@divisor:	
   509                           ; 1 bytes @ 0x0
   510                           
   511                           
   512                           ; 4 bytes @ 0x0
   513     0070                     	ds	1
   514     0071                     ?_ds1307_write:
   515     0071                     ??_clcd_write:	
   516                           ; 1 bytes @ 0x1
   517                           
   518     0071                     i2c_read@ack:	
   519                           ; 1 bytes @ 0x1
   520                           
   521     0071                     ds1307_write@value:	
   522                           ; 1 bytes @ 0x1
   523                           
   524                           
   525                           ; 1 bytes @ 0x1
   526     0071                     	ds	1
   527     0072                     ??_ds1307_read:
   528     0072                     ??_ds1307_write:	
   529                           ; 1 bytes @ 0x2
   530                           
   531     0072                     ds1307_read@address:	
   532                           ; 1 bytes @ 0x2
   533                           
   534     0072                     ds1307_write@address:	
   535                           ; 1 bytes @ 0x2
   536                           
   537                           
   538                           ; 1 bytes @ 0x2
   539     0072                     	ds	1
   540     0073                     clcd_write@byte:
   541     0073                     ds1307_read@data:	
   542                           ; 1 bytes @ 0x3
   543                           
   544                           
   545                           ; 1 bytes @ 0x3
   546     0073                     	ds	1
   547     0074                     ??_init_rtc:
   548     0074                     ?_clcd_print:	
   549                           ; 1 bytes @ 0x4
   550                           
   551     0074                     ??_get_time:	
   552                           ; 1 bytes @ 0x4
   553                           
   554     0074                     ??_init_display_controller:	
   555                           ; 1 bytes @ 0x4
   556                           
   557     0074                     get_time@clock_reg:	
   558                           ; 1 bytes @ 0x4
   559                           
   560     0074                     init_rtc@dummy:	
   561                           ; 1 bytes @ 0x4
   562                           
   563     0074                     clcd_print@str:	
   564                           ; 1 bytes @ 0x4
   565                           
   566     0074                     ___lldiv@dividend:	
   567                           ; 2 bytes @ 0x4
   568                           
   569                           
   570                           ; 4 bytes @ 0x4
   571     0074                     	ds	2
   572     0076                     ??_init_clcd:
   573     0076                     clcd_print@addr:	
   574                           ; 1 bytes @ 0x6
   575                           
   576                           
   577                           ; 1 bytes @ 0x6
   578     0076                     	ds	1
   579     0077                     ??_clcd_print:
   580     0077                     ??_display_time:	
   581                           ; 1 bytes @ 0x7
   582                           
   583                           
   584                           ; 1 bytes @ 0x7
   585     0077                     	ds	1
   586     0078                     ??___lldiv:
   587                           
   588                           ; 1 bytes @ 0x8
   589     0078                     	ds	1
   590     0079                     ___lldiv@quotient:
   591                           
   592                           ; 4 bytes @ 0x9
   593     0079                     	ds	4
   594     007D                     ___lldiv@counter:
   595                           
   596                           ; 1 bytes @ 0xD
   597     007D                     	ds	1
   598     007E                     ??_init_config:
   599     007E                     ??_main:	
   600                           ; 1 bytes @ 0xE
   601                           
   602                           
   603                           	psect	cstackBANK0
   604     0020                     __pcstackBANK0:	
   605                           ; 1 bytes @ 0xE
   606                           
   607     0020                     ?_i2c_init:
   608     0020                     i2c_init@baud_rate:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0020                     display_time@time:	
   612                           ; 4 bytes @ 0x0
   613                           
   614                           
   615                           ; 9 bytes @ 0x0
   616     0020                     	ds	4
   617     0024                     ??_i2c_init:
   618                           
   619                           ; 1 bytes @ 0x4
   620     0024                     	ds	5
   621     0029                     display_time@clock_reg:
   622                           
   623                           ; 1 bytes @ 0x9
   624     0029                     	ds	1
   625     002A                     main@clock_reg:
   626                           
   627                           ; 3 bytes @ 0xA
   628     002A                     	ds	3
   629                           
   630                           	psect	maintext
   631     0585                     __pmaintext:	
   632 ;;
   633 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   634 ;;
   635 ;; *************** function _main *****************
   636 ;; Defined at:
   637 ;;		line 22 in file "main.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  clock_reg       3   10[BANK0 ] unsigned char [3]
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : B00/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         0       0       0       0       0
   652 ;;      Locals:         0       3       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         0       3       0       0       0
   655 ;;Total ram usage:        3 bytes
   656 ;; Hardware stack levels required when called: 5
   657 ;; This function calls:
   658 ;;		_display_time
   659 ;;		_get_time
   660 ;;		_init_config
   661 ;; This function is called by:
   662 ;;		Startup code after reset
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666     0585                     _main:	
   667                           ;psect for function _main
   668                           
   669     0585                     l1031:	
   670                           ;incstack = 0
   671                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   672                           
   673                           
   674                           ;main.c: 23:     clock_reg[1] = ds1307_read(0x01);
   675     0585  120A  118A  25D9  120A  118A  	fcall	_init_config
   676     058A                     l1033:
   677                           
   678                           ;main.c: 28: {
   679     058A  302A               	movlw	(low (main@clock_reg| 0))& (0+255)
   680     058B  120A  118A  25B8  120A  118A  	fcall	_get_time
   681     0590                     l1035:
   682                           
   683                           ;main.c: 29:     char time[9];
   684     0590  302A               	movlw	(low (main@clock_reg| 0))& (0+255)
   685     0591  120A  118A  26E0  120A  118A  	fcall	_display_time
   686     0596  2D8A               	goto	l1033
   687     0597  120A  118A  2800   	ljmp	start
   688     059A                     __end_of_main:
   689                           
   690                           	psect	text1
   691     05D9                     __ptext1:	
   692 ;; *************** function _init_config *****************
   693 ;; Defined at:
   694 ;;		line 14 in file "main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   708 ;;      Params:         0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0
   711 ;;      Totals:         0       0       0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used: 1
   714 ;; Hardware stack levels required when called: 4
   715 ;; This function calls:
   716 ;;		_clcd_print
   717 ;;		_i2c_init
   718 ;;		_init_clcd
   719 ;;		_init_rtc
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725     05D9                     _init_config:	
   726                           ;psect for function _init_config
   727                           
   728     05D9                     l1007:	
   729                           ;incstack = 0
   730                           ; Regs used in _init_config: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   731                           
   732                           
   733                           ;main.c: 16:     }
   734     05D9  3000               	movlw	0
   735     05DA  1283               	bcf	3,5	;RP0=0, select bank0
   736     05DB  1303               	bcf	3,6	;RP1=0, select bank0
   737     05DC  00A3               	movwf	i2c_init@baud_rate+3
   738     05DD  3001               	movlw	1
   739     05DE  00A2               	movwf	i2c_init@baud_rate+2
   740     05DF  3086               	movlw	134
   741     05E0  00A1               	movwf	i2c_init@baud_rate+1
   742     05E1  30A0               	movlw	160
   743     05E2  00A0               	movwf	i2c_init@baud_rate
   744     05E3  120A  118A  2626  120A  118A  	fcall	_i2c_init
   745     05E8                     l1009:
   746                           
   747                           ;main.c: 17:     return;
   748     05E8  120A  118A  255A  120A  118A  	fcall	_init_clcd
   749     05ED                     l1011:
   750                           
   751                           ;main.c: 18: }
   752     05ED  120A  118A  2572  120A  118A  	fcall	_init_rtc
   753     05F2                     l1013:
   754                           
   755                           ;main.c: 19: 
   756     05F2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   757     05F3  00F4               	movwf	clcd_print@str
   758     05F4  3080               	movlw	128
   759     05F5  00F5               	movwf	clcd_print@str+1
   760     05F6  3082               	movlw	130
   761     05F7  00F6               	movwf	clcd_print@addr
   762     05F8  120A  118A  267B  120A  118A  	fcall	_clcd_print
   763     05FD                     l17:
   764     05FD  0008               	return
   765     05FE                     __end_of_init_config:
   766                           
   767                           	psect	text2
   768     0572                     __ptext2:	
   769 ;; *************** function _init_rtc *****************
   770 ;; Defined at:
   771 ;;		line 11 in file "rtc.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  dummy           1    4[COMMON] unsigned char 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         1       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0
   788 ;;      Totals:         1       0       0       0       0
   789 ;;Total ram usage:        1 bytes
   790 ;; Hardware stack levels used: 1
   791 ;; Hardware stack levels required when called: 3
   792 ;; This function calls:
   793 ;;		_ds1307_read
   794 ;;		_ds1307_write
   795 ;; This function is called by:
   796 ;;		_init_config
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800     0572                     _init_rtc:	
   801                           ;psect for function _init_rtc
   802                           
   803     0572                     l993:	
   804                           ;incstack = 0
   805                           ; Regs used in _init_rtc: [wreg+status,2+status,0+pclath+cstack]
   806                           
   807                           
   808                           ;rtc.c: 12:     unsigned char dummy;;rtc.c: 14:     dummy = ds1307_read(0x00);
   809     0572  3000               	movlw	0
   810     0573  120A  118A  2650  120A  118A  	fcall	_ds1307_read
   811     0578  00F4               	movwf	init_rtc@dummy
   812     0579                     l995:
   813                           
   814                           ;rtc.c: 15:     dummy = dummy & 0x7F;
   815     0579  0874               	movf	init_rtc@dummy,w
   816     057A  397F               	andlw	127
   817     057B  00F4               	movwf	init_rtc@dummy
   818     057C                     l997:
   819                           
   820                           ;rtc.c: 16:     ds1307_write(0x00, dummy);
   821     057C  0874               	movf	init_rtc@dummy,w
   822     057D  00F1               	movwf	ds1307_write@value
   823     057E  3000               	movlw	0
   824     057F  120A  118A  259A  120A  118A  	fcall	_ds1307_write
   825     0584                     l133:
   826     0584  0008               	return
   827     0585                     __end_of_init_rtc:
   828                           
   829                           	psect	text3
   830     059A                     __ptext3:	
   831 ;; *************** function _ds1307_write *****************
   832 ;; Defined at:
   833 ;;		line 36 in file "rtc.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  address         1    wreg     unsigned char 
   836 ;;  value           1    1[COMMON] unsigned char 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  address         1    2[COMMON] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0, pclath, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         1       0       0       0       0
   849 ;;      Locals:         1       0       0       0       0
   850 ;;      Temps:          0       0       0       0       0
   851 ;;      Totals:         2       0       0       0       0
   852 ;;Total ram usage:        2 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; Hardware stack levels required when called: 2
   855 ;; This function calls:
   856 ;;		_i2c_start
   857 ;;		_i2c_stop
   858 ;;		_i2c_write
   859 ;; This function is called by:
   860 ;;		_init_rtc
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864     059A                     _ds1307_write:	
   865                           ;psect for function _ds1307_write
   866                           
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _ds1307_write: [wreg+status,2+status,0+pclath+cstack]
   870                           ;ds1307_write@address stored from wreg
   871     059A  00F2               	movwf	ds1307_write@address
   872     059B                     l953:
   873                           
   874                           ;rtc.c: 36: void ds1307_write(unsigned char address, unsigned char value);rtc.c: 37: {;r
      +                          tc.c: 39:     i2c_start();
   875     059B  120A  118A  253D  120A  118A  	fcall	_i2c_start
   876                           
   877                           ;rtc.c: 40:     i2c_write(0xD0);
   878     05A0  30D0               	movlw	208
   879     05A1  120A  118A  254F  120A  118A  	fcall	_i2c_write
   880                           
   881                           ;rtc.c: 41:     i2c_write(address);
   882     05A6  0872               	movf	ds1307_write@address,w
   883     05A7  120A  118A  254F  120A  118A  	fcall	_i2c_write
   884                           
   885                           ;rtc.c: 42:     i2c_write(value);
   886     05AC  0871               	movf	ds1307_write@value,w
   887     05AD  120A  118A  254F  120A  118A  	fcall	_i2c_write
   888                           
   889                           ;rtc.c: 43:     i2c_stop();
   890     05B2  120A  118A  2546  120A  118A  	fcall	_i2c_stop
   891     05B7                     l139:
   892     05B7  0008               	return
   893     05B8                     __end_of_ds1307_write:
   894                           
   895                           	psect	text4
   896     055A                     __ptext4:	
   897 ;; *************** function _init_clcd *****************
   898 ;; Defined at:
   899 ;;		line 44 in file "clcd.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0, pclath, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; Hardware stack levels required when called: 2
   920 ;; This function calls:
   921 ;;		_init_display_controller
   922 ;; This function is called by:
   923 ;;		_init_config
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927     055A                     _init_clcd:	
   928                           ;psect for function _init_clcd
   929                           
   930     055A                     l985:	
   931                           ;incstack = 0
   932                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   933                           
   934                           
   935                           ;clcd.c: 47:     TRISD = 0x00;
   936     055A  1683               	bsf	3,5	;RP0=1, select bank1
   937     055B  1303               	bcf	3,6	;RP1=0, select bank1
   938     055C  0188               	clrf	8	;volatile
   939     055D                     l987:
   940                           
   941                           ;clcd.c: 50:     TRISE2 = 0;
   942     055D  1109               	bcf	9,2	;volatile
   943     055E                     l989:
   944                           
   945                           ;clcd.c: 51:     TRISE1 = 0;
   946     055E  1089               	bcf	9,1	;volatile
   947     055F                     l991:
   948                           
   949                           ;clcd.c: 53:     init_display_controller();
   950     055F  120A  118A  2733  120A  118A  	fcall	_init_display_controller
   951     0564                     l107:
   952     0564  0008               	return
   953     0565                     __end_of_init_clcd:
   954                           
   955                           	psect	text5
   956     0733                     __ptext5:	
   957 ;; *************** function _init_display_controller *****************
   958 ;; Defined at:
   959 ;;		line 21 in file "clcd.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0
   975 ;;      Temps:          2       0       0       0       0
   976 ;;      Totals:         2       0       0       0       0
   977 ;;Total ram usage:        2 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 1
   980 ;; This function calls:
   981 ;;		_clcd_write
   982 ;; This function is called by:
   983 ;;		_init_clcd
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987     0733                     _init_display_controller:	
   988                           ;psect for function _init_display_controller
   989                           
   990     0733                     l929:	
   991                           ;incstack = 0
   992                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   993                           
   994                           
   995                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
   996     0733  30C3               	movlw	195
   997     0734  00F5               	movwf	??_init_display_controller+1
   998     0735  30CD               	movlw	205
   999     0736  00F4               	movwf	??_init_display_controller
  1000     0737                     u397:
  1001     0737  0BF4               	decfsz	??_init_display_controller,f
  1002     0738  2F37               	goto	u397
  1003     0739  0BF5               	decfsz	??_init_display_controller+1,f
  1004     073A  2F37               	goto	u397
  1005     073B                     l931:
  1006                           
  1007                           ;clcd.c: 27:     clcd_write(0x33, 0);
  1008     073B  01F0               	clrf	clcd_write@mode
  1009     073C  3033               	movlw	51
  1010     073D  120A  118A  26AA  120A  118A  	fcall	_clcd_write
  1011     0742                     l933:
  1012                           
  1013                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1014     0742  301B               	movlw	27
  1015     0743  00F5               	movwf	??_init_display_controller+1
  1016     0744  309E               	movlw	158
  1017     0745  00F4               	movwf	??_init_display_controller
  1018     0746                     u407:
  1019     0746  0BF4               	decfsz	??_init_display_controller,f
  1020     0747  2F46               	goto	u407
  1021     0748  0BF5               	decfsz	??_init_display_controller+1,f
  1022     0749  2F46               	goto	u407
  1023     074A  0000               	nop
  1024                           
  1025                           ;clcd.c: 29:     clcd_write(0x33, 0);
  1026     074B  01F0               	clrf	clcd_write@mode
  1027     074C  3033               	movlw	51
  1028     074D  120A  118A  26AA  120A  118A  	fcall	_clcd_write
  1029     0752                     l935:
  1030                           
  1031                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1032     0752  30A6               	movlw	166
  1033     0753  00F4               	movwf	??_init_display_controller
  1034     0754                     u417:
  1035     0754  0BF4               	decfsz	??_init_display_controller,f
  1036     0755  2F54               	goto	u417
  1037     0756  0000               	nop
  1038     0757                     l937:
  1039                           
  1040                           ;clcd.c: 31:     clcd_write(0x33, 0);
  1041     0757  01F0               	clrf	clcd_write@mode
  1042     0758  3033               	movlw	51
  1043     0759  120A  118A  26AA  120A  118A  	fcall	_clcd_write
  1044     075E                     l939:
  1045                           
  1046                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1047     075E  2F5F               	nop2	;2 cycle nop
  1048     075F  2F60               	nop2	;2 cycle nop
  1049     0760  0000               	nop
  1050     0761                     l941:
  1051                           
  1052                           ;clcd.c: 34:     clcd_write(0x02, 0);
  1053     0761  01F0               	clrf	clcd_write@mode
  1054     0762  3002               	movlw	2
  1055     0763  120A  118A  26AA  120A  118A  	fcall	_clcd_write
  1056     0768                     l943:
  1057                           
  1058                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1059     0768  30A6               	movlw	166
  1060     0769  00F4               	movwf	??_init_display_controller
  1061     076A                     u427:
  1062     076A  0BF4               	decfsz	??_init_display_controller,f
  1063     076B  2F6A               	goto	u427
  1064     076C  0000               	nop
  1065                           
  1066                           ;clcd.c: 36:     clcd_write(0x28, 0);
  1067     076D  01F0               	clrf	clcd_write@mode
  1068     076E  3028               	movlw	40
  1069     076F  120A  118A  26AA  120A  118A  	fcall	_clcd_write
  1070     0774                     l945:
  1071                           
  1072                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1073     0774  30A6               	movlw	166
  1074     0775  00F4               	movwf	??_init_display_controller
  1075     0776                     u437:
  1076     0776  0BF4               	decfsz	??_init_display_controller,f
  1077     0777  2F76               	goto	u437
  1078     0778  0000               	nop
  1079     0779                     l947:
  1080                           
  1081                           ;clcd.c: 38:     clcd_write(0x01, 0);
  1082     0779  01F0               	clrf	clcd_write@mode
  1083     077A  3001               	movlw	1
  1084     077B  120A  118A  26AA  120A  118A  	fcall	_clcd_write
  1085                           
  1086                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1087     0780  3004               	movlw	4
  1088     0781  00F5               	movwf	??_init_display_controller+1
  1089     0782  303D               	movlw	61
  1090     0783  00F4               	movwf	??_init_display_controller
  1091     0784                     u447:
  1092     0784  0BF4               	decfsz	??_init_display_controller,f
  1093     0785  2F84               	goto	u447
  1094     0786  0BF5               	decfsz	??_init_display_controller+1,f
  1095     0787  2F84               	goto	u447
  1096     0788  2F89               	nop2
  1097     0789                     l949:
  1098                           
  1099                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  1100     0789  01F0               	clrf	clcd_write@mode
  1101     078A  300C               	movlw	12
  1102     078B  120A  118A  26AA  120A  118A  	fcall	_clcd_write
  1103     0790                     l951:
  1104                           
  1105                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1106     0790  30A6               	movlw	166
  1107     0791  00F4               	movwf	??_init_display_controller
  1108     0792                     u457:
  1109     0792  0BF4               	decfsz	??_init_display_controller,f
  1110     0793  2F92               	goto	u457
  1111     0794  0000               	nop
  1112     0795                     l104:
  1113     0795  0008               	return
  1114     0796                     __end_of_init_display_controller:
  1115                           
  1116                           	psect	text6
  1117     0626                     __ptext6:	
  1118 ;; *************** function _i2c_init *****************
  1119 ;; Defined at:
  1120 ;;		line 10 in file "i2c.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  baud_rate       4    0[BANK0 ] unsigned long 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       4       0       0       0
  1135 ;;      Locals:         0       0       0       0       0
  1136 ;;      Temps:          0       1       0       0       0
  1137 ;;      Totals:         0       5       0       0       0
  1138 ;;Total ram usage:        5 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; Hardware stack levels required when called: 1
  1141 ;; This function calls:
  1142 ;;		___lldiv
  1143 ;; This function is called by:
  1144 ;;		_init_config
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148     0626                     _i2c_init:	
  1149                           ;psect for function _i2c_init
  1150                           
  1151     0626                     l981:	
  1152                           ;incstack = 0
  1153                           ; Regs used in _i2c_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1154                           
  1155                           
  1156                           ;i2c.c: 10: void i2c_init(unsigned long int baud_rate);i2c.c: 11: {;i2c.c: 13:     SSPEN
      +                           = 1;
  1157     0626  1283               	bcf	3,5	;RP0=0, select bank0
  1158     0627  1303               	bcf	3,6	;RP1=0, select bank0
  1159     0628  1694               	bsf	20,5	;volatile
  1160                           
  1161                           ;i2c.c: 16:     SSPM3 = 1;
  1162     0629  1594               	bsf	20,3	;volatile
  1163     062A                     l983:
  1164                           
  1165                           ;i2c.c: 19:     SSPADD = (20000000 / baud_rate * 4) - 1;
  1166     062A  0823               	movf	i2c_init@baud_rate+3,w
  1167     062B  00F3               	movwf	___lldiv@divisor+3
  1168     062C  0822               	movf	i2c_init@baud_rate+2,w
  1169     062D  00F2               	movwf	___lldiv@divisor+2
  1170     062E  0821               	movf	i2c_init@baud_rate+1,w
  1171     062F  00F1               	movwf	___lldiv@divisor+1
  1172     0630  0820               	movf	i2c_init@baud_rate,w
  1173     0631  00F0               	movwf	___lldiv@divisor
  1174     0632  3001               	movlw	1
  1175     0633  00F7               	movwf	___lldiv@dividend+3
  1176     0634  3031               	movlw	49
  1177     0635  00F6               	movwf	___lldiv@dividend+2
  1178     0636  302D               	movlw	45
  1179     0637  00F5               	movwf	___lldiv@dividend+1
  1180     0638  3000               	movlw	0
  1181     0639  00F4               	movwf	___lldiv@dividend
  1182     063A  120A  118A  2796  120A  118A  	fcall	___lldiv
  1183     063F  0870               	movf	?___lldiv,w
  1184     0640  1283               	bcf	3,5	;RP0=0, select bank0
  1185     0641  1303               	bcf	3,6	;RP1=0, select bank0
  1186     0642  00A4               	movwf	??_i2c_init
  1187     0643  3001               	movlw	1
  1188     0644                     u345:
  1189     0644  1003               	clrc
  1190     0645  0DA4               	rlf	??_i2c_init,f
  1191     0646  3EFF               	addlw	-1
  1192     0647  1D03               	skipz
  1193     0648  2E44               	goto	u345
  1194     0649  1003               	clrc
  1195     064A  0D24               	rlf	??_i2c_init,w
  1196     064B  3EFF               	addlw	255
  1197     064C  1683               	bsf	3,5	;RP0=1, select bank1
  1198     064D  1303               	bcf	3,6	;RP1=0, select bank1
  1199     064E  0093               	movwf	19	;volatile
  1200     064F                     l60:
  1201     064F  0008               	return
  1202     0650                     __end_of_i2c_init:
  1203                           
  1204                           	psect	text7
  1205     0796                     __ptext7:	
  1206 ;; *************** function ___lldiv *****************
  1207 ;; Defined at:
  1208 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  divisor         4    0[COMMON] unsigned long 
  1211 ;;  dividend        4    4[COMMON] unsigned long 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  quotient        4    9[COMMON] unsigned long 
  1214 ;;  counter         1   13[COMMON] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  4    0[COMMON] unsigned long 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0, btemp+1
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         8       0       0       0       0
  1225 ;;      Locals:         5       0       0       0       0
  1226 ;;      Temps:          1       0       0       0       0
  1227 ;;      Totals:        14       0       0       0       0
  1228 ;;Total ram usage:       14 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_i2c_init
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237     0796                     ___lldiv:	
  1238                           ;psect for function ___lldiv
  1239                           
  1240     0796                     l955:	
  1241                           ;incstack = 0
  1242                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1243                           
  1244     0796  3000               	movlw	0
  1245     0797  00FC               	movwf	___lldiv@quotient+3
  1246     0798  3000               	movlw	0
  1247     0799  00FB               	movwf	___lldiv@quotient+2
  1248     079A  3000               	movlw	0
  1249     079B  00FA               	movwf	___lldiv@quotient+1
  1250     079C  3000               	movlw	0
  1251     079D  00F9               	movwf	___lldiv@quotient
  1252     079E  0873               	movf	___lldiv@divisor+3,w
  1253     079F  0472               	iorwf	___lldiv@divisor+2,w
  1254     07A0  0471               	iorwf	___lldiv@divisor+1,w
  1255     07A1  0470               	iorwf	___lldiv@divisor,w
  1256     07A2  1903               	skipnz
  1257     07A3  2FA5               	goto	u271
  1258     07A4  2FA6               	goto	u270
  1259     07A5                     u271:
  1260     07A5  2FF3               	goto	l977
  1261     07A6                     u270:
  1262     07A6                     l957:
  1263     07A6  01FD               	clrf	___lldiv@counter
  1264     07A7  0AFD               	incf	___lldiv@counter,f
  1265     07A8  2FB6               	goto	l963
  1266     07A9                     l959:
  1267     07A9  3001               	movlw	1
  1268     07AA  00F8               	movwf	??___lldiv
  1269     07AB                     u285:
  1270     07AB  1003               	clrc
  1271     07AC  0DF0               	rlf	___lldiv@divisor,f
  1272     07AD  0DF1               	rlf	___lldiv@divisor+1,f
  1273     07AE  0DF2               	rlf	___lldiv@divisor+2,f
  1274     07AF  0DF3               	rlf	___lldiv@divisor+3,f
  1275     07B0  0BF8               	decfsz	??___lldiv,f
  1276     07B1  2FAB               	goto	u285
  1277     07B2                     l961:
  1278     07B2  3001               	movlw	1
  1279     07B3  00FF               	movwf	btemp+1
  1280     07B4  087F               	movf	btemp+1,w
  1281     07B5  07FD               	addwf	___lldiv@counter,f
  1282     07B6                     l963:
  1283     07B6  1FF3               	btfss	___lldiv@divisor+3,7
  1284     07B7  2FB9               	goto	u291
  1285     07B8  2FBA               	goto	u290
  1286     07B9                     u291:
  1287     07B9  2FA9               	goto	l959
  1288     07BA                     u290:
  1289     07BA                     l965:
  1290     07BA  3001               	movlw	1
  1291     07BB  00F8               	movwf	??___lldiv
  1292     07BC                     u305:
  1293     07BC  1003               	clrc
  1294     07BD  0DF9               	rlf	___lldiv@quotient,f
  1295     07BE  0DFA               	rlf	___lldiv@quotient+1,f
  1296     07BF  0DFB               	rlf	___lldiv@quotient+2,f
  1297     07C0  0DFC               	rlf	___lldiv@quotient+3,f
  1298     07C1  0BF8               	decfsz	??___lldiv,f
  1299     07C2  2FBC               	goto	u305
  1300     07C3                     l967:
  1301     07C3  0873               	movf	___lldiv@divisor+3,w
  1302     07C4  0277               	subwf	___lldiv@dividend+3,w
  1303     07C5  1D03               	skipz
  1304     07C6  2FD1               	goto	u315
  1305     07C7  0872               	movf	___lldiv@divisor+2,w
  1306     07C8  0276               	subwf	___lldiv@dividend+2,w
  1307     07C9  1D03               	skipz
  1308     07CA  2FD1               	goto	u315
  1309     07CB  0871               	movf	___lldiv@divisor+1,w
  1310     07CC  0275               	subwf	___lldiv@dividend+1,w
  1311     07CD  1D03               	skipz
  1312     07CE  2FD1               	goto	u315
  1313     07CF  0870               	movf	___lldiv@divisor,w
  1314     07D0  0274               	subwf	___lldiv@dividend,w
  1315     07D1                     u315:
  1316     07D1  1C03               	skipc
  1317     07D2  2FD4               	goto	u311
  1318     07D3  2FD5               	goto	u310
  1319     07D4                     u311:
  1320     07D4  2FE4               	goto	l973
  1321     07D5                     u310:
  1322     07D5                     l969:
  1323     07D5  0870               	movf	___lldiv@divisor,w
  1324     07D6  02F4               	subwf	___lldiv@dividend,f
  1325     07D7  0871               	movf	___lldiv@divisor+1,w
  1326     07D8  1C03               	skipc
  1327     07D9  0F71               	incfsz	___lldiv@divisor+1,w
  1328     07DA  02F5               	subwf	___lldiv@dividend+1,f
  1329     07DB  0872               	movf	___lldiv@divisor+2,w
  1330     07DC  1C03               	skipc
  1331     07DD  0F72               	incfsz	___lldiv@divisor+2,w
  1332     07DE  02F6               	subwf	___lldiv@dividend+2,f
  1333     07DF  0873               	movf	___lldiv@divisor+3,w
  1334     07E0  1C03               	skipc
  1335     07E1  0F73               	incfsz	___lldiv@divisor+3,w
  1336     07E2  02F7               	subwf	___lldiv@dividend+3,f
  1337     07E3                     l971:
  1338     07E3  1479               	bsf	___lldiv@quotient,0
  1339     07E4                     l973:
  1340     07E4  3001               	movlw	1
  1341     07E5                     u325:
  1342     07E5  1003               	clrc
  1343     07E6  0CF3               	rrf	___lldiv@divisor+3,f
  1344     07E7  0CF2               	rrf	___lldiv@divisor+2,f
  1345     07E8  0CF1               	rrf	___lldiv@divisor+1,f
  1346     07E9  0CF0               	rrf	___lldiv@divisor,f
  1347     07EA  3EFF               	addlw	-1
  1348     07EB  1D03               	skipz
  1349     07EC  2FE5               	goto	u325
  1350     07ED                     l975:
  1351     07ED  3001               	movlw	1
  1352     07EE  02FD               	subwf	___lldiv@counter,f
  1353     07EF  1D03               	btfss	3,2
  1354     07F0  2FF2               	goto	u331
  1355     07F1  2FF3               	goto	u330
  1356     07F2                     u331:
  1357     07F2  2FBA               	goto	l965
  1358     07F3                     u330:
  1359     07F3                     l977:
  1360     07F3  087C               	movf	___lldiv@quotient+3,w
  1361     07F4  00F3               	movwf	?___lldiv+3
  1362     07F5  087B               	movf	___lldiv@quotient+2,w
  1363     07F6  00F2               	movwf	?___lldiv+2
  1364     07F7  087A               	movf	___lldiv@quotient+1,w
  1365     07F8  00F1               	movwf	?___lldiv+1
  1366     07F9  0879               	movf	___lldiv@quotient,w
  1367     07FA  00F0               	movwf	?___lldiv
  1368     07FB                     l261:
  1369     07FB  0008               	return
  1370     07FC                     __end_of___lldiv:
  1371                           
  1372                           	psect	text8
  1373     05B8                     __ptext8:	
  1374 ;; *************** function _get_time *****************
  1375 ;; Defined at:
  1376 ;;		line 34 in file "main.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  clock_reg       1    wreg     PTR unsigned char 
  1379 ;;		 -> main@clock_reg(3), 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  clock_reg       1    4[COMMON] PTR unsigned char 
  1382 ;;		 -> main@clock_reg(3), 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1392 ;;      Params:         0       0       0       0       0
  1393 ;;      Locals:         1       0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0
  1395 ;;      Totals:         1       0       0       0       0
  1396 ;;Total ram usage:        1 bytes
  1397 ;; Hardware stack levels used: 1
  1398 ;; Hardware stack levels required when called: 3
  1399 ;; This function calls:
  1400 ;;		_ds1307_read
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406     05B8                     _get_time:	
  1407                           ;psect for function _get_time
  1408                           
  1409                           
  1410                           ;incstack = 0
  1411                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1412                           ;get_time@clock_reg stored from wreg
  1413     05B8  00F4               	movwf	get_time@clock_reg
  1414     05B9                     l1015:
  1415                           
  1416                           ;main.c: 34: ;main.c: 35:     time[2] = ':';;main.c: 36: 
  1417     05B9  0874               	movf	get_time@clock_reg,w
  1418     05BA  0084               	movwf	4
  1419     05BB  3002               	movlw	2
  1420     05BC  120A  118A  2650  120A  118A  	fcall	_ds1307_read
  1421     05C1  1383               	bcf	3,7	;select IRP bank0
  1422     05C2  0080               	movwf	0
  1423                           
  1424                           ;main.c: 37:     time[3] = ((clock_reg[1] >> 4) & 0x07) + '0';
  1425     05C3  0A74               	incf	get_time@clock_reg,w
  1426     05C4  0084               	movwf	4
  1427     05C5  3001               	movlw	1
  1428     05C6  120A  118A  2650  120A  118A  	fcall	_ds1307_read
  1429     05CB  1383               	bcf	3,7	;select IRP bank0
  1430     05CC  0080               	movwf	0
  1431                           
  1432                           ;main.c: 38:     time[4] = (clock_reg[1] & 0x0F) + '0';
  1433     05CD  0874               	movf	get_time@clock_reg,w
  1434     05CE  3E02               	addlw	2
  1435     05CF  0084               	movwf	4
  1436     05D0  3000               	movlw	0
  1437     05D1  120A  118A  2650  120A  118A  	fcall	_ds1307_read
  1438     05D6  1383               	bcf	3,7	;select IRP bank0
  1439     05D7  0080               	movwf	0
  1440     05D8                     l28:
  1441     05D8  0008               	return
  1442     05D9                     __end_of_get_time:
  1443                           
  1444                           	psect	text9
  1445     0650                     __ptext9:	
  1446 ;; *************** function _ds1307_read *****************
  1447 ;; Defined at:
  1448 ;;		line 19 in file "rtc.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  address         1    wreg     unsigned char 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  address         1    2[COMMON] unsigned char 
  1453 ;;  data            1    3[COMMON] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      unsigned char 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0, pclath, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1463 ;;      Params:         0       0       0       0       0
  1464 ;;      Locals:         2       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0
  1466 ;;      Totals:         2       0       0       0       0
  1467 ;;Total ram usage:        2 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 2
  1470 ;; This function calls:
  1471 ;;		_i2c_read
  1472 ;;		_i2c_repeat_start
  1473 ;;		_i2c_start
  1474 ;;		_i2c_stop
  1475 ;;		_i2c_write
  1476 ;; This function is called by:
  1477 ;;		_get_time
  1478 ;;		_init_rtc
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482     0650                     _ds1307_read:	
  1483                           ;psect for function _ds1307_read
  1484                           
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in _ds1307_read: [wreg+status,2+status,0+pclath+cstack]
  1488                           ;ds1307_read@address stored from wreg
  1489     0650  00F2               	movwf	ds1307_read@address
  1490     0651                     l923:
  1491                           
  1492                           ;rtc.c: 19: unsigned char ds1307_read(unsigned char address);rtc.c: 20: {;rtc.c: 21:    
      +                           unsigned char data;;rtc.c: 23:     i2c_start();
  1493     0651  120A  118A  253D  120A  118A  	fcall	_i2c_start
  1494                           
  1495                           ;rtc.c: 24:     i2c_write(0xD0);
  1496     0656  30D0               	movlw	208
  1497     0657  120A  118A  254F  120A  118A  	fcall	_i2c_write
  1498                           
  1499                           ;rtc.c: 25:     i2c_write(address);
  1500     065C  0872               	movf	ds1307_read@address,w
  1501     065D  120A  118A  254F  120A  118A  	fcall	_i2c_write
  1502                           
  1503                           ;rtc.c: 27:     i2c_repeat_start();
  1504     0662  120A  118A  2534  120A  118A  	fcall	_i2c_repeat_start
  1505                           
  1506                           ;rtc.c: 28:     i2c_write(0xD1);
  1507     0667  30D1               	movlw	209
  1508     0668  120A  118A  254F  120A  118A  	fcall	_i2c_write
  1509                           
  1510                           ;rtc.c: 29:     data = i2c_read(0);
  1511     066D  3000               	movlw	0
  1512     066E  120A  118A  25FE  120A  118A  	fcall	_i2c_read
  1513     0673  00F3               	movwf	ds1307_read@data
  1514                           
  1515                           ;rtc.c: 31:     i2c_stop();
  1516     0674  120A  118A  2546  120A  118A  	fcall	_i2c_stop
  1517     0679                     l925:
  1518                           
  1519                           ;rtc.c: 33:     return data;
  1520     0679  0873               	movf	ds1307_read@data,w
  1521     067A                     l136:
  1522     067A  0008               	return
  1523     067B                     __end_of_ds1307_read:
  1524                           
  1525                           	psect	text10
  1526     054F                     __ptext10:	
  1527 ;; *************** function _i2c_write *****************
  1528 ;; Defined at:
  1529 ;;		line 52 in file "i2c.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  data            1    wreg     unsigned char 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  data            1    0[COMMON] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      unsigned char 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0, pclath, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1543 ;;      Params:         0       0       0       0       0
  1544 ;;      Locals:         1       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0
  1546 ;;      Totals:         1       0       0       0       0
  1547 ;;Total ram usage:        1 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 1
  1550 ;; This function calls:
  1551 ;;		_i2c_wait_for_idle
  1552 ;; This function is called by:
  1553 ;;		_ds1307_read
  1554 ;;		_ds1307_write
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558     054F                     _i2c_write:	
  1559                           ;psect for function _i2c_write
  1560                           
  1561                           
  1562                           ;incstack = 0
  1563                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  1564                           ;i2c_write@data stored from wreg
  1565     054F  00F0               	movwf	i2c_write@data
  1566     0550                     l877:
  1567                           
  1568                           ;i2c.c: 52: unsigned char i2c_write(unsigned char data);i2c.c: 53: {;i2c.c: 55:     i2c_
      +                          wait_for_idle();
  1569     0550  120A  118A  2565  120A  118A  	fcall	_i2c_wait_for_idle
  1570     0555                     l879:
  1571                           
  1572                           ;i2c.c: 56:     SSPBUF = data;
  1573     0555  0870               	movf	i2c_write@data,w
  1574     0556  1283               	bcf	3,5	;RP0=0, select bank0
  1575     0557  1303               	bcf	3,6	;RP1=0, select bank0
  1576     0558  0093               	movwf	19	;volatile
  1577     0559                     l881:
  1578     0559                     l78:	
  1579                           ;i2c.c: 59:     return !ACKSTAT;;	Return value of _i2c_write is never used
  1580                           
  1581     0559  0008               	return
  1582     055A                     __end_of_i2c_write:
  1583                           
  1584                           	psect	text11
  1585     0546                     __ptext11:	
  1586 ;; *************** function _i2c_stop *****************
  1587 ;; Defined at:
  1588 ;;		line 45 in file "i2c.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;		None
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;		None
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2, status,0, pclath, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1602 ;;      Params:         0       0       0       0       0
  1603 ;;      Locals:         0       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0
  1605 ;;      Totals:         0       0       0       0       0
  1606 ;;Total ram usage:        0 bytes
  1607 ;; Hardware stack levels used: 1
  1608 ;; Hardware stack levels required when called: 1
  1609 ;; This function calls:
  1610 ;;		_i2c_wait_for_idle
  1611 ;; This function is called by:
  1612 ;;		_ds1307_read
  1613 ;;		_ds1307_write
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617     0546                     _i2c_stop:	
  1618                           ;psect for function _i2c_stop
  1619                           
  1620     0546                     l873:	
  1621                           ;incstack = 0
  1622                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  1623                           
  1624                           
  1625                           ;i2c.c: 48:     i2c_wait_for_idle();
  1626     0546  120A  118A  2565  120A  118A  	fcall	_i2c_wait_for_idle
  1627     054B                     l875:
  1628                           
  1629                           ;i2c.c: 49:     PEN = 1;
  1630     054B  1683               	bsf	3,5	;RP0=1, select bank1
  1631     054C  1303               	bcf	3,6	;RP1=0, select bank1
  1632     054D  1511               	bsf	17,2	;volatile
  1633     054E                     l75:
  1634     054E  0008               	return
  1635     054F                     __end_of_i2c_stop:
  1636                           
  1637                           	psect	text12
  1638     053D                     __ptext12:	
  1639 ;; *************** function _i2c_start *****************
  1640 ;; Defined at:
  1641 ;;		line 29 in file "i2c.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, pclath, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1655 ;;      Params:         0       0       0       0       0
  1656 ;;      Locals:         0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0
  1658 ;;      Totals:         0       0       0       0       0
  1659 ;;Total ram usage:        0 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; Hardware stack levels required when called: 1
  1662 ;; This function calls:
  1663 ;;		_i2c_wait_for_idle
  1664 ;; This function is called by:
  1665 ;;		_ds1307_read
  1666 ;;		_ds1307_write
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670     053D                     _i2c_start:	
  1671                           ;psect for function _i2c_start
  1672                           
  1673     053D                     l865:	
  1674                           ;incstack = 0
  1675                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  1676                           
  1677                           
  1678                           ;i2c.c: 32:     i2c_wait_for_idle();
  1679     053D  120A  118A  2565  120A  118A  	fcall	_i2c_wait_for_idle
  1680     0542                     l867:
  1681                           
  1682                           ;i2c.c: 33:     SEN = 1;
  1683     0542  1683               	bsf	3,5	;RP0=1, select bank1
  1684     0543  1303               	bcf	3,6	;RP1=0, select bank1
  1685     0544  1411               	bsf	17,0	;volatile
  1686     0545                     l69:
  1687     0545  0008               	return
  1688     0546                     __end_of_i2c_start:
  1689                           
  1690                           	psect	text13
  1691     0534                     __ptext13:	
  1692 ;; *************** function _i2c_repeat_start *****************
  1693 ;; Defined at:
  1694 ;;		line 36 in file "i2c.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;		None
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0, pclath, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1708 ;;      Params:         0       0       0       0       0
  1709 ;;      Locals:         0       0       0       0       0
  1710 ;;      Temps:          0       0       0       0       0
  1711 ;;      Totals:         0       0       0       0       0
  1712 ;;Total ram usage:        0 bytes
  1713 ;; Hardware stack levels used: 1
  1714 ;; Hardware stack levels required when called: 1
  1715 ;; This function calls:
  1716 ;;		_i2c_wait_for_idle
  1717 ;; This function is called by:
  1718 ;;		_ds1307_read
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722     0534                     _i2c_repeat_start:	
  1723                           ;psect for function _i2c_repeat_start
  1724                           
  1725     0534                     l869:	
  1726                           ;incstack = 0
  1727                           ; Regs used in _i2c_repeat_start: [wreg+status,2+status,0+pclath+cstack]
  1728                           
  1729                           
  1730                           ;i2c.c: 41:     i2c_wait_for_idle();
  1731     0534  120A  118A  2565  120A  118A  	fcall	_i2c_wait_for_idle
  1732     0539                     l871:
  1733                           
  1734                           ;i2c.c: 42:     RSEN = 1;
  1735     0539  1683               	bsf	3,5	;RP0=1, select bank1
  1736     053A  1303               	bcf	3,6	;RP1=0, select bank1
  1737     053B  1491               	bsf	17,1	;volatile
  1738     053C                     l72:
  1739     053C  0008               	return
  1740     053D                     __end_of_i2c_repeat_start:
  1741                           
  1742                           	psect	text14
  1743     05FE                     __ptext14:	
  1744 ;; *************** function _i2c_read *****************
  1745 ;; Defined at:
  1746 ;;		line 62 in file "i2c.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  ack             1    wreg     unsigned char 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  ack             1    1[COMMON] unsigned char 
  1751 ;;  data            1    0[COMMON] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      unsigned char 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         0       0       0       0       0
  1762 ;;      Locals:         2       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0
  1764 ;;      Totals:         2       0       0       0       0
  1765 ;;Total ram usage:        2 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 1
  1768 ;; This function calls:
  1769 ;;		_i2c_wait_for_idle
  1770 ;; This function is called by:
  1771 ;;		_ds1307_read
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775     05FE                     _i2c_read:	
  1776                           ;psect for function _i2c_read
  1777                           
  1778                           
  1779                           ;incstack = 0
  1780                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  1781                           ;i2c_read@ack stored from wreg
  1782     05FE  00F1               	movwf	i2c_read@ack
  1783     05FF                     l885:
  1784                           
  1785                           ;i2c.c: 62: unsigned char i2c_read(unsigned char ack);i2c.c: 63: {;i2c.c: 64:     unsign
      +                          ed char data;;i2c.c: 66:     i2c_wait_for_idle();
  1786     05FF  120A  118A  2565  120A  118A  	fcall	_i2c_wait_for_idle
  1787     0604                     l887:
  1788                           
  1789                           ;i2c.c: 67:     RCEN = 1;
  1790     0604  1683               	bsf	3,5	;RP0=1, select bank1
  1791     0605  1303               	bcf	3,6	;RP1=0, select bank1
  1792     0606  1591               	bsf	17,3	;volatile
  1793                           
  1794                           ;i2c.c: 69:     i2c_wait_for_idle();
  1795     0607  120A  118A  2565  120A  118A  	fcall	_i2c_wait_for_idle
  1796     060C                     l889:
  1797                           
  1798                           ;i2c.c: 70:     data = SSPBUF;
  1799     060C  1283               	bcf	3,5	;RP0=0, select bank0
  1800     060D  1303               	bcf	3,6	;RP1=0, select bank0
  1801     060E  0813               	movf	19,w	;volatile
  1802     060F  00F0               	movwf	i2c_read@data
  1803     0610                     l891:
  1804                           
  1805                           ;i2c.c: 72:     if(ack == 1)
  1806     0610  0371               	decf	i2c_read@ack,w
  1807     0611  1D03               	btfss	3,2
  1808     0612  2E14               	goto	u221
  1809     0613  2E15               	goto	u220
  1810     0614                     u221:
  1811     0614  2E19               	goto	l895
  1812     0615                     u220:
  1813     0615                     l893:
  1814                           
  1815                           ;i2c.c: 73:     {;i2c.c: 74:         ACKDT = 1;
  1816     0615  1683               	bsf	3,5	;RP0=1, select bank1
  1817     0616  1303               	bcf	3,6	;RP1=0, select bank1
  1818     0617  1691               	bsf	17,5	;volatile
  1819                           
  1820                           ;i2c.c: 75:     }
  1821     0618  2E21               	goto	l82
  1822     0619                     l895:
  1823     0619  0871               	movf	i2c_read@ack,w
  1824     061A  1D03               	btfss	3,2
  1825     061B  2E1D               	goto	u231
  1826     061C  2E1E               	goto	u230
  1827     061D                     u231:
  1828     061D  2E21               	goto	l82
  1829     061E                     u230:
  1830     061E                     l897:
  1831                           
  1832                           ;i2c.c: 77:     {;i2c.c: 78:         ACKDT = 0;
  1833     061E  1683               	bsf	3,5	;RP0=1, select bank1
  1834     061F  1303               	bcf	3,6	;RP1=0, select bank1
  1835     0620  1291               	bcf	17,5	;volatile
  1836     0621                     l82:
  1837                           
  1838                           ;i2c.c: 81:     ACKEN = 1;
  1839     0621  1683               	bsf	3,5	;RP0=1, select bank1
  1840     0622  1303               	bcf	3,6	;RP1=0, select bank1
  1841     0623  1611               	bsf	17,4	;volatile
  1842     0624                     l899:
  1843                           
  1844                           ;i2c.c: 83:     return data;
  1845     0624  0870               	movf	i2c_read@data,w
  1846     0625                     l84:
  1847     0625  0008               	return
  1848     0626                     __end_of_i2c_read:
  1849                           
  1850                           	psect	text15
  1851     0565                     __ptext15:	
  1852 ;; *************** function _i2c_wait_for_idle *****************
  1853 ;; Defined at:
  1854 ;;		line 23 in file "i2c.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         0       0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0
  1871 ;;      Totals:         0       0       0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_i2c_start
  1878 ;;		_i2c_repeat_start
  1879 ;;		_i2c_stop
  1880 ;;		_i2c_write
  1881 ;;		_i2c_read
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885     0565                     _i2c_wait_for_idle:	
  1886                           ;psect for function _i2c_wait_for_idle
  1887                           
  1888     0565                     l861:	
  1889                           ;incstack = 0
  1890                           ; Regs used in _i2c_wait_for_idle: [wreg+status,2]
  1891                           
  1892     0565                     l63:	
  1893                           ;i2c.c: 26:     while(R_nW || (SSPCON2 & 0x1F));
  1894                           
  1895     0565  1683               	bsf	3,5	;RP0=1, select bank1
  1896     0566  1303               	bcf	3,6	;RP1=0, select bank1
  1897     0567  1914               	btfsc	20,2	;volatile
  1898     0568  2D6A               	goto	u201
  1899     0569  2D6B               	goto	u200
  1900     056A                     u201:
  1901     056A  2D65               	goto	l63
  1902     056B                     u200:
  1903     056B                     l863:
  1904     056B  0811               	movf	17,w	;volatile
  1905     056C  391F               	andlw	31
  1906     056D  1D03               	btfss	3,2
  1907     056E  2D70               	goto	u211
  1908     056F  2D71               	goto	u210
  1909     0570                     u211:
  1910     0570  2D65               	goto	l63
  1911     0571                     u210:
  1912     0571                     l66:
  1913     0571  0008               	return
  1914     0572                     __end_of_i2c_wait_for_idle:
  1915                           
  1916                           	psect	text16
  1917     06E0                     __ptext16:	
  1918 ;; *************** function _display_time *****************
  1919 ;; Defined at:
  1920 ;;		line 41 in file "main.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  clock_reg       1    wreg     PTR unsigned char 
  1923 ;;		 -> main@clock_reg(3), 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  clock_reg       1    9[BANK0 ] PTR unsigned char 
  1926 ;;		 -> main@clock_reg(3), 
  1927 ;;  time            9    0[BANK0 ] unsigned char [9]
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         0       0       0       0       0
  1938 ;;      Locals:         0      10       0       0       0
  1939 ;;      Temps:          1       0       0       0       0
  1940 ;;      Totals:         1      10       0       0       0
  1941 ;;Total ram usage:       11 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; Hardware stack levels required when called: 2
  1944 ;; This function calls:
  1945 ;;		_clcd_print
  1946 ;; This function is called by:
  1947 ;;		_main
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951     06E0                     _display_time:	
  1952                           ;psect for function _display_time
  1953                           
  1954                           
  1955                           ;incstack = 0
  1956                           ; Regs used in _display_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1957                           ;display_time@clock_reg stored from wreg
  1958     06E0  1283               	bcf	3,5	;RP0=0, select bank0
  1959     06E1  1303               	bcf	3,6	;RP1=0, select bank0
  1960     06E2  00A9               	movwf	display_time@clock_reg
  1961     06E3                     l1017:
  1962                           
  1963                           ;main.c: 41: ;main.c: 42:     time[6] = ((clock_reg[2] >> 4) & 0x07) + '0';;main.c: 43: 
      +                              time[7] = (clock_reg[2] & 0x0F) + '0';;main.c: 46:     clcd_print(time, (0xC0 + 3));
  1964     06E3  0829               	movf	display_time@clock_reg,w
  1965     06E4  0084               	movwf	4
  1966     06E5  1383               	bcf	3,7	;select IRP bank0
  1967     06E6  0800               	movf	0,w
  1968     06E7  00F7               	movwf	??_display_time
  1969     06E8  3004               	movlw	4
  1970     06E9                     u365:
  1971     06E9  1003               	clrc
  1972     06EA  0CF7               	rrf	??_display_time,f
  1973     06EB  3EFF               	addlw	-1
  1974     06EC  1D03               	skipz
  1975     06ED  2EE9               	goto	u365
  1976     06EE  0877               	movf	??_display_time,w
  1977     06EF  3903               	andlw	3
  1978     06F0  3E30               	addlw	48
  1979     06F1  00A0               	movwf	display_time@time
  1980                           
  1981                           ;main.c: 47: }
  1982     06F2  0829               	movf	display_time@clock_reg,w
  1983     06F3  0084               	movwf	4
  1984     06F4  0800               	movf	0,w
  1985     06F5  390F               	andlw	15
  1986     06F6  3E30               	addlw	48
  1987     06F7  00A1               	movwf	display_time@time+1
  1988     06F8                     l1019:
  1989     06F8  303A               	movlw	58
  1990     06F9  00A2               	movwf	display_time@time+2
  1991     06FA                     l1021:
  1992     06FA  0A29               	incf	display_time@clock_reg,w
  1993     06FB  0084               	movwf	4
  1994     06FC  0800               	movf	0,w
  1995     06FD  00F7               	movwf	??_display_time
  1996     06FE  3004               	movlw	4
  1997     06FF                     u375:
  1998     06FF  1003               	clrc
  1999     0700  0CF7               	rrf	??_display_time,f
  2000     0701  3EFF               	addlw	-1
  2001     0702  1D03               	skipz
  2002     0703  2EFF               	goto	u375
  2003     0704  0877               	movf	??_display_time,w
  2004     0705  3907               	andlw	7
  2005     0706  3E30               	addlw	48
  2006     0707  00A3               	movwf	display_time@time+3
  2007     0708                     l1023:
  2008     0708  0A29               	incf	display_time@clock_reg,w
  2009     0709  0084               	movwf	4
  2010     070A  0800               	movf	0,w
  2011     070B  390F               	andlw	15
  2012     070C  3E30               	addlw	48
  2013     070D  00A4               	movwf	display_time@time+4
  2014     070E                     l1025:
  2015     070E  303A               	movlw	58
  2016     070F  00A5               	movwf	display_time@time+5
  2017     0710  0829               	movf	display_time@clock_reg,w
  2018     0711  3E02               	addlw	2
  2019     0712  0084               	movwf	4
  2020     0713  0800               	movf	0,w
  2021     0714  00F7               	movwf	??_display_time
  2022     0715  3004               	movlw	4
  2023     0716                     u385:
  2024     0716  1003               	clrc
  2025     0717  0CF7               	rrf	??_display_time,f
  2026     0718  3EFF               	addlw	-1
  2027     0719  1D03               	skipz
  2028     071A  2F16               	goto	u385
  2029     071B  0877               	movf	??_display_time,w
  2030     071C  3907               	andlw	7
  2031     071D  3E30               	addlw	48
  2032     071E  00A6               	movwf	display_time@time+6
  2033     071F  0829               	movf	display_time@clock_reg,w
  2034     0720  3E02               	addlw	2
  2035     0721  0084               	movwf	4
  2036     0722  0800               	movf	0,w
  2037     0723  390F               	andlw	15
  2038     0724  3E30               	addlw	48
  2039     0725  00A7               	movwf	display_time@time+7
  2040     0726                     l1027:
  2041     0726  01A8               	clrf	display_time@time+8
  2042     0727                     l1029:
  2043     0727  3020               	movlw	(low (display_time@time| 0))& (0+255)
  2044     0728  00F4               	movwf	clcd_print@str
  2045     0729  3000               	movlw	0
  2046     072A  00F5               	movwf	clcd_print@str+1
  2047     072B  30C3               	movlw	195
  2048     072C  00F6               	movwf	clcd_print@addr
  2049     072D  120A  118A  267B  120A  118A  	fcall	_clcd_print
  2050     0732                     l31:
  2051     0732  0008               	return
  2052     0733                     __end_of_display_time:
  2053                           
  2054                           	psect	text17
  2055     067B                     __ptext17:	
  2056 ;; *************** function _clcd_print *****************
  2057 ;; Defined at:
  2058 ;;		line 62 in file "clcd.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  str             2    4[COMMON] PTR const unsigned char 
  2061 ;;		 -> display_time@time(9), STR_1(9), 
  2062 ;;  addr            1    6[COMMON] unsigned char 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         3       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0
  2077 ;;      Totals:         3       0       0       0       0
  2078 ;;Total ram usage:        3 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; Hardware stack levels required when called: 1
  2081 ;; This function calls:
  2082 ;;		_clcd_write
  2083 ;; This function is called by:
  2084 ;;		_init_config
  2085 ;;		_display_time
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089     067B                     _clcd_print:	
  2090                           ;psect for function _clcd_print
  2091                           
  2092     067B                     l999:	
  2093                           ;incstack = 0
  2094                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2095                           
  2096                           
  2097                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  2098     067B  01F0               	clrf	clcd_write@mode
  2099     067C  0876               	movf	clcd_print@addr,w
  2100     067D  120A  118A  26AA  120A  118A  	fcall	_clcd_write
  2101                           
  2102                           ;clcd.c: 66:     while (*str != '\0')
  2103     0682  2E99               	goto	l1005
  2104     0683                     l1001:
  2105                           
  2106                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  2107     0683  01F0               	clrf	clcd_write@mode
  2108     0684  0AF0               	incf	clcd_write@mode,f
  2109     0685  0875               	movf	clcd_print@str+1,w
  2110     0686  00FF               	movwf	btemp+1
  2111     0687  0874               	movf	clcd_print@str,w
  2112     0688  0084               	movwf	4
  2113     0689  120A  118A  2003  120A  118A  	fcall	stringtab
  2114     068E  120A  118A  26AA  120A  118A  	fcall	_clcd_write
  2115     0693                     l1003:
  2116                           
  2117                           ;clcd.c: 69:         str++;
  2118     0693  3001               	movlw	1
  2119     0694  07F4               	addwf	clcd_print@str,f
  2120     0695  1803               	skipnc
  2121     0696  0AF5               	incf	clcd_print@str+1,f
  2122     0697  3000               	movlw	0
  2123     0698  07F5               	addwf	clcd_print@str+1,f
  2124     0699                     l1005:
  2125                           
  2126                           ;clcd.c: 66:     while (*str != '\0')
  2127     0699  0875               	movf	clcd_print@str+1,w
  2128     069A  1283               	bcf	3,5	;RP0=0, select bank0
  2129     069B  1303               	bcf	3,6	;RP1=0, select bank0
  2130     069C  00FF               	movwf	btemp+1
  2131     069D  0874               	movf	clcd_print@str,w
  2132     069E  0084               	movwf	4
  2133     069F  120A  118A  2003  120A  118A  	fcall	stringtab
  2134     06A4  3A00               	xorlw	0
  2135     06A5  1D03               	skipz
  2136     06A6  2EA8               	goto	u351
  2137     06A7  2EA9               	goto	u350
  2138     06A8                     u351:
  2139     06A8  2E83               	goto	l1001
  2140     06A9                     u350:
  2141     06A9                     l116:
  2142     06A9  0008               	return
  2143     06AA                     __end_of_clcd_print:
  2144                           
  2145                           	psect	text18
  2146     06AA                     __ptext18:	
  2147 ;; *************** function _clcd_write *****************
  2148 ;; Defined at:
  2149 ;;		line 4 in file "clcd.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  byte            1    wreg     unsigned char 
  2152 ;;  mode            1    0[COMMON] unsigned char 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  byte            1    3[COMMON] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2164 ;;      Params:         1       0       0       0       0
  2165 ;;      Locals:         1       0       0       0       0
  2166 ;;      Temps:          2       0       0       0       0
  2167 ;;      Totals:         4       0       0       0       0
  2168 ;;Total ram usage:        4 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_init_display_controller
  2174 ;;		_clcd_print
  2175 ;;		_clcd_putch
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179     06AA                     _clcd_write:	
  2180                           ;psect for function _clcd_write
  2181                           
  2182                           
  2183                           ;incstack = 0
  2184                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  2185                           ;clcd_write@byte stored from wreg
  2186     06AA  00F3               	movwf	clcd_write@byte
  2187     06AB                     l903:
  2188                           
  2189                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
  2190     06AB  1870               	btfsc	clcd_write@mode,0
  2191     06AC  2EAE               	goto	u241
  2192     06AD  2EB2               	goto	u240
  2193     06AE                     u241:
  2194     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2195     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2196     06B0  1509               	bsf	9,2	;volatile
  2197     06B1  2EB5               	goto	u254
  2198     06B2                     u240:
  2199     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  2200     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  2201     06B4  1109               	bcf	9,2	;volatile
  2202     06B5                     u254:
  2203     06B5                     l905:
  2204                           
  2205                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  2206     06B5  0873               	movf	clcd_write@byte,w
  2207     06B6  39F0               	andlw	240
  2208     06B7  0088               	movwf	8	;volatile
  2209     06B8                     l907:
  2210                           
  2211                           ;clcd.c: 9:     RE1 = 1;
  2212     06B8  1489               	bsf	9,1	;volatile
  2213     06B9                     l909:
  2214                           
  2215                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2216     06B9  30A6               	movlw	166
  2217     06BA  00F1               	movwf	??_clcd_write
  2218     06BB                     u467:
  2219     06BB  0BF1               	decfsz	??_clcd_write,f
  2220     06BC  2EBB               	goto	u467
  2221     06BD  0000               	nop
  2222     06BE                     l911:
  2223                           
  2224                           ;clcd.c: 11:     RE1 = 0;
  2225     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  2226     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  2227     06C0  1089               	bcf	9,1	;volatile
  2228     06C1                     l913:
  2229                           
  2230                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  2231     06C1  0873               	movf	clcd_write@byte,w
  2232     06C2  390F               	andlw	15
  2233     06C3  00F1               	movwf	??_clcd_write
  2234     06C4  3003               	movlw	3
  2235     06C5                     u265:
  2236     06C5  1003               	clrc
  2237     06C6  0DF1               	rlf	??_clcd_write,f
  2238     06C7  3EFF               	addlw	-1
  2239     06C8  1D03               	skipz
  2240     06C9  2EC5               	goto	u265
  2241     06CA  1003               	clrc
  2242     06CB  0D71               	rlf	??_clcd_write,w
  2243     06CC  0088               	movwf	8	;volatile
  2244     06CD                     l915:
  2245                           
  2246                           ;clcd.c: 14:     RE1 = 1;
  2247     06CD  1489               	bsf	9,1	;volatile
  2248     06CE                     l917:
  2249                           
  2250                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2251     06CE  30A6               	movlw	166
  2252     06CF  00F1               	movwf	??_clcd_write
  2253     06D0                     u477:
  2254     06D0  0BF1               	decfsz	??_clcd_write,f
  2255     06D1  2ED0               	goto	u477
  2256     06D2  0000               	nop
  2257     06D3                     l919:
  2258                           
  2259                           ;clcd.c: 16:     RE1 = 0;
  2260     06D3  1283               	bcf	3,5	;RP0=0, select bank0
  2261     06D4  1303               	bcf	3,6	;RP1=0, select bank0
  2262     06D5  1089               	bcf	9,1	;volatile
  2263     06D6                     l921:
  2264                           
  2265                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2266     06D6  301B               	movlw	27
  2267     06D7  00F2               	movwf	??_clcd_write+1
  2268     06D8  309E               	movlw	158
  2269     06D9  00F1               	movwf	??_clcd_write
  2270     06DA                     u487:
  2271     06DA  0BF1               	decfsz	??_clcd_write,f
  2272     06DB  2EDA               	goto	u487
  2273     06DC  0BF2               	decfsz	??_clcd_write+1,f
  2274     06DD  2EDA               	goto	u487
  2275     06DE  0000               	nop
  2276     06DF                     l101:
  2277     06DF  0008               	return
  2278     06E0                     __end_of_clcd_write:
  2279     007E                     btemp	set	126	;btemp
  2280     007E                     wtemp0	set	126
  2281                           
  2282                           	psect	config
  2283                           
  2284                           ;Config register CONFIG @ 0x2007
  2285                           ;	Oscillator Selection bits
  2286                           ;	FOSC = 0x3, unprogrammed default
  2287                           ;	Watchdog Timer Enable bit
  2288                           ;	WDTE = OFF, WDT disabled
  2289                           ;	Power-up Timer Enable bit
  2290                           ;	PWRTE = 0x1, unprogrammed default
  2291                           ;	Brown-out Reset Enable bit
  2292                           ;	BOREN = 0x1, unprogrammed default
  2293                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2294                           ;	LVP = 0x1, unprogrammed default
  2295                           ;	Data EEPROM Memory Code Protection bit
  2296                           ;	CPD = 0x1, unprogrammed default
  2297                           ;	Flash Program Memory Write Enable bits
  2298                           ;	WRT = 0x3, unprogrammed default
  2299                           ;	In-Circuit Debugger Mode bit
  2300                           ;	DEBUG = 0x1, unprogrammed default
  2301                           ;	Flash Program Memory Code Protection bit
  2302                           ;	CP = 0x1, unprogrammed default
  2303     2007                     	org	8199
  2304     2007  3FFB               	dw	16379

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 9
		 -> display_time@time(BANK0[9]), STR_1(CODE[9]), 

    display_time@clock_reg	PTR unsigned char  size(1) Largest target is 3
		 -> main@clock_reg(BANK0[3]), 

    get_time@clock_reg	PTR unsigned char  size(1) Largest target is 3
		 -> main@clock_reg(BANK0[3]), 


Critical Paths under _main in COMMON

    _init_rtc->_ds1307_read
    _ds1307_write->_i2c_write
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _i2c_init->___lldiv
    _get_time->_ds1307_read
    _ds1307_read->_i2c_read
    _display_time->_clcd_print
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    _main->_display_time
    _init_config->_i2c_init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4853
                                             10 BANK0      3     3      0
                       _display_time
                           _get_time
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    2909
                         _clcd_print
                           _i2c_init
                          _init_clcd
                           _init_rtc
 ---------------------------------------------------------------------------------
 (2) _init_rtc                                             1     1      0     322
                                              4 COMMON     1     1      0
                        _ds1307_read
                       _ds1307_write
 ---------------------------------------------------------------------------------
 (3) _ds1307_write                                         2     1      1     142
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             5     1      4     412
                                              0 BANK0      5     1      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _get_time                                             1     1      0     233
                                              4 COMMON     1     1      0
                        _ds1307_read
 ---------------------------------------------------------------------------------
 (3) _ds1307_read                                          2     2      0     134
                                              2 COMMON     2     2      0
                           _i2c_read
                   _i2c_repeat_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_repeat_start                                     0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             2     2      0      67
                                              0 COMMON     2     2      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_wait_for_idle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_time                                        11    11      0    1655
                                              7 COMMON     1     1      0
                                              0 BANK0     10    10      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    1273
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_time
     _clcd_print
       _clcd_write
   _get_time
     _ds1307_read
       _i2c_read
         _i2c_wait_for_idle
       _i2c_repeat_start
         _i2c_wait_for_idle
       _i2c_start
         _i2c_wait_for_idle
       _i2c_stop
         _i2c_wait_for_idle
       _i2c_write
         _i2c_wait_for_idle
   _init_config
     _clcd_print
     _i2c_init
       ___lldiv
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_rtc
       _ds1307_read
       _ds1307_write
         _i2c_start
         _i2c_stop
         _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Oct 31 18:20:48 2023

                              pc 0002                   clcd_print@addr 0076                               l31 0732  
                             l17 05FD                               l28 05D8                               l60 064F  
                             l63 0565                               l72 053C                               l66 0571  
                             l82 0621                               l75 054E                               l84 0625  
                             l69 0545                               l78 0559                               fsr 0004  
                            l101 06DF                              l104 0795                              l107 0564  
                            l116 06A9                              l133 0584                              l136 067A  
                            l139 05B7                              l261 07FB                              l911 06BE  
                            l903 06AB                              l921 06D6                              l913 06C1  
                            l905 06B5                              l915 06CD                              l907 06B8  
                            l923 0651                              l931 073B                              l917 06CE  
                            l909 06B9                              l861 0565                              l925 0679  
                            l941 0761                              l933 0742                              l919 06D3  
                            l863 056B                              l871 0539                              l951 0790  
                            l943 0768                              l935 0752                              l865 053D  
                            l873 0546                              l881 0559                              l961 07B2  
                            l945 0774                              l937 0757                              l929 0733  
                            l953 059B                              l891 0610                              l867 0542  
                            l875 054B                              l971 07E3                              l963 07B6  
                            l955 0796                              l947 0779                              l939 075E  
                            l893 0615                              l885 05FF                              l869 0534  
                            l877 0550                              l973 07E4                              l965 07BA  
                            l957 07A6                              l981 0626                              l949 0789  
                            l895 0619                              l887 0604                              l879 0555  
                            l975 07ED                              l967 07C3                              l959 07A9  
                            l983 062A                              l991 055F                              l897 061E  
                            l889 060C                              l969 07D5                              l977 07F3  
                            l985 055A                              l993 0572                              l899 0624  
                            l987 055D                              l995 0579                              l989 055E  
                            l997 057C                              l999 067B                              _RE1 0049  
                            _RE2 004A                              u200 056B                              u201 056A  
                            u210 0571                              u211 0570                              u220 0615  
                            u221 0614                              u230 061E                              u310 07D5  
                            u231 061D                              u311 07D4                              u240 06B2  
                            u241 06AE                              u305 07BC                              u330 07F3  
                            u331 07F2                              u315 07D1                              u325 07E5  
                            u254 06B5                              u350 06A9                              u270 07A6  
                            u351 06A8                              u271 07A5                              u407 0746  
                            _PEN 048A                              u265 06C5                              u345 0644  
                            u417 0754                              u290 07BA                              u291 07B9  
                            u427 076A                              u365 06E9                              u285 07AB  
                            u437 0776                              u375 06FF                              u447 0784  
                            u385 0716                              u457 0792                              u467 06BB  
                            _SEN 0488                              u477 06D0                              u397 0737  
                            u487 06DA                    ?_display_time 0070                              fsr0 0004  
                            indf 0000                             l1001 0683                             l1003 0693  
                           l1011 05ED                             l1005 0699                             l1021 06FA  
                           l1013 05F2                             l1023 0708                             l1015 05B9  
                           l1007 05D9                             l1031 0585                             l1025 070E  
                           l1017 06E3                             l1009 05E8                             l1033 058A  
                           l1027 0726                             l1019 06F8                             l1035 0590  
                           l1029 0727                             STR_1 0013                             _RCEN 048B  
                           _RSEN 0489                             _R_nW 04A2                             _main 0585  
                           btemp 007E                             start 0000                ?_i2c_repeat_start 0070  
                 clcd_write@byte 0073                   clcd_write@mode 0070               ??_i2c_repeat_start 0070  
                          ?_main 0070                            _ACKEN 048C                            _ACKDT 048D  
                 ??_display_time 0077                  __end_of___lldiv 07FC                      i2c_read@ack 0071  
                   ?_init_config 0070                            _PORTD 0008                            _SSPM3 00A3  
                          _TRISD 0088                            _SSPEN 00A5                            pclath 000A  
                          status 0003                            wtemp0 007E                    ??_ds1307_read 0072  
                __initialization 07FC                     __end_of_main 059A                 __end_of_i2c_init 0650  
               __end_of_i2c_read 0626                 __end_of_i2c_stop 054F                           ??_main 007E  
                  main@clock_reg 002A                     i2c_read@data 0070                           _SSPADD 0093  
                         _TRISE1 0449                           _TRISE2 044A                           _SSPBUF 0013  
                  ?_ds1307_write 0071                 __end_of_get_time 05D9          _init_display_controller 0733  
                      ??___lldiv 0078              __end_of_ds1307_read 067B                 __end_of_init_rtc 0585  
        __end_of__initialization 07FC             __end_of_display_time 0733                   ??_ds1307_write 0072  
                 __pcstackCOMMON 0070               ds1307_read@address 0072                __end_of_i2c_start 0546  
              __end_of_i2c_write 055A                _i2c_wait_for_idle 0565               ?_i2c_wait_for_idle 0070  
                      ?_i2c_init 0020                        ?_i2c_read 0070                        ?_i2c_stop 0070  
      ??_init_display_controller 0074                       _clcd_print 067B              ??_i2c_wait_for_idle 0070  
                     _clcd_write 06AA                      _ds1307_read 0650                       __pmaintext 0585  
                        _ACKSTAT 048E        __end_of_i2c_wait_for_idle 0572                          _SSPCON2 0091  
                      ?_get_time 0070                       __stringtab 0003                       ??_i2c_init 0024  
                     ??_i2c_read 0070                       ??_i2c_stop 0070                        ?_init_rtc 0070  
                        ___lldiv 0796                          __ptext1 05D9                          __ptext2 0572  
                        __ptext3 059A                          __ptext4 055A                          __ptext5 0733  
                        __ptext6 0626                          __ptext7 0796                          __ptext8 05B8  
                        __ptext9 0650  __end_of_init_display_controller 0796                __end_of_init_clcd 0565  
           __end_of_ds1307_write 05B8                       ??_get_time 0074             end_of_initialization 07FC  
                     ??_init_rtc 0074                      ?_clcd_print 0074                  ___lldiv@divisor 0070  
                    ?_clcd_write 0070                  ___lldiv@counter 007D                     _display_time 06E0  
                  i2c_write@data 0070                    clcd_print@str 0074                 _i2c_repeat_start 0534  
            start_initialization 07FC                        _i2c_start 053D                        _i2c_write 054F  
                   ?_ds1307_read 0070                i2c_init@baud_rate 0020                    ??_init_config 007E  
                      ___latbits 0002                    __pcstackBANK0 0020                       ?_i2c_start 0070  
                     ?_i2c_write 0070                  ds1307_read@data 0073                     _ds1307_write 059A  
            ds1307_write@address 0072                         ?___lldiv 0070                        __pstrings 0003  
                      _init_clcd 055A              __end_of_init_config 05FE         ?_init_display_controller 0070  
                   ??_clcd_print 0077                     ??_clcd_write 0071                      __stringbase 0012  
                    ??_i2c_start 0070               __end_of_clcd_print 06AA                      ??_i2c_write 0070  
             __end_of_clcd_write 06E0                       ?_init_clcd 0070                         _i2c_init 0626  
                       _i2c_read 05FE                         _i2c_stop 0546                get_time@clock_reg 0074  
       __end_of_i2c_repeat_start 053D               __end_of__stringtab 0013                      _init_config 05D9  
                       __ptext10 054F                         __ptext11 0546                         __ptext12 053D  
                       __ptext13 0534                         __ptext14 05FE                         __ptext15 0565  
                       __ptext16 06E0                         __ptext17 067B                         __ptext18 06AA  
                       _get_time 05B8                         _init_rtc 0572            display_time@clock_reg 0029  
               display_time@time 0020                      ??_init_clcd 0076                    init_rtc@dummy 0074  
               ___lldiv@dividend 0074                ds1307_write@value 0071                        stringcode 000D  
               ___lldiv@quotient 0079                         stringdir 000D                         stringtab 0003  
