

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Oct 30 15:30:50 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 22/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     010E                     	;# 
   112     010F                     	;# 
   113     018C                     	;# 
   114     018D                     	;# 
   115     0000                     	;# 
   116     0001                     	;# 
   117     0002                     	;# 
   118     0003                     	;# 
   119     0004                     	;# 
   120     0005                     	;# 
   121     0006                     	;# 
   122     0007                     	;# 
   123     0008                     	;# 
   124     0009                     	;# 
   125     000A                     	;# 
   126     000B                     	;# 
   127     000C                     	;# 
   128     000D                     	;# 
   129     000E                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0014                     	;# 
   137     0015                     	;# 
   138     0015                     	;# 
   139     0016                     	;# 
   140     0017                     	;# 
   141     0018                     	;# 
   142     0019                     	;# 
   143     001A                     	;# 
   144     001B                     	;# 
   145     001B                     	;# 
   146     001C                     	;# 
   147     001D                     	;# 
   148     001E                     	;# 
   149     001F                     	;# 
   150     0081                     	;# 
   151     0085                     	;# 
   152     0086                     	;# 
   153     0087                     	;# 
   154     0088                     	;# 
   155     0089                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0091                     	;# 
   160     0092                     	;# 
   161     0093                     	;# 
   162     0094                     	;# 
   163     0098                     	;# 
   164     0099                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     010C                     	;# 
   170     010D                     	;# 
   171     010E                     	;# 
   172     010F                     	;# 
   173     018C                     	;# 
   174     018D                     	;# 
   175     0000                     	;# 
   176     0001                     	;# 
   177     0002                     	;# 
   178     0003                     	;# 
   179     0004                     	;# 
   180     0005                     	;# 
   181     0006                     	;# 
   182     0007                     	;# 
   183     0008                     	;# 
   184     0009                     	;# 
   185     000A                     	;# 
   186     000B                     	;# 
   187     000C                     	;# 
   188     000D                     	;# 
   189     000E                     	;# 
   190     000E                     	;# 
   191     000F                     	;# 
   192     0010                     	;# 
   193     0011                     	;# 
   194     0012                     	;# 
   195     0013                     	;# 
   196     0014                     	;# 
   197     0015                     	;# 
   198     0015                     	;# 
   199     0016                     	;# 
   200     0017                     	;# 
   201     0018                     	;# 
   202     0019                     	;# 
   203     001A                     	;# 
   204     001B                     	;# 
   205     001B                     	;# 
   206     001C                     	;# 
   207     001D                     	;# 
   208     001E                     	;# 
   209     001F                     	;# 
   210     0081                     	;# 
   211     0085                     	;# 
   212     0086                     	;# 
   213     0087                     	;# 
   214     0088                     	;# 
   215     0089                     	;# 
   216     008C                     	;# 
   217     008D                     	;# 
   218     008E                     	;# 
   219     0091                     	;# 
   220     0092                     	;# 
   221     0093                     	;# 
   222     0094                     	;# 
   223     0098                     	;# 
   224     0099                     	;# 
   225     009C                     	;# 
   226     009D                     	;# 
   227     009E                     	;# 
   228     009F                     	;# 
   229     010C                     	;# 
   230     010D                     	;# 
   231     010E                     	;# 
   232     010F                     	;# 
   233     018C                     	;# 
   234     018D                     	;# 
   235     0000                     	;# 
   236     0001                     	;# 
   237     0002                     	;# 
   238     0003                     	;# 
   239     0004                     	;# 
   240     0005                     	;# 
   241     0006                     	;# 
   242     0007                     	;# 
   243     0008                     	;# 
   244     0009                     	;# 
   245     000A                     	;# 
   246     000B                     	;# 
   247     000C                     	;# 
   248     000D                     	;# 
   249     000E                     	;# 
   250     000E                     	;# 
   251     000F                     	;# 
   252     0010                     	;# 
   253     0011                     	;# 
   254     0012                     	;# 
   255     0013                     	;# 
   256     0014                     	;# 
   257     0015                     	;# 
   258     0015                     	;# 
   259     0016                     	;# 
   260     0017                     	;# 
   261     0018                     	;# 
   262     0019                     	;# 
   263     001A                     	;# 
   264     001B                     	;# 
   265     001B                     	;# 
   266     001C                     	;# 
   267     001D                     	;# 
   268     001E                     	;# 
   269     001F                     	;# 
   270     0081                     	;# 
   271     0085                     	;# 
   272     0086                     	;# 
   273     0087                     	;# 
   274     0088                     	;# 
   275     0089                     	;# 
   276     008C                     	;# 
   277     008D                     	;# 
   278     008E                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0094                     	;# 
   283     0098                     	;# 
   284     0099                     	;# 
   285     009C                     	;# 
   286     009D                     	;# 
   287     009E                     	;# 
   288     009F                     	;# 
   289     010C                     	;# 
   290     010D                     	;# 
   291     010E                     	;# 
   292     010F                     	;# 
   293     018C                     	;# 
   294     018D                     	;# 
   295     0000                     	;# 
   296     0001                     	;# 
   297     0002                     	;# 
   298     0003                     	;# 
   299     0004                     	;# 
   300     0005                     	;# 
   301     0006                     	;# 
   302     0007                     	;# 
   303     0008                     	;# 
   304     0009                     	;# 
   305     000A                     	;# 
   306     000B                     	;# 
   307     000C                     	;# 
   308     000D                     	;# 
   309     000E                     	;# 
   310     000E                     	;# 
   311     000F                     	;# 
   312     0010                     	;# 
   313     0011                     	;# 
   314     0012                     	;# 
   315     0013                     	;# 
   316     0014                     	;# 
   317     0015                     	;# 
   318     0015                     	;# 
   319     0016                     	;# 
   320     0017                     	;# 
   321     0018                     	;# 
   322     0019                     	;# 
   323     001A                     	;# 
   324     001B                     	;# 
   325     001B                     	;# 
   326     001C                     	;# 
   327     001D                     	;# 
   328     001E                     	;# 
   329     001F                     	;# 
   330     0081                     	;# 
   331     0085                     	;# 
   332     0086                     	;# 
   333     0087                     	;# 
   334     0088                     	;# 
   335     0089                     	;# 
   336     008C                     	;# 
   337     008D                     	;# 
   338     008E                     	;# 
   339     0091                     	;# 
   340     0092                     	;# 
   341     0093                     	;# 
   342     0094                     	;# 
   343     0098                     	;# 
   344     0099                     	;# 
   345     009C                     	;# 
   346     009D                     	;# 
   347     009E                     	;# 
   348     009F                     	;# 
   349     010C                     	;# 
   350     010D                     	;# 
   351     010E                     	;# 
   352     010F                     	;# 
   353     018C                     	;# 
   354     018D                     	;# 
   355                           
   356                           	psect	idataBANK0
   357     0112                     __pidataBANK0:
   358                           
   359                           ;initializer for main@ssd
   360     0112  3406               	retlw	6
   361     0113  345B               	retlw	91
   362     0114  344F               	retlw	79
   363     0115  3466               	retlw	102
   364     0005                     _PORTA	set	5
   365     0008                     _PORTD	set	8
   366     0006                     _PORTB	set	6
   367     0001                     _TMR0	set	1
   368     005C                     _INTE	set	92
   369     005F                     _GIE	set	95
   370     0037                     _RB7	set	55
   371     005D                     _TMR0IE	set	93
   372     0059                     _INTF	set	89
   373     005A                     _TMR0IF	set	90
   374     0085                     _TRISA	set	133
   375     0088                     _TRISD	set	136
   376     040B                     _PSA	set	1035
   377     040D                     _T0CS	set	1037
   378     0437                     _TRISB7	set	1079
   379                           
   380                           	psect	cinit
   381     000F                     start_initialization:	
   382                           ; #config settings
   383                           
   384     000F                     __initialization:
   385                           
   386                           ; Initialize objects allocated to BANK0
   387     000F  120A  118A  2112  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   388     0014  00A6               	movwf	__pdataBANK0& (0+127)
   389     0015  120A  118A  2113  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   390     001A  00A7               	movwf	(__pdataBANK0+1)& (0+127)
   391     001B  120A  118A  2114  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   392     0020  00A8               	movwf	(__pdataBANK0+2)& (0+127)
   393     0021  120A  118A  2115  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   394     0026  00A9               	movwf	(__pdataBANK0+3)& (0+127)
   395                           
   396                           ; Clear objects allocated to BANK0
   397     0027  01AA               	clrf	__pbssBANK0& (0+127)
   398     0028  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   399                           
   400                           ; Clear objects allocated to COMMON
   401     0029  01F6               	clrf	__pbssCOMMON& (0+127)
   402     002A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   403     002B                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406     002B                     __end_of__initialization:
   407     002B  0183               	clrf	3
   408     002C  120A  118A  28BB   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMMON
   411     0076                     __pbssCOMMON:
   412     0076                     _count1:
   413     0076                     	ds	2
   414                           
   415                           	psect	bssBANK0
   416     002A                     __pbssBANK0:
   417     002A                     isr@count:
   418     002A                     	ds	2
   419                           
   420                           	psect	dataBANK0
   421     0026                     __pdataBANK0:
   422     0026                     main@ssd:
   423     0026                     	ds	4
   424                           
   425                           	psect	cstackCOMMON
   426     0070                     __pcstackCOMMON:
   427     0070                     ?_init_ssd:
   428     0070                     ?_init_timer0:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ?_display:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     ?_isr:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     ??_isr:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0070                     ?_init_config:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0070                     ?_main:	
   444                           ; 1 bytes @ 0x0
   445                           
   446                           
   447                           ; 1 bytes @ 0x0
   448     0070                     	ds	2
   449     0072                     ??_init_ssd:
   450     0072                     ??_init_timer0:	
   451                           ; 1 bytes @ 0x2
   452                           
   453     0072                     ??_display:	
   454                           ; 1 bytes @ 0x2
   455                           
   456     0072                     ??_init_config:	
   457                           ; 1 bytes @ 0x2
   458                           
   459                           
   460                           ; 1 bytes @ 0x2
   461     0072                     	ds	4
   462     0076                     ??_main:
   463                           
   464                           	psect	cstackBANK0
   465     0020                     __pcstackBANK0:	
   466                           ; 1 bytes @ 0x6
   467                           
   468     0020                     display@wait:
   469                           
   470                           ; 4 bytes @ 0x0
   471     0020                     	ds	4
   472     0024                     display@data:
   473                           
   474                           ; 1 bytes @ 0x4
   475     0024                     	ds	1
   476     0025                     display@digit:
   477                           
   478                           ; 1 bytes @ 0x5
   479     0025                     	ds	1
   480                           
   481                           	psect	maintext
   482     00BB                     __pmaintext:	
   483 ;;
   484 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   485 ;;
   486 ;; *************** function _main *****************
   487 ;; Defined at:
   488 ;;		line 30 in file "main.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : B00/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0
   505 ;;      Totals:         0       0       0       0       0
   506 ;;Total ram usage:        0 bytes
   507 ;; Hardware stack levels required when called: 3
   508 ;; This function calls:
   509 ;;		_display
   510 ;;		_init_config
   511 ;; This function is called by:
   512 ;;		Startup code after reset
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516     00BB                     _main:	
   517                           ;psect for function _main
   518                           
   519     00BB                     l791:	
   520                           ;incstack = 0
   521                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   522                           
   523                           
   524                           ;main.c: 32: ;main.c: 33:             display(ssd);
   525     00BB  120A  118A  20E9  120A  118A  	fcall	_init_config
   526     00C0                     l793:
   527                           
   528                           ;main.c: 37:     return;
   529     00C0  0877               	movf	_count1+1,w
   530     00C1  3A80               	xorlw	128
   531     00C2  00FF               	movwf	btemp+1
   532     00C3  3080               	movlw	128
   533     00C4  027F               	subwf	btemp+1,w
   534     00C5  1D03               	skipz
   535     00C6  28C9               	goto	u235
   536     00C7  3005               	movlw	5
   537     00C8  0276               	subwf	_count1,w
   538     00C9                     u235:
   539     00C9  1C03               	skipc
   540     00CA  28CC               	goto	u231
   541     00CB  28CD               	goto	u230
   542     00CC                     u231:
   543     00CC  28D2               	goto	l799
   544     00CD                     u230:
   545     00CD                     l795:
   546                           
   547                           ;main.c: 38: }
   548     00CD  128B               	bcf	11,5	;volatile
   549     00CE                     l797:
   550     00CE  1283               	bcf	3,5	;RP0=0, select bank0
   551     00CF  1303               	bcf	3,6	;RP1=0, select bank0
   552     00D0  0186               	clrf	6	;volatile
   553     00D1  0188               	clrf	8	;volatile
   554     00D2                     l799:
   555     00D2  0877               	movf	_count1+1,w
   556     00D3  3A80               	xorlw	128
   557     00D4  00FF               	movwf	btemp+1
   558     00D5  3080               	movlw	128
   559     00D6  027F               	subwf	btemp+1,w
   560     00D7  1D03               	skipz
   561     00D8  28DB               	goto	u245
   562     00D9  3005               	movlw	5
   563     00DA  0276               	subwf	_count1,w
   564     00DB                     u245:
   565     00DB  1803               	skipnc
   566     00DC  28DE               	goto	u241
   567     00DD  28DF               	goto	u240
   568     00DE                     u241:
   569     00DE  28C0               	goto	l793
   570     00DF                     u240:
   571     00DF                     l801:
   572     00DF  3026               	movlw	(low (main@ssd| 0))& (0+255)
   573     00E0  120A  118A  202F  120A  118A  	fcall	_display
   574     00E5  28C0               	goto	l793
   575     00E6  120A  118A  280C   	ljmp	start
   576     00E9                     __end_of_main:
   577                           
   578                           	psect	text1
   579     00E9                     __ptext1:	
   580 ;; *************** function _init_config *****************
   581 ;; Defined at:
   582 ;;		line 16 in file "main.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, pclath, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   596 ;;      Params:         0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used: 1
   602 ;; Hardware stack levels required when called: 2
   603 ;; This function calls:
   604 ;;		_init_ssd
   605 ;;		_init_timer0
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611     00E9                     _init_config:	
   612                           ;psect for function _init_config
   613                           
   614     00E9                     l715:	
   615                           ;incstack = 0
   616                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   617                           
   618                           
   619                           ;main.c: 18:     init_config();
   620     00E9  1683               	bsf	3,5	;RP0=1, select bank1
   621     00EA  1303               	bcf	3,6	;RP1=0, select bank1
   622     00EB  1386               	bcf	6,7	;volatile
   623     00EC                     l717:
   624                           
   625                           ;main.c: 19: 
   626     00EC  120A  118A  20FC  120A  118A  	fcall	_init_ssd
   627                           
   628                           ;main.c: 20:     while (1) {
   629     00F1  120A  118A  2108  120A  118A  	fcall	_init_timer0
   630     00F6                     l719:
   631                           
   632                           ;main.c: 21: 
   633     00F6  1283               	bcf	3,5	;RP0=0, select bank0
   634     00F7  1303               	bcf	3,6	;RP1=0, select bank0
   635     00F8  1386               	bcf	6,7	;volatile
   636     00F9                     l721:
   637                           
   638                           ;main.c: 24:             TMR0IE = 0;
   639     00F9  178B               	bsf	11,7	;volatile
   640     00FA                     l723:
   641                           
   642                           ;main.c: 26:             PORTB = 0x00;
   643     00FA  160B               	bsf	11,4	;volatile
   644     00FB                     l47:
   645     00FB  0008               	return
   646     00FC                     __end_of_init_config:
   647                           
   648                           	psect	text2
   649     0108                     __ptext2:	
   650 ;; *************** function _init_timer0 *****************
   651 ;; Defined at:
   652 ;;		line 10 in file "timers.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0
   669 ;;      Totals:         0       0       0       0       0
   670 ;;Total ram usage:        0 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; Hardware stack levels required when called: 1
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_init_config
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680     0108                     _init_timer0:	
   681                           ;psect for function _init_timer0
   682                           
   683     0108                     l709:	
   684                           ;incstack = 0
   685                           ; Regs used in _init_timer0: [wreg]
   686                           
   687                           
   688                           ;timers.c: 13:     T0CS = 0;
   689     0108  1683               	bsf	3,5	;RP0=1, select bank1
   690     0109  1303               	bcf	3,6	;RP1=0, select bank1
   691     010A  1281               	bcf	1,5	;volatile
   692                           
   693                           ;timers.c: 16:     PSA = 1;
   694     010B  1581               	bsf	1,3	;volatile
   695     010C                     l711:
   696                           
   697                           ;timers.c: 18:     TMR0 = 6;
   698     010C  3006               	movlw	6
   699     010D  1283               	bcf	3,5	;RP0=0, select bank0
   700     010E  1303               	bcf	3,6	;RP1=0, select bank0
   701     010F  0081               	movwf	1	;volatile
   702     0110                     l713:
   703                           
   704                           ;timers.c: 21:     TMR0IE = 1;
   705     0110  168B               	bsf	11,5	;volatile
   706     0111                     l89:
   707     0111  0008               	return
   708     0112                     __end_of_init_timer0:
   709                           
   710                           	psect	text3
   711     00FC                     __ptext3:	
   712 ;; *************** function _init_ssd *****************
   713 ;; Defined at:
   714 ;;		line 11 in file "ssd.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, status,2
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0
   731 ;;      Totals:         0       0       0       0       0
   732 ;;Total ram usage:        0 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 1
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_init_config
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742     00FC                     _init_ssd:	
   743                           ;psect for function _init_ssd
   744                           
   745     00FC                     l703:	
   746                           ;incstack = 0
   747                           ; Regs used in _init_ssd: [wreg+status,2]
   748                           
   749                           
   750                           ;ssd.c: 14:     TRISD = 0x00;
   751     00FC  1683               	bsf	3,5	;RP0=1, select bank1
   752     00FD  1303               	bcf	3,6	;RP1=0, select bank1
   753     00FE  0188               	clrf	8	;volatile
   754     00FF                     l705:
   755                           
   756                           ;ssd.c: 17:     TRISA = TRISA & 0x03;
   757     00FF  0805               	movf	5,w	;volatile
   758     0100  3903               	andlw	3
   759     0101  0085               	movwf	5	;volatile
   760     0102                     l707:
   761                           
   762                           ;ssd.c: 19:     PORTA = PORTA & 0x03;
   763     0102  1283               	bcf	3,5	;RP0=0, select bank0
   764     0103  1303               	bcf	3,6	;RP1=0, select bank0
   765     0104  0805               	movf	5,w	;volatile
   766     0105  3903               	andlw	3
   767     0106  0085               	movwf	5	;volatile
   768     0107                     l70:
   769     0107  0008               	return
   770     0108                     __end_of_init_ssd:
   771                           
   772                           	psect	text4
   773     002F                     __ptext4:	
   774 ;; *************** function _display *****************
   775 ;; Defined at:
   776 ;;		line 22 in file "ssd.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  data            1    wreg     PTR unsigned char 
   779 ;;		 -> main@ssd(4), 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  data            1    4[BANK0 ] PTR unsigned char 
   782 ;;		 -> main@ssd(4), 
   783 ;;  wait            4    0[BANK0 ] unsigned long 
   784 ;;  digit           1    5[BANK0 ] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   794 ;;      Params:         0       0       0       0       0
   795 ;;      Locals:         0       6       0       0       0
   796 ;;      Temps:          4       0       0       0       0
   797 ;;      Totals:         4       6       0       0       0
   798 ;;Total ram usage:       10 bytes
   799 ;; Hardware stack levels used: 1
   800 ;; Hardware stack levels required when called: 1
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_main
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808     002F                     _display:	
   809                           ;psect for function _display
   810                           
   811                           
   812                           ;incstack = 0
   813                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1]
   814                           ;display@data stored from wreg
   815     002F  1283               	bcf	3,5	;RP0=0, select bank0
   816     0030  1303               	bcf	3,6	;RP1=0, select bank0
   817     0031  00A4               	movwf	display@data
   818     0032                     l773:
   819                           
   820                           ;ssd.c: 22: void display(unsigned char data[]);ssd.c: 23: {;ssd.c: 24:     unsigned char
      +                           digit;;ssd.c: 26:     for (digit = 0; digit < 4; digit++)
   821     0032  01A5               	clrf	display@digit
   822     0033                     l779:
   823                           
   824                           ;ssd.c: 27:     {;ssd.c: 28:         PORTD = data[digit];
   825     0033  0825               	movf	display@digit,w
   826     0034  0724               	addwf	display@data,w
   827     0035  00F2               	movwf	??_display
   828     0036  0872               	movf	??_display,w
   829     0037  0084               	movwf	4
   830     0038  1383               	bcf	3,7	;select IRP bank0
   831     0039  0800               	movf	0,w
   832     003A  0088               	movwf	8	;volatile
   833     003B                     l781:
   834                           
   835                           ;ssd.c: 29:         PORTA = (PORTA & 0x03) | (0x04 << digit);
   836     003B  3004               	movlw	4
   837     003C  00F2               	movwf	??_display
   838     003D  0A25               	incf	display@digit,w
   839     003E  2841               	goto	u194
   840     003F                     u195:
   841     003F  1003               	clrc
   842     0040  0DF2               	rlf	??_display,f
   843     0041                     u194:
   844     0041  3EFF               	addlw	-1
   845     0042  1D03               	skipz
   846     0043  283F               	goto	u195
   847     0044  0805               	movf	5,w	;volatile
   848     0045  3903               	andlw	3
   849     0046  0472               	iorwf	??_display,w
   850     0047  0085               	movwf	5	;volatile
   851     0048                     l783:
   852                           
   853                           ;ssd.c: 31:        for (unsigned long int wait = 200;wait-- ; );
   854     0048  3000               	movlw	0
   855     0049  00A3               	movwf	display@wait+3
   856     004A  3000               	movlw	0
   857     004B  00A2               	movwf	display@wait+2
   858     004C  3000               	movlw	0
   859     004D  00A1               	movwf	display@wait+1
   860     004E  30C8               	movlw	200
   861     004F  00A0               	movwf	display@wait
   862     0050                     l785:
   863     0050  3001               	movlw	1
   864     0051  00F2               	movwf	??_display
   865     0052  3000               	movlw	0
   866     0053  00F3               	movwf	??_display+1
   867     0054  3000               	movlw	0
   868     0055  00F4               	movwf	??_display+2
   869     0056  3000               	movlw	0
   870     0057  00F5               	movwf	??_display+3
   871     0058  0872               	movf	??_display,w
   872     0059  1283               	bcf	3,5	;RP0=0, select bank0
   873     005A  1303               	bcf	3,6	;RP1=0, select bank0
   874     005B  02A0               	subwf	display@wait,f
   875     005C  0873               	movf	??_display+1,w
   876     005D  1C03               	skipc
   877     005E  0F73               	incfsz	??_display+1,w
   878     005F  2861               	goto	u205
   879     0060  2862               	goto	u206
   880     0061                     u205:
   881     0061  02A1               	subwf	display@wait+1,f
   882     0062                     u206:
   883     0062  0874               	movf	??_display+2,w
   884     0063  1C03               	skipc
   885     0064  0F74               	incfsz	??_display+2,w
   886     0065  2867               	goto	u207
   887     0066  2868               	goto	u208
   888     0067                     u207:
   889     0067  02A2               	subwf	display@wait+2,f
   890     0068                     u208:
   891     0068  0875               	movf	??_display+3,w
   892     0069  1C03               	skipc
   893     006A  0F75               	incfsz	??_display+3,w
   894     006B  286D               	goto	u209
   895     006C  286E               	goto	u200
   896     006D                     u209:
   897     006D  02A3               	subwf	display@wait+3,f
   898     006E                     u200:
   899     006E  0A20               	incf	display@wait,w
   900     006F  1D03               	skipz
   901     0070  287B               	goto	u211
   902     0071  0A21               	incf	display@wait+1,w
   903     0072  1D03               	skipz
   904     0073  287B               	goto	u211
   905     0074  0A22               	incf	display@wait+2,w
   906     0075  1D03               	skipz
   907     0076  287B               	goto	u211
   908     0077  0A23               	incf	display@wait+3,w
   909     0078  1D03               	btfss	3,2
   910     0079  287B               	goto	u211
   911     007A  287C               	goto	u210
   912     007B                     u211:
   913     007B  2850               	goto	l785
   914     007C                     u210:
   915     007C                     l787:
   916                           
   917                           ;ssd.c: 32:     }
   918     007C  3001               	movlw	1
   919     007D  00FF               	movwf	btemp+1
   920     007E  087F               	movf	btemp+1,w
   921     007F  1283               	bcf	3,5	;RP0=0, select bank0
   922     0080  1303               	bcf	3,6	;RP1=0, select bank0
   923     0081  07A5               	addwf	display@digit,f
   924     0082                     l789:
   925     0082  3004               	movlw	4
   926     0083  0225               	subwf	display@digit,w
   927     0084  1C03               	skipc
   928     0085  2887               	goto	u221
   929     0086  2888               	goto	u220
   930     0087                     u221:
   931     0087  2833               	goto	l779
   932     0088                     u220:
   933     0088                     l78:
   934     0088  0008               	return
   935     0089                     __end_of_display:
   936                           
   937                           	psect	text5
   938     0089                     __ptext5:	
   939 ;; *************** function _isr *****************
   940 ;; Defined at:
   941 ;;		line 13 in file "isr.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0
   957 ;;      Temps:          2       0       0       0       0
   958 ;;      Totals:         2       0       0       0       0
   959 ;;Total ram usage:        2 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		Interrupt level 1
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968     0089                     _isr:	
   969                           ;psect for function _isr
   970                           
   971     0089                     i1l743:
   972                           
   973                           ;isr.c: 15:     static unsigned int count = 0;;isr.c: 16:     if (TMR0IF == 1)
   974     0089  1D0B               	btfss	11,2	;volatile
   975     008A  288C               	goto	u14_21
   976     008B  288D               	goto	u14_20
   977     008C                     u14_21:
   978     008C  28B4               	goto	i1l22
   979     008D                     u14_20:
   980     008D                     i1l745:
   981                           
   982                           ;isr.c: 17:     {;isr.c: 18:         TMR0 = TMR0 + 6 + 2;
   983     008D  1283               	bcf	3,5	;RP0=0, select bank0
   984     008E  1303               	bcf	3,6	;RP1=0, select bank0
   985     008F  0801               	movf	1,w	;volatile
   986     0090  3E08               	addlw	8
   987     0091  0081               	movwf	1	;volatile
   988                           
   989                           ;isr.c: 19:         if (++count == 15000)
   990     0092  3001               	movlw	1
   991     0093  07AA               	addwf	isr@count,f
   992     0094  1803               	skipnc
   993     0095  0AAB               	incf	isr@count+1,f
   994     0096  3000               	movlw	0
   995     0097  07AB               	addwf	isr@count+1,f
   996     0098  3098               	movlw	152
   997     0099  062A               	xorwf	isr@count,w
   998     009A  303A               	movlw	58
   999     009B  1903               	skipnz
  1000     009C  062B               	xorwf	isr@count+1,w
  1001     009D  1D03               	btfss	3,2
  1002     009E  28A0               	goto	u15_21
  1003     009F  28A1               	goto	u15_20
  1004     00A0                     u15_21:
  1005     00A0  28B3               	goto	i1l759
  1006     00A1                     u15_20:
  1007     00A1                     i1l747:
  1008                           
  1009                           ;isr.c: 20:         {;isr.c: 21:             if(INTF == 1)
  1010     00A1  1C8B               	btfss	11,1	;volatile
  1011     00A2  28A4               	goto	u16_21
  1012     00A3  28A5               	goto	u16_20
  1013     00A4                     u16_21:
  1014     00A4  28A9               	goto	i1l755
  1015     00A5                     u16_20:
  1016     00A5                     i1l749:
  1017                           
  1018                           ;isr.c: 22:             {;isr.c: 23:                 count1 = 0;
  1019     00A5  01F6               	clrf	_count1
  1020     00A6  01F7               	clrf	_count1+1
  1021     00A7                     i1l751:
  1022                           
  1023                           ;isr.c: 24:                 INTF = 0;
  1024     00A7  108B               	bcf	11,1	;volatile
  1025     00A8                     i1l753:
  1026                           
  1027                           ;isr.c: 25:                 TMR0IE = 1;
  1028     00A8  168B               	bsf	11,5	;volatile
  1029     00A9                     i1l755:
  1030                           
  1031                           ;isr.c: 28:             count1++;
  1032     00A9  3001               	movlw	1
  1033     00AA  07F6               	addwf	_count1,f
  1034     00AB  1803               	skipnc
  1035     00AC  0AF7               	incf	_count1+1,f
  1036     00AD  3000               	movlw	0
  1037     00AE  07F7               	addwf	_count1+1,f
  1038     00AF                     i1l757:
  1039                           
  1040                           ;isr.c: 30:             count = 0;
  1041     00AF  01AA               	clrf	isr@count
  1042     00B0  01AB               	clrf	isr@count+1
  1043                           
  1044                           ;isr.c: 31:             RB7 = !RB7;
  1045     00B1  3080               	movlw	128
  1046     00B2  0686               	xorwf	6,f
  1047     00B3                     i1l759:
  1048                           
  1049                           ;isr.c: 34:         TMR0IF = 0;
  1050     00B3  110B               	bcf	11,2	;volatile
  1051     00B4                     i1l22:
  1052     00B4  0871               	movf	??_isr+1,w
  1053     00B5  008A               	movwf	10
  1054     00B6  0E70               	swapf	??_isr,w
  1055     00B7  0083               	movwf	3
  1056     00B8  0EFE               	swapf	btemp,f
  1057     00B9  0E7E               	swapf	btemp,w
  1058     00BA  0009               	retfie
  1059     00BB                     __end_of_isr:
  1060     007E                     btemp	set	126	;btemp
  1061     007E                     wtemp0	set	126
  1062                           
  1063                           	psect	intentry
  1064     0004                     __pintentry:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _isr: [wreg+status,2+status,0]
  1067                           
  1068     0004                     interrupt_function:
  1069     007E                     saved_w	set	btemp
  1070     0004  00FE               	movwf	btemp
  1071     0005  0E03               	swapf	3,w
  1072     0006  00F0               	movwf	??_isr
  1073     0007  080A               	movf	10,w
  1074     0008  00F1               	movwf	??_isr+1
  1075     0009  120A  118A  2889   	ljmp	_isr
  1076                           
  1077                           	psect	config
  1078                           
  1079                           ;Config register CONFIG @ 0x2007
  1080                           ;	Oscillator Selection bits
  1081                           ;	FOSC = 0x3, unprogrammed default
  1082                           ;	Watchdog Timer Enable bit
  1083                           ;	WDTE = OFF, WDT disabled
  1084                           ;	Power-up Timer Enable bit
  1085                           ;	PWRTE = 0x1, unprogrammed default
  1086                           ;	Brown-out Reset Enable bit
  1087                           ;	BOREN = 0x1, unprogrammed default
  1088                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1089                           ;	LVP = 0x1, unprogrammed default
  1090                           ;	Data EEPROM Memory Code Protection bit
  1091                           ;	CPD = 0x1, unprogrammed default
  1092                           ;	Flash Program Memory Write Enable bits
  1093                           ;	WRT = 0x3, unprogrammed default
  1094                           ;	In-Circuit Debugger Mode bit
  1095                           ;	DEBUG = 0x1, unprogrammed default
  1096                           ;	Flash Program Memory Code Protection bit
  1097                           ;	CP = 0x1, unprogrammed default
  1098     2007                     	org	8199
  1099     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      6      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_display

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_display

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     231
                            _display
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_ssd
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                             10    10      0     231
                                              2 COMMON     4     4      0
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _init_config
     _init_ssd
     _init_timer0

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6       C       5       15.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      14      12        0.0%
ABS                  0      0      14       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Oct 30 15:30:50 2023

                     l70 0107                       l47 00FB                       l78 0088  
                     l89 0111                      l703 00FC                      l711 010C  
                    l705 00FF                      l713 0110                      l721 00F9  
                    l801 00DF                      l707 0102                      l723 00FA  
                    l715 00E9                      l709 0108                      l717 00EC  
                    l719 00F6                      l781 003B                      l773 0032  
                    l783 0048                      l791 00BB                      l785 0050  
                    l793 00C0                      l787 007C                      l779 0033  
                    l795 00CD                      l789 0082                      l797 00CE  
                    l799 00D2                      _GIE 005F                      _RB7 0037  
                    u200 006E                      u210 007C                      u211 007B  
                    u220 0088                      u221 0087                      u205 0061  
                    u206 0062                      u230 00CD                      u207 0067  
                    u231 00CC                      u208 0068                      u240 00DF  
                    u209 006D                      u241 00DE                      u235 00C9  
                    u245 00DB                      u194 0041                      u195 003F  
                    _PSA 040B                      _isr 0089                      fsr0 0004  
                    indf 0000                     ?_isr 0070                     _T0CS 040D  
                   _INTE 005C                     i1l22 00B4                     _INTF 0059  
                   _TMR0 0001              display@data 0024              display@wait 0020  
                   _main 00BB                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070             ?_init_config 0070  
                  i1l751 00A7                    i1l743 0089                    i1l753 00A8  
                  i1l745 008D                    i1l755 00A9                    i1l747 00A1  
                  i1l757 00AF                    i1l749 00A5                    i1l759 00B3  
                  u14_20 008D                    u14_21 008C                    u15_20 00A1  
                  u15_21 00A0                    u16_20 00A5                    u16_21 00A4  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _TRISA 0085                    _TRISD 0088             ?_init_timer0 0070  
           display@digit 0025          __end_of_display 0089                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00E9                   ??_main 0076                   _TMR0IE 005D  
                 _TMR0IF 005A                   _TRISB7 0437                   _count1 0076  
       __end_of_init_ssd 0108                ??_display 0072                   saved_w 007E  
__end_of__initialization 002B           __pcstackCOMMON 0070             __pidataBANK0 0112  
             __pbssBANK0 002A               __pmaintext 00BB               __pintentry 0004  
              ?_init_ssd 0070                  __ptext1 00E9                  __ptext2 0108  
                __ptext3 00FC                  __ptext4 002F                  __ptext5 0089  
                _display 002F                  main@ssd 0026     end_of_initialization 002B  
             ??_init_ssd 0072      start_initialization 000F              __end_of_isr 00BB  
            __pdataBANK0 0026            ??_init_config 0072            ??_init_timer0 0072  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0020  
               ?_display 0070      __end_of_init_config 00FC      __end_of_init_timer0 0112  
      interrupt_function 0004              _init_config 00E9              _init_timer0 0108  
               _init_ssd 00FC                 isr@count 002A                 intlevel1 0000  
