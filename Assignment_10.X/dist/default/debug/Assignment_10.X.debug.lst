

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Oct 26 21:36:23 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 22/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177     0000                     	;# 
   178     0001                     	;# 
   179     0002                     	;# 
   180     0003                     	;# 
   181     0004                     	;# 
   182     0005                     	;# 
   183     0006                     	;# 
   184     0007                     	;# 
   185     0008                     	;# 
   186     0009                     	;# 
   187     000A                     	;# 
   188     000B                     	;# 
   189     000C                     	;# 
   190     000D                     	;# 
   191     000E                     	;# 
   192     000E                     	;# 
   193     000F                     	;# 
   194     0010                     	;# 
   195     0011                     	;# 
   196     0012                     	;# 
   197     0013                     	;# 
   198     0014                     	;# 
   199     0015                     	;# 
   200     0015                     	;# 
   201     0016                     	;# 
   202     0017                     	;# 
   203     0018                     	;# 
   204     0019                     	;# 
   205     001A                     	;# 
   206     001B                     	;# 
   207     001B                     	;# 
   208     001C                     	;# 
   209     001D                     	;# 
   210     001E                     	;# 
   211     001F                     	;# 
   212     0081                     	;# 
   213     0085                     	;# 
   214     0086                     	;# 
   215     0087                     	;# 
   216     0088                     	;# 
   217     0089                     	;# 
   218     008C                     	;# 
   219     008D                     	;# 
   220     008E                     	;# 
   221     0091                     	;# 
   222     0092                     	;# 
   223     0093                     	;# 
   224     0094                     	;# 
   225     0098                     	;# 
   226     0099                     	;# 
   227     009C                     	;# 
   228     009D                     	;# 
   229     009E                     	;# 
   230     009F                     	;# 
   231     010C                     	;# 
   232     010D                     	;# 
   233     010E                     	;# 
   234     010F                     	;# 
   235     018C                     	;# 
   236     018D                     	;# 
   237     0000                     	;# 
   238     0001                     	;# 
   239     0002                     	;# 
   240     0003                     	;# 
   241     0004                     	;# 
   242     0005                     	;# 
   243     0006                     	;# 
   244     0007                     	;# 
   245     0008                     	;# 
   246     0009                     	;# 
   247     000A                     	;# 
   248     000B                     	;# 
   249     000C                     	;# 
   250     000D                     	;# 
   251     000E                     	;# 
   252     000E                     	;# 
   253     000F                     	;# 
   254     0010                     	;# 
   255     0011                     	;# 
   256     0012                     	;# 
   257     0013                     	;# 
   258     0014                     	;# 
   259     0015                     	;# 
   260     0015                     	;# 
   261     0016                     	;# 
   262     0017                     	;# 
   263     0018                     	;# 
   264     0019                     	;# 
   265     001A                     	;# 
   266     001B                     	;# 
   267     001B                     	;# 
   268     001C                     	;# 
   269     001D                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     0088                     	;# 
   277     0089                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     0091                     	;# 
   282     0092                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0098                     	;# 
   286     0099                     	;# 
   287     009C                     	;# 
   288     009D                     	;# 
   289     009E                     	;# 
   290     009F                     	;# 
   291     010C                     	;# 
   292     010D                     	;# 
   293     010E                     	;# 
   294     010F                     	;# 
   295     018C                     	;# 
   296     018D                     	;# 
   297                           
   298                           	psect	idataCOMMON
   299     04EA                     __pidataCOMMON:
   300                           
   301                           ;initializer for _num
   302     04EA  34D2               	retlw	210
   303     04EB  3404               	retlw	4
   304                           
   305                           ;initializer for read_digital_keypad@once
   306     04EC  3401               	retlw	1
   307                           
   308                           	psect	idataBANK0
   309     0503                     __pidataBANK0:
   310                           
   311                           ;initializer for main@F1191
   312     0503  343F               	retlw	63
   313     0504  3406               	retlw	6
   314     0505  345B               	retlw	91
   315     0506  344F               	retlw	79
   316     0507  3466               	retlw	102
   317     0508  346D               	retlw	109
   318     0509  347D               	retlw	125
   319     050A  3407               	retlw	7
   320     050B  347F               	retlw	127
   321     050C  346F               	retlw	111
   322     050D  3408               	retlw	8
   323     050E  3408               	retlw	8
   324     0005                     _PORTA	set	5
   325     0006                     _PORTB	set	6
   326     0008                     _PORTD	set	8
   327     0085                     _TRISA	set	133
   328     0088                     _TRISD	set	136
   329     0086                     _TRISB	set	134
   330                           
   331                           	psect	cinit
   332     07D8                     start_initialization:	
   333                           ; #config settings
   334                           
   335     07D8                     __initialization:
   336                           
   337                           ; Initialize objects allocated to BANK0
   338     07D8  1383               	bcf	3,7	;select IRP bank0
   339     07D9  3044               	movlw	low (__pdataBANK0+12)
   340     07DA  00FD               	movwf	btemp+-1
   341     07DB  3005               	movlw	high __pidataBANK0
   342     07DC  00FE               	movwf	btemp
   343     07DD  3003               	movlw	low __pidataBANK0
   344     07DE  00FF               	movwf	btemp+1
   345     07DF  3038               	movlw	low __pdataBANK0
   346     07E0  0084               	movwf	4
   347     07E1  120A  118A  2525  120A  118A  	fcall	init_ram0
   348                           
   349                           ; Initialize objects allocated to COMMON
   350     07E6  120A  118A  24EA  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   351     07EB  00FA               	movwf	__pdataCOMMON& (0+127)
   352     07EC  120A  118A  24EB  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   353     07F1  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   354     07F2  120A  118A  24EC  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   355     07F7  00FC               	movwf	(__pdataCOMMON+2)& (0+127)
   356                           
   357                           ; Clear objects allocated to BANK0
   358     07F8  01C4               	clrf	__pbssBANK0& (0+127)
   359     07F9  01C5               	clrf	(__pbssBANK0+1)& (0+127)
   360     07FA  01C6               	clrf	(__pbssBANK0+2)& (0+127)
   361     07FB  01C7               	clrf	(__pbssBANK0+3)& (0+127)
   362     07FC                     end_of_initialization:	
   363                           ;End of C runtime variable initialization code
   364                           
   365     07FC                     __end_of__initialization:
   366     07FC  0183               	clrf	3
   367     07FD  120A  118A  2DE7   	ljmp	_main	;jump to C main() function
   368                           
   369                           	psect	dataCOMMON
   370     007A                     __pdataCOMMON:
   371     007A                     _num:
   372     007A                     	ds	2
   373     007C                     read_digital_keypad@once:
   374     007C                     	ds	1
   375                           
   376                           	psect	bssBANK0
   377     0044                     __pbssBANK0:
   378     0044                     main@right:
   379     0044                     	ds	1
   380     0045                     main@left:
   381     0045                     	ds	1
   382     0046                     main@hold:
   383     0046                     	ds	1
   384     0047                     main@once:
   385     0047                     	ds	1
   386                           
   387                           	psect	dataBANK0
   388     0038                     __pdataBANK0:
   389     0038                     main@F1191:
   390     0038                     	ds	12
   391                           
   392                           	psect	inittext
   393     0521                     init_fetch0:	
   394                           ;	Called with low address in FSR and high address in W
   395                           
   396     0521  087E               	movf	btemp,w
   397     0522  008A               	movwf	10
   398     0523  087F               	movf	btemp+1,w
   399     0524  0082               	movwf	2
   400     0525                     init_ram0:	
   401                           ;Called with:
   402                           ;	high address of idata address in btemp 
   403                           ;	low address of idata address in btemp+1 
   404                           ;	low address of data in FSR
   405                           ;	high address + 1 of data in btemp-1
   406                           
   407     0525  120A  118A  2521  120A  118A  	fcall	init_fetch0
   408     052A  0080               	movwf	0
   409     052B  0A84               	incf	4,f
   410     052C  0804               	movf	4,w
   411     052D  067D               	xorwf	btemp+-1,w
   412     052E  1903               	btfsc	3,2
   413     052F  3400               	retlw	0
   414     0530  0AFF               	incf	btemp+1,f
   415     0531  1903               	btfsc	3,2
   416     0532  0AFE               	incf	btemp,f
   417     0533  2D25               	goto	init_ram0
   418                           
   419                           	psect	cstackCOMMON
   420     0070                     __pcstackCOMMON:
   421     0070                     ?_init_ssd:
   422     0070                     ??_init_ssd:	
   423                           ; 1 bytes @ 0x0
   424                           
   425     0070                     ?_init_digital_keypad:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0070                     ??_init_digital_keypad:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ?_read_digital_keypad:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     ??_read_digital_keypad:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     ?_display_ssd:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0070                     ??_display_ssd:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0070                     ?_init_config:	
   444                           ; 1 bytes @ 0x0
   445                           
   446     0070                     ??_init_config:	
   447                           ; 1 bytes @ 0x0
   448                           
   449     0070                     ?_main:	
   450                           ; 1 bytes @ 0x0
   451                           
   452     0070                     ?___awmod:	
   453                           ; 1 bytes @ 0x0
   454                           
   455     0070                     ___awmod@divisor:	
   456                           ; 2 bytes @ 0x0
   457                           
   458                           
   459                           ; 2 bytes @ 0x0
   460     0070                     	ds	1
   461     0071                     read_digital_keypad@mode:
   462     0071                     display_ssd@i:	
   463                           ; 1 bytes @ 0x1
   464                           
   465                           
   466                           ; 2 bytes @ 0x1
   467     0071                     	ds	1
   468     0072                     ___awmod@dividend:
   469                           
   470                           ; 2 bytes @ 0x2
   471     0072                     	ds	1
   472     0073                     display_ssd@data:
   473                           
   474                           ; 1 bytes @ 0x3
   475     0073                     	ds	1
   476     0074                     ??___awmod:
   477     0074                     display_ssd@digit:	
   478                           ; 1 bytes @ 0x4
   479                           
   480     0074                     ___awmod@counter:	
   481                           ; 1 bytes @ 0x4
   482                           
   483                           
   484                           ; 1 bytes @ 0x4
   485     0074                     	ds	1
   486     0075                     ___awmod@sign:
   487                           
   488                           ; 1 bytes @ 0x5
   489     0075                     	ds	1
   490     0076                     ??_main:
   491                           
   492                           ; 1 bytes @ 0x6
   493     0076                     	ds	4
   494                           
   495                           	psect	cstackBANK0
   496     0020                     __pcstackBANK0:
   497     0020                     main@vals:
   498                           
   499                           ; 12 bytes @ 0x0
   500     0020                     	ds	12
   501     002C                     main@wait:
   502                           
   503                           ; 2 bytes @ 0xC
   504     002C                     	ds	2
   505     002E                     main@key:
   506                           
   507                           ; 1 bytes @ 0xE
   508     002E                     	ds	1
   509     002F                     main@ssd:
   510                           
   511                           ; 4 bytes @ 0xF
   512     002F                     	ds	4
   513     0033                     main@prekey:
   514                           
   515                           ; 1 bytes @ 0x13
   516     0033                     	ds	1
   517     0034                     _main$677:
   518                           
   519                           ; 2 bytes @ 0x14
   520     0034                     	ds	2
   521     0036                     main@i:
   522                           
   523                           ; 2 bytes @ 0x16
   524     0036                     	ds	2
   525                           
   526                           	psect	maintext
   527     05E7                     __pmaintext:	
   528 ;;
   529 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   530 ;;
   531 ;; *************** function _main *****************
   532 ;; Defined at:
   533 ;;		line 21 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  vals           12    0[BANK0 ] unsigned char [12]
   538 ;;  ssd             4   15[BANK0 ] unsigned char [4]
   539 ;;  i               2   22[BANK0 ] int 
   540 ;;  wait            2   12[BANK0 ] int 
   541 ;;  prekey          1   19[BANK0 ] unsigned char 
   542 ;;  key             1   14[BANK0 ] unsigned char 
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : B00/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   552 ;;      Params:         0       0       0       0       0
   553 ;;      Locals:         0      24       0       0       0
   554 ;;      Temps:          4       0       0       0       0
   555 ;;      Totals:         4      24       0       0       0
   556 ;;Total ram usage:       28 bytes
   557 ;; Hardware stack levels required when called: 2
   558 ;; This function calls:
   559 ;;		___awmod
   560 ;;		_display_ssd
   561 ;;		_init_config
   562 ;;		_read_digital_keypad
   563 ;; This function is called by:
   564 ;;		Startup code after reset
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568     05E7                     _main:	
   569                           ;psect for function _main
   570                           
   571     05E7                     l925:	
   572                           ;incstack = 0
   573                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   574                           
   575                           
   576                           ;main.c: 22: 
   577     05E7  120A  118A  24F8  120A  118A  	fcall	_init_config
   578     05EC                     l927:
   579                           
   580                           ;main.c: 23: 
   581     05EC  1283               	bcf	3,5	;RP0=0, select bank0
   582     05ED  1303               	bcf	3,6	;RP1=0, select bank0
   583     05EE  01AC               	clrf	main@wait
   584     05EF  01AD               	clrf	main@wait+1
   585     05F0                     l929:
   586     05F0  01B6               	clrf	main@i
   587     05F1  01B7               	clrf	main@i+1
   588     05F2                     l931:
   589                           
   590                           ;main.c: 24: ;main.c: 25: 
   591     05F2  303F               	movlw	63
   592     05F3  00B3               	movwf	main@prekey
   593     05F4                     l933:
   594                           
   595                           ;main.c: 26: 
   596     05F4  3020               	movlw	main@vals& (0+255)
   597     05F5  0084               	movwf	4
   598     05F6  3038               	movlw	low main@F1191
   599     05F7  00F6               	movwf	??_main
   600     05F8  0804               	movf	4,w
   601     05F9  00F7               	movwf	??_main+1
   602     05FA  300C               	movlw	12
   603     05FB  00F8               	movwf	??_main+2
   604     05FC                     u470:
   605     05FC  0876               	movf	??_main,w
   606     05FD  0084               	movwf	4
   607     05FE  1383               	bcf	3,7	;select IRP bank0
   608     05FF  0800               	movf	0,w
   609     0600  00F9               	movwf	??_main+3
   610     0601  0AF6               	incf	??_main,f
   611     0602  0877               	movf	??_main+1,w
   612     0603  0084               	movwf	4
   613     0604  0879               	movf	??_main+3,w
   614     0605  0080               	movwf	0
   615     0606  0AF7               	incf	??_main+1,f
   616     0607  0BF8               	decfsz	??_main+2,f
   617     0608  2DFC               	goto	u470
   618     0609                     l935:
   619                           
   620                           ;main.c: 29:         {;main.c: 30:             wait = 0;
   621     0609  3000               	movlw	0
   622     060A  120A  118A  2534  120A  118A  	fcall	_read_digital_keypad
   623     060F  1283               	bcf	3,5	;RP0=0, select bank0
   624     0610  1303               	bcf	3,6	;RP1=0, select bank0
   625     0611  00AE               	movwf	main@key
   626     0612                     l937:
   627                           
   628                           ;main.c: 32:             {
   629     0612  303F               	movlw	63
   630     0613  062E               	xorwf	main@key,w
   631     0614  1903               	btfsc	3,2
   632     0615  2E17               	goto	u481
   633     0616  2E18               	goto	u480
   634     0617                     u481:
   635     0617  2E1A               	goto	l941
   636     0618                     u480:
   637     0618                     l939:
   638                           
   639                           ;main.c: 33:                 left = 1;
   640     0618  082E               	movf	main@key,w
   641     0619  00B3               	movwf	main@prekey
   642     061A                     l941:
   643                           
   644                           ;main.c: 40:                 ssd[0] = vals[i%12];
   645     061A  3001               	movlw	1
   646     061B  07AC               	addwf	main@wait,f
   647     061C  1803               	skipnc
   648     061D  0AAD               	incf	main@wait+1,f
   649     061E  3000               	movlw	0
   650     061F  07AD               	addwf	main@wait+1,f
   651     0620  30C9               	movlw	201
   652     0621  062C               	xorwf	main@wait,w
   653     0622  042D               	iorwf	main@wait+1,w
   654     0623  1D03               	btfss	3,2
   655     0624  2E26               	goto	u491
   656     0625  2E27               	goto	u490
   657     0626                     u491:
   658     0626  2FCE               	goto	l1027
   659     0627                     u490:
   660     0627                     l943:
   661                           
   662                           ;main.c: 41:                 ssd[1] = vals[(i+1) % 12];;main.c: 42:                 ssd[
      +                          2] = vals[(i+2) % 12];
   663     0627  01AC               	clrf	main@wait
   664     0628  01AD               	clrf	main@wait+1
   665     0629                     l945:
   666                           
   667                           ;main.c: 43:                 ssd[3] = vals[(i+3) % 12];
   668     0629  303E               	movlw	62
   669     062A  0633               	xorwf	main@prekey,w
   670     062B  1903               	btfsc	3,2
   671     062C  2E2E               	goto	u501
   672     062D  2E2F               	goto	u500
   673     062E                     u501:
   674     062E  2E35               	goto	l949
   675     062F                     u500:
   676     062F                     l947:
   677     062F  303F               	movlw	63
   678     0630  0633               	xorwf	main@prekey,w
   679     0631  1D03               	btfss	3,2
   680     0632  2E34               	goto	u511
   681     0633  2E35               	goto	u510
   682     0634                     u511:
   683     0634  2EB4               	goto	l973
   684     0635                     u510:
   685     0635                     l949:
   686     0635  0846               	movf	main@hold,w
   687     0636  1D03               	btfss	3,2
   688     0637  2E39               	goto	u521
   689     0638  2E3A               	goto	u520
   690     0639                     u521:
   691     0639  2EB4               	goto	l973
   692     063A                     u520:
   693     063A                     l951:
   694                           
   695                           ;main.c: 44:                 i++;;main.c: 45: 
   696     063A  01C5               	clrf	main@left
   697     063B  0AC5               	incf	main@left,f
   698     063C                     l953:
   699                           
   700                           ;main.c: 46:                 PORTD = 0x02;
   701     063C  01C4               	clrf	main@right
   702     063D                     l955:
   703                           
   704                           ;main.c: 47:             }
   705     063D  0847               	movf	main@once,w
   706     063E  1903               	btfsc	3,2
   707     063F  2E41               	goto	u531
   708     0640  2E42               	goto	u530
   709     0641                     u531:
   710     0641  2E4B               	goto	l961
   711     0642                     u530:
   712     0642                     l957:
   713                           
   714                           ;main.c: 48: ;main.c: 49:             else if((prekey == 0x3D) && (hold == 0))
   715     0642  0836               	movf	main@i,w
   716     0643  3EFD               	addlw	253
   717     0644  00B6               	movwf	main@i
   718     0645  0837               	movf	main@i+1,w
   719     0646  1803               	skipnc
   720     0647  3E01               	addlw	1
   721     0648  3EFF               	addlw	255
   722     0649  00B7               	movwf	main@i+1
   723     064A                     l959:
   724                           
   725                           ;main.c: 50:             {
   726     064A  01C7               	clrf	main@once
   727     064B                     l961:
   728                           
   729                           ;main.c: 52:                 left = 0;
   730     064B  300C               	movlw	12
   731     064C  00F0               	movwf	___awmod@divisor
   732     064D  3000               	movlw	0
   733     064E  00F1               	movwf	___awmod@divisor+1
   734     064F  0837               	movf	main@i+1,w
   735     0650  00F3               	movwf	___awmod@dividend+1
   736     0651  0836               	movf	main@i,w
   737     0652  00F2               	movwf	___awmod@dividend
   738     0653  120A  118A  258E  120A  118A  	fcall	___awmod
   739     0658  0870               	movf	?___awmod,w
   740     0659  3E20               	addlw	(low (main@vals| 0))& (0+255)
   741     065A  0084               	movwf	4
   742     065B  1383               	bcf	3,7	;select IRP bank0
   743     065C  0800               	movf	0,w
   744     065D  1283               	bcf	3,5	;RP0=0, select bank0
   745     065E  1303               	bcf	3,6	;RP1=0, select bank0
   746     065F  00AF               	movwf	main@ssd
   747     0660                     l963:
   748                           
   749                           ;main.c: 53:                 if(once == 0)
   750     0660  300C               	movlw	12
   751     0661  00F0               	movwf	___awmod@divisor
   752     0662  3000               	movlw	0
   753     0663  00F1               	movwf	___awmod@divisor+1
   754     0664  0836               	movf	main@i,w
   755     0665  3E01               	addlw	1
   756     0666  00F2               	movwf	___awmod@dividend
   757     0667  0837               	movf	main@i+1,w
   758     0668  1803               	skipnc
   759     0669  3E01               	addlw	1
   760     066A  3E00               	addlw	0
   761     066B  00F3               	movwf	___awmod@dividend+1
   762     066C  120A  118A  258E  120A  118A  	fcall	___awmod
   763     0671  0870               	movf	?___awmod,w
   764     0672  3E20               	addlw	(low (main@vals| 0))& (0+255)
   765     0673  0084               	movwf	4
   766     0674  1383               	bcf	3,7	;select IRP bank0
   767     0675  0800               	movf	0,w
   768     0676  1283               	bcf	3,5	;RP0=0, select bank0
   769     0677  1303               	bcf	3,6	;RP1=0, select bank0
   770     0678  00B0               	movwf	main@ssd+1
   771     0679                     l965:
   772                           
   773                           ;main.c: 54:                 {
   774     0679  300C               	movlw	12
   775     067A  00F0               	movwf	___awmod@divisor
   776     067B  3000               	movlw	0
   777     067C  00F1               	movwf	___awmod@divisor+1
   778     067D  0836               	movf	main@i,w
   779     067E  3E02               	addlw	2
   780     067F  00F2               	movwf	___awmod@dividend
   781     0680  0837               	movf	main@i+1,w
   782     0681  1803               	skipnc
   783     0682  3E01               	addlw	1
   784     0683  3E00               	addlw	0
   785     0684  00F3               	movwf	___awmod@dividend+1
   786     0685  120A  118A  258E  120A  118A  	fcall	___awmod
   787     068A  0870               	movf	?___awmod,w
   788     068B  3E20               	addlw	(low (main@vals| 0))& (0+255)
   789     068C  0084               	movwf	4
   790     068D  1383               	bcf	3,7	;select IRP bank0
   791     068E  0800               	movf	0,w
   792     068F  1283               	bcf	3,5	;RP0=0, select bank0
   793     0690  1303               	bcf	3,6	;RP1=0, select bank0
   794     0691  00B1               	movwf	main@ssd+2
   795     0692                     l967:
   796                           
   797                           ;main.c: 55:                     i = i+3;
   798     0692  300C               	movlw	12
   799     0693  00F0               	movwf	___awmod@divisor
   800     0694  3000               	movlw	0
   801     0695  00F1               	movwf	___awmod@divisor+1
   802     0696  0836               	movf	main@i,w
   803     0697  3E03               	addlw	3
   804     0698  00F2               	movwf	___awmod@dividend
   805     0699  0837               	movf	main@i+1,w
   806     069A  1803               	skipnc
   807     069B  3E01               	addlw	1
   808     069C  3E00               	addlw	0
   809     069D  00F3               	movwf	___awmod@dividend+1
   810     069E  120A  118A  258E  120A  118A  	fcall	___awmod
   811     06A3  0870               	movf	?___awmod,w
   812     06A4  3E20               	addlw	(low (main@vals| 0))& (0+255)
   813     06A5  0084               	movwf	4
   814     06A6  1383               	bcf	3,7	;select IRP bank0
   815     06A7  0800               	movf	0,w
   816     06A8  1283               	bcf	3,5	;RP0=0, select bank0
   817     06A9  1303               	bcf	3,6	;RP1=0, select bank0
   818     06AA  00B2               	movwf	main@ssd+3
   819     06AB                     l969:
   820                           
   821                           ;main.c: 56:                     once = 1;
   822     06AB  3001               	movlw	1
   823     06AC  07B6               	addwf	main@i,f
   824     06AD  1803               	skipnc
   825     06AE  0AB7               	incf	main@i+1,f
   826     06AF  3000               	movlw	0
   827     06B0  07B7               	addwf	main@i+1,f
   828     06B1                     l971:
   829                           
   830                           ;main.c: 58:                 ssd[0] = vals[(12+ ((i-3) % 12)) %12];
   831     06B1  3002               	movlw	2
   832     06B2  0088               	movwf	8	;volatile
   833                           
   834                           ;main.c: 59:                 ssd[1] = vals[(12+ ((i-2) % 12)) %12];
   835     06B3  2FCE               	goto	l1027
   836     06B4                     l973:
   837     06B4  303D               	movlw	61
   838     06B5  0633               	xorwf	main@prekey,w
   839     06B6  1D03               	btfss	3,2
   840     06B7  2EB9               	goto	u541
   841     06B8  2EBA               	goto	u540
   842     06B9                     u541:
   843     06B9  2F94               	goto	l1005
   844     06BA                     u540:
   845     06BA                     l975:
   846     06BA  0846               	movf	main@hold,w
   847     06BB  1D03               	btfss	3,2
   848     06BC  2EBE               	goto	u551
   849     06BD  2EBF               	goto	u550
   850     06BE                     u551:
   851     06BE  2F94               	goto	l1005
   852     06BF                     u550:
   853     06BF                     l977:
   854                           
   855                           ;main.c: 62:                 i--;;main.c: 63:             }
   856     06BF  01C4               	clrf	main@right
   857     06C0  0AC4               	incf	main@right,f
   858     06C1                     l979:
   859                           
   860                           ;main.c: 64: 
   861     06C1  01C5               	clrf	main@left
   862     06C2                     l981:
   863                           
   864                           ;main.c: 65:             else if(key == 0x3B)
   865     06C2  0847               	movf	main@once,w
   866     06C3  1D03               	btfss	3,2
   867     06C4  2EC6               	goto	u561
   868     06C5  2EC7               	goto	u560
   869     06C6                     u561:
   870     06C6  2ED1               	goto	l987
   871     06C7                     u560:
   872     06C7                     l983:
   873                           
   874                           ;main.c: 66:             {;main.c: 67: 
   875     06C7  0836               	movf	main@i,w
   876     06C8  3E03               	addlw	3
   877     06C9  00B6               	movwf	main@i
   878     06CA  0837               	movf	main@i+1,w
   879     06CB  1803               	skipnc
   880     06CC  3E01               	addlw	1
   881     06CD  3E00               	addlw	0
   882     06CE  00B7               	movwf	main@i+1
   883     06CF                     l985:
   884                           
   885                           ;main.c: 68:                 if(hold == 0)
   886     06CF  01C7               	clrf	main@once
   887     06D0  0AC7               	incf	main@once,f
   888     06D1                     l987:
   889                           
   890                           ;main.c: 70:                     if(right)
   891     06D1  300C               	movlw	12
   892     06D2  00F0               	movwf	___awmod@divisor
   893     06D3  3000               	movlw	0
   894     06D4  00F1               	movwf	___awmod@divisor+1
   895     06D5  0836               	movf	main@i,w
   896     06D6  3EFD               	addlw	253
   897     06D7  00F2               	movwf	___awmod@dividend
   898     06D8  0837               	movf	main@i+1,w
   899     06D9  1803               	skipnc
   900     06DA  3E01               	addlw	1
   901     06DB  3EFF               	addlw	255
   902     06DC  00F3               	movwf	___awmod@dividend+1
   903     06DD  120A  118A  258E  120A  118A  	fcall	___awmod
   904     06E2  0870               	movf	?___awmod,w
   905     06E3  3E0C               	addlw	12
   906     06E4  1283               	bcf	3,5	;RP0=0, select bank0
   907     06E5  1303               	bcf	3,6	;RP1=0, select bank0
   908     06E6  00B4               	movwf	_main$677
   909     06E7  0871               	movf	?___awmod+1,w
   910     06E8  1803               	skipnc
   911     06E9  3E01               	addlw	1
   912     06EA  3E00               	addlw	0
   913     06EB  00B5               	movwf	_main$677+1
   914     06EC                     l989:
   915                           
   916                           ;main.c: 70:                     if(right)
   917     06EC  300C               	movlw	12
   918     06ED  00F0               	movwf	___awmod@divisor
   919     06EE  3000               	movlw	0
   920     06EF  00F1               	movwf	___awmod@divisor+1
   921     06F0  0835               	movf	_main$677+1,w
   922     06F1  00F3               	movwf	___awmod@dividend+1
   923     06F2  0834               	movf	_main$677,w
   924     06F3  00F2               	movwf	___awmod@dividend
   925     06F4  120A  118A  258E  120A  118A  	fcall	___awmod
   926     06F9  0870               	movf	?___awmod,w
   927     06FA  3E20               	addlw	(low (main@vals| 0))& (0+255)
   928     06FB  0084               	movwf	4
   929     06FC  1383               	bcf	3,7	;select IRP bank0
   930     06FD  0800               	movf	0,w
   931     06FE  1283               	bcf	3,5	;RP0=0, select bank0
   932     06FF  1303               	bcf	3,6	;RP1=0, select bank0
   933     0700  00AF               	movwf	main@ssd
   934     0701                     l991:
   935                           
   936                           ;main.c: 71:                     {
   937     0701  300C               	movlw	12
   938     0702  00F0               	movwf	___awmod@divisor
   939     0703  3000               	movlw	0
   940     0704  00F1               	movwf	___awmod@divisor+1
   941     0705  0836               	movf	main@i,w
   942     0706  3EFE               	addlw	254
   943     0707  00F2               	movwf	___awmod@dividend
   944     0708  0837               	movf	main@i+1,w
   945     0709  1803               	skipnc
   946     070A  3E01               	addlw	1
   947     070B  3EFF               	addlw	255
   948     070C  00F3               	movwf	___awmod@dividend+1
   949     070D  120A  118A  258E  120A  118A  	fcall	___awmod
   950     0712  0870               	movf	?___awmod,w
   951     0713  3E0C               	addlw	12
   952     0714  1283               	bcf	3,5	;RP0=0, select bank0
   953     0715  1303               	bcf	3,6	;RP1=0, select bank0
   954     0716  00B4               	movwf	_main$677
   955     0717  0871               	movf	?___awmod+1,w
   956     0718  1803               	skipnc
   957     0719  3E01               	addlw	1
   958     071A  3E00               	addlw	0
   959     071B  00B5               	movwf	_main$677+1
   960     071C                     l993:
   961                           
   962                           ;main.c: 71:                     {
   963     071C  300C               	movlw	12
   964     071D  00F0               	movwf	___awmod@divisor
   965     071E  3000               	movlw	0
   966     071F  00F1               	movwf	___awmod@divisor+1
   967     0720  0835               	movf	_main$677+1,w
   968     0721  00F3               	movwf	___awmod@dividend+1
   969     0722  0834               	movf	_main$677,w
   970     0723  00F2               	movwf	___awmod@dividend
   971     0724  120A  118A  258E  120A  118A  	fcall	___awmod
   972     0729  0870               	movf	?___awmod,w
   973     072A  3E20               	addlw	(low (main@vals| 0))& (0+255)
   974     072B  0084               	movwf	4
   975     072C  1383               	bcf	3,7	;select IRP bank0
   976     072D  0800               	movf	0,w
   977     072E  1283               	bcf	3,5	;RP0=0, select bank0
   978     072F  1303               	bcf	3,6	;RP1=0, select bank0
   979     0730  00B0               	movwf	main@ssd+1
   980     0731                     l995:
   981                           
   982                           ;main.c: 72:                         i = i - 3;
   983     0731  300C               	movlw	12
   984     0732  00F0               	movwf	___awmod@divisor
   985     0733  3000               	movlw	0
   986     0734  00F1               	movwf	___awmod@divisor+1
   987     0735  0836               	movf	main@i,w
   988     0736  3EFF               	addlw	255
   989     0737  00F2               	movwf	___awmod@dividend
   990     0738  0837               	movf	main@i+1,w
   991     0739  1803               	skipnc
   992     073A  3E01               	addlw	1
   993     073B  3EFF               	addlw	255
   994     073C  00F3               	movwf	___awmod@dividend+1
   995     073D  120A  118A  258E  120A  118A  	fcall	___awmod
   996     0742  0870               	movf	?___awmod,w
   997     0743  3E0C               	addlw	12
   998     0744  1283               	bcf	3,5	;RP0=0, select bank0
   999     0745  1303               	bcf	3,6	;RP1=0, select bank0
  1000     0746  00B4               	movwf	_main$677
  1001     0747  0871               	movf	?___awmod+1,w
  1002     0748  1803               	skipnc
  1003     0749  3E01               	addlw	1
  1004     074A  3E00               	addlw	0
  1005     074B  00B5               	movwf	_main$677+1
  1006     074C                     l997:
  1007                           
  1008                           ;main.c: 72:                         i = i - 3;
  1009     074C  300C               	movlw	12
  1010     074D  00F0               	movwf	___awmod@divisor
  1011     074E  3000               	movlw	0
  1012     074F  00F1               	movwf	___awmod@divisor+1
  1013     0750  0835               	movf	_main$677+1,w
  1014     0751  00F3               	movwf	___awmod@dividend+1
  1015     0752  0834               	movf	_main$677,w
  1016     0753  00F2               	movwf	___awmod@dividend
  1017     0754  120A  118A  258E  120A  118A  	fcall	___awmod
  1018     0759  0870               	movf	?___awmod,w
  1019     075A  3E20               	addlw	(low (main@vals| 0))& (0+255)
  1020     075B  0084               	movwf	4
  1021     075C  1383               	bcf	3,7	;select IRP bank0
  1022     075D  0800               	movf	0,w
  1023     075E  1283               	bcf	3,5	;RP0=0, select bank0
  1024     075F  1303               	bcf	3,6	;RP1=0, select bank0
  1025     0760  00B1               	movwf	main@ssd+2
  1026     0761                     l999:
  1027                           
  1028                           ;main.c: 73:                     }
  1029     0761  300C               	movlw	12
  1030     0762  00F0               	movwf	___awmod@divisor
  1031     0763  3000               	movlw	0
  1032     0764  00F1               	movwf	___awmod@divisor+1
  1033     0765  0837               	movf	main@i+1,w
  1034     0766  00F3               	movwf	___awmod@dividend+1
  1035     0767  0836               	movf	main@i,w
  1036     0768  00F2               	movwf	___awmod@dividend
  1037     0769  120A  118A  258E  120A  118A  	fcall	___awmod
  1038     076E  0870               	movf	?___awmod,w
  1039     076F  3E0C               	addlw	12
  1040     0770  1283               	bcf	3,5	;RP0=0, select bank0
  1041     0771  1303               	bcf	3,6	;RP1=0, select bank0
  1042     0772  00B4               	movwf	_main$677
  1043     0773  0871               	movf	?___awmod+1,w
  1044     0774  1803               	skipnc
  1045     0775  3E01               	addlw	1
  1046     0776  3E00               	addlw	0
  1047     0777  00B5               	movwf	_main$677+1
  1048     0778                     l1001:
  1049                           
  1050                           ;main.c: 73:                     }
  1051     0778  300C               	movlw	12
  1052     0779  00F0               	movwf	___awmod@divisor
  1053     077A  3000               	movlw	0
  1054     077B  00F1               	movwf	___awmod@divisor+1
  1055     077C  0835               	movf	_main$677+1,w
  1056     077D  00F3               	movwf	___awmod@dividend+1
  1057     077E  0834               	movf	_main$677,w
  1058     077F  00F2               	movwf	___awmod@dividend
  1059     0780  120A  118A  258E  120A  118A  	fcall	___awmod
  1060     0785  0870               	movf	?___awmod,w
  1061     0786  3E20               	addlw	(low (main@vals| 0))& (0+255)
  1062     0787  0084               	movwf	4
  1063     0788  1383               	bcf	3,7	;select IRP bank0
  1064     0789  0800               	movf	0,w
  1065     078A  1283               	bcf	3,5	;RP0=0, select bank0
  1066     078B  1303               	bcf	3,6	;RP1=0, select bank0
  1067     078C  00B2               	movwf	main@ssd+3
  1068     078D                     l1003:
  1069                           
  1070                           ;main.c: 74:                     hold = 1;
  1071     078D  30FF               	movlw	255
  1072     078E  07B6               	addwf	main@i,f
  1073     078F  1803               	skipnc
  1074     0790  0AB7               	incf	main@i+1,f
  1075     0791  30FF               	movlw	255
  1076     0792  07B7               	addwf	main@i+1,f
  1077                           
  1078                           ;main.c: 75:                     ssd[0] = vals[i];
  1079     0793  2FCE               	goto	l1027
  1080     0794                     l1005:
  1081     0794  303B               	movlw	59
  1082     0795  062E               	xorwf	main@key,w
  1083     0796  1D03               	btfss	3,2
  1084     0797  2F99               	goto	u571
  1085     0798  2F9A               	goto	u570
  1086     0799                     u571:
  1087     0799  2FCE               	goto	l1027
  1088     079A                     u570:
  1089     079A                     l1007:
  1090                           
  1091                           ;main.c: 78:                     ssd[3] = vals[i+3];;main.c: 80:                 else if
      +                          (hold == 1)
  1092     079A  0846               	movf	main@hold,w
  1093     079B  1D03               	btfss	3,2
  1094     079C  2F9E               	goto	u581
  1095     079D  2F9F               	goto	u580
  1096     079E                     u581:
  1097     079E  2FC7               	goto	l1023
  1098     079F                     u580:
  1099     079F                     l1009:
  1100                           
  1101                           ;main.c: 81:                 {;main.c: 82:                     hold = 0;
  1102     079F  0844               	movf	main@right,w
  1103     07A0  1903               	btfsc	3,2
  1104     07A1  2FA3               	goto	u591
  1105     07A2  2FA4               	goto	u590
  1106     07A3                     u591:
  1107     07A3  2FAC               	goto	l1013
  1108     07A4                     u590:
  1109     07A4                     l1011:
  1110                           
  1111                           ;main.c: 83:                 };main.c: 84:             }
  1112     07A4  0836               	movf	main@i,w
  1113     07A5  3EFD               	addlw	253
  1114     07A6  00B6               	movwf	main@i
  1115     07A7  0837               	movf	main@i+1,w
  1116     07A8  1803               	skipnc
  1117     07A9  3E01               	addlw	1
  1118     07AA  3EFF               	addlw	255
  1119     07AB  00B7               	movwf	main@i+1
  1120     07AC                     l1013:
  1121                           
  1122                           ;main.c: 86: 
  1123     07AC  01C6               	clrf	main@hold
  1124     07AD  0AC6               	incf	main@hold,f
  1125     07AE                     l1015:
  1126                           
  1127                           ;main.c: 87:         display_ssd(ssd);
  1128     07AE  0836               	movf	main@i,w
  1129     07AF  3E20               	addlw	(low (main@vals| 0))& (0+255)
  1130     07B0  0084               	movwf	4
  1131     07B1  1383               	bcf	3,7	;select IRP bank0
  1132     07B2  0800               	movf	0,w
  1133     07B3  00AF               	movwf	main@ssd
  1134     07B4                     l1017:
  1135                           
  1136                           ;main.c: 88:     }
  1137     07B4  0836               	movf	main@i,w
  1138     07B5  3E01               	addlw	1
  1139     07B6  3E20               	addlw	(low (main@vals| 0))& (0+255)
  1140     07B7  0084               	movwf	4
  1141     07B8  0800               	movf	0,w
  1142     07B9  00B0               	movwf	main@ssd+1
  1143     07BA                     l1019:
  1144                           
  1145                           ;main.c: 89: 
  1146     07BA  0836               	movf	main@i,w
  1147     07BB  3E02               	addlw	2
  1148     07BC  3E20               	addlw	(low (main@vals| 0))& (0+255)
  1149     07BD  0084               	movwf	4
  1150     07BE  0800               	movf	0,w
  1151     07BF  00B1               	movwf	main@ssd+2
  1152     07C0                     l1021:
  1153                           
  1154                           ;main.c: 90:     return;
  1155     07C0  0836               	movf	main@i,w
  1156     07C1  3E03               	addlw	3
  1157     07C2  3E20               	addlw	(low (main@vals| 0))& (0+255)
  1158     07C3  0084               	movwf	4
  1159     07C4  0800               	movf	0,w
  1160     07C5  00B2               	movwf	main@ssd+3
  1161                           
  1162                           ;main.c: 91: }
  1163     07C6  2FCE               	goto	l1027
  1164     07C7                     l1023:
  1165     07C7  0346               	decf	main@hold,w
  1166     07C8  1D03               	btfss	3,2
  1167     07C9  2FCB               	goto	u601
  1168     07CA  2FCC               	goto	u600
  1169     07CB                     u601:
  1170     07CB  2FCE               	goto	l40
  1171     07CC                     u600:
  1172     07CC                     l1025:
  1173     07CC  01C6               	clrf	main@hold
  1174     07CD  2FCE               	goto	l1027
  1175     07CE                     l40:
  1176     07CE                     l1027:
  1177     07CE  302F               	movlw	(low (main@ssd| 0))& (0+255)
  1178     07CF  120A  118A  2558  120A  118A  	fcall	_display_ssd
  1179     07D4  2E09               	goto	l935
  1180     07D5  120A  118A  2800   	ljmp	start
  1181     07D8                     __end_of_main:
  1182                           
  1183                           	psect	text1
  1184     0534                     __ptext1:	
  1185 ;; *************** function _read_digital_keypad *****************
  1186 ;; Defined at:
  1187 ;;		line 16 in file "digital_keypad.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  mode            1    wreg     unsigned char 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  mode            1    1[COMMON] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      unsigned char 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1201 ;;      Params:         0       0       0       0       0
  1202 ;;      Locals:         1       0       0       0       0
  1203 ;;      Temps:          1       0       0       0       0
  1204 ;;      Totals:         2       0       0       0       0
  1205 ;;Total ram usage:        2 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214     0534                     _read_digital_keypad:	
  1215                           ;psect for function _read_digital_keypad
  1216                           
  1217                           
  1218                           ;incstack = 0
  1219                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
  1220                           ;read_digital_keypad@mode stored from wreg
  1221     0534  00F1               	movwf	read_digital_keypad@mode
  1222     0535                     l841:
  1223                           
  1224                           ;digital_keypad.c: 16: unsigned char read_digital_keypad(unsigned char mode);digital_key
      +                          pad.c: 17: {;digital_keypad.c: 18:     static unsigned char once = 1;;digital_keypad.c: 
      +                          19:     if(mode == 0)
  1225     0535  0871               	movf	read_digital_keypad@mode,w
  1226     0536  1D03               	btfss	3,2
  1227     0537  2D39               	goto	u311
  1228     0538  2D3A               	goto	u310
  1229     0539                     u311:
  1230     0539  2D3F               	goto	l849
  1231     053A                     u310:
  1232     053A                     l843:
  1233                           
  1234                           ;digital_keypad.c: 20:     {;digital_keypad.c: 21:         return PORTB & 0x3F;
  1235     053A  1283               	bcf	3,5	;RP0=0, select bank0
  1236     053B  1303               	bcf	3,6	;RP1=0, select bank0
  1237     053C  0806               	movf	6,w	;volatile
  1238     053D  393F               	andlw	63
  1239     053E  2D57               	goto	l61
  1240     053F                     l849:
  1241     053F  0371               	decf	read_digital_keypad@mode,w
  1242     0540  1D03               	btfss	3,2
  1243     0541  2D43               	goto	u321
  1244     0542  2D44               	goto	u320
  1245     0543                     u321:
  1246     0543  2D56               	goto	l865
  1247     0544                     u320:
  1248     0544                     l851:
  1249                           
  1250                           ;digital_keypad.c: 24:     {;digital_keypad.c: 25:         if(((PORTB & 0x3F) != 0x3F) &
      +                          & once)
  1251     0544  303F               	movlw	63
  1252     0545  1283               	bcf	3,5	;RP0=0, select bank0
  1253     0546  1303               	bcf	3,6	;RP1=0, select bank0
  1254     0547  0506               	andwf	6,w	;volatile
  1255     0548  00F0               	movwf	??_read_digital_keypad
  1256     0549  303F               	movlw	63
  1257     054A  0670               	xorwf	??_read_digital_keypad,w
  1258     054B  1903               	btfsc	3,2
  1259     054C  2D4E               	goto	u331
  1260     054D  2D4F               	goto	u330
  1261     054E                     u331:
  1262     054E  2D56               	goto	l63
  1263     054F                     u330:
  1264     054F                     l853:
  1265     054F  087C               	movf	read_digital_keypad@once,w
  1266     0550  1903               	btfsc	3,2
  1267     0551  2D53               	goto	u341
  1268     0552  2D54               	goto	u340
  1269     0553                     u341:
  1270     0553  2D56               	goto	l63
  1271     0554                     u340:
  1272     0554                     l855:
  1273                           
  1274                           ;digital_keypad.c: 26:         {;digital_keypad.c: 27:             once = 0;
  1275     0554  01FC               	clrf	read_digital_keypad@once
  1276     0555  2D3A               	goto	l843
  1277     0556                     l63:	
  1278                           ;digital_keypad.c: 34:     }
  1279                           
  1280     0556                     l865:
  1281                           
  1282                           ;digital_keypad.c: 35:     return 0x3F;
  1283     0556  303F               	movlw	63
  1284     0557                     l61:
  1285     0557  0008               	return
  1286     0558                     __end_of_read_digital_keypad:
  1287                           
  1288                           	psect	text2
  1289     04F8                     __ptext2:	
  1290 ;; *************** function _init_config *****************
  1291 ;; Defined at:
  1292 ;;		line 13 in file "main.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1306 ;;      Params:         0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0
  1309 ;;      Totals:         0       0       0       0       0
  1310 ;;Total ram usage:        0 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; Hardware stack levels required when called: 1
  1313 ;; This function calls:
  1314 ;;		_init_digital_keypad
  1315 ;;		_init_ssd
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321     04F8                     _init_config:	
  1322                           ;psect for function _init_config
  1323                           
  1324     04F8                     l837:	
  1325                           ;incstack = 0
  1326                           ; Regs used in _init_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1327                           
  1328                           
  1329                           ;main.c: 15: 
  1330     04F8  120A  118A  250F  120A  118A  	fcall	_init_ssd
  1331     04FD                     l839:
  1332                           
  1333                           ;main.c: 18:         key = read_digital_keypad(0);
  1334     04FD  120A  118A  24ED  120A  118A  	fcall	_init_digital_keypad
  1335     0502                     l15:
  1336     0502  0008               	return
  1337     0503                     __end_of_init_config:
  1338                           
  1339                           	psect	text3
  1340     050F                     __ptext3:	
  1341 ;; *************** function _init_ssd *****************
  1342 ;; Defined at:
  1343 ;;		line 12 in file "ssd.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0, btemp+1
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1357 ;;      Params:         0       0       0       0       0
  1358 ;;      Locals:         0       0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0
  1360 ;;      Totals:         0       0       0       0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_init_config
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370     050F                     _init_ssd:	
  1371                           ;psect for function _init_ssd
  1372                           
  1373     050F                     l829:	
  1374                           ;incstack = 0
  1375                           ; Regs used in _init_ssd: [wreg+status,2+status,0+btemp+1]
  1376                           
  1377                           
  1378                           ;ssd.c: 13:     TRISD = 0x00;
  1379     050F  1683               	bsf	3,5	;RP0=1, select bank1
  1380     0510  1303               	bcf	3,6	;RP1=0, select bank1
  1381     0511  0188               	clrf	8	;volatile
  1382                           
  1383                           ;ssd.c: 14:     PORTD = 0x00;
  1384     0512  1283               	bcf	3,5	;RP0=0, select bank0
  1385     0513  1303               	bcf	3,6	;RP1=0, select bank0
  1386     0514  0188               	clrf	8	;volatile
  1387     0515                     l831:
  1388                           
  1389                           ;ssd.c: 16:     TRISA = TRISA & 0x03;
  1390     0515  1683               	bsf	3,5	;RP0=1, select bank1
  1391     0516  1303               	bcf	3,6	;RP1=0, select bank1
  1392     0517  0805               	movf	5,w	;volatile
  1393     0518  3903               	andlw	3
  1394     0519  0085               	movwf	5	;volatile
  1395     051A                     l833:
  1396                           
  1397                           ;ssd.c: 17:     PORTA &= 0x03;
  1398     051A  3003               	movlw	3
  1399     051B  00FF               	movwf	btemp+1
  1400     051C  087F               	movf	btemp+1,w
  1401     051D  1283               	bcf	3,5	;RP0=0, select bank0
  1402     051E  1303               	bcf	3,6	;RP1=0, select bank0
  1403     051F  0585               	andwf	5,f	;volatile
  1404     0520                     l77:
  1405     0520  0008               	return
  1406     0521                     __end_of_init_ssd:
  1407                           
  1408                           	psect	text4
  1409     04ED                     __ptext4:	
  1410 ;; *************** function _init_digital_keypad *****************
  1411 ;; Defined at:
  1412 ;;		line 10 in file "digital_keypad.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1426 ;;      Params:         0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_init_config
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439     04ED                     _init_digital_keypad:	
  1440                           ;psect for function _init_digital_keypad
  1441                           
  1442     04ED                     l835:	
  1443                           ;incstack = 0
  1444                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1445                           
  1446                           
  1447                           ;digital_keypad.c: 12:     TRISB = TRISB | 0x3F;
  1448     04ED  1683               	bsf	3,5	;RP0=1, select bank1
  1449     04EE  1303               	bcf	3,6	;RP1=0, select bank1
  1450     04EF  0806               	movf	6,w	;volatile
  1451     04F0  383F               	iorlw	63
  1452     04F1  0086               	movwf	6	;volatile
  1453                           
  1454                           ;digital_keypad.c: 13:     PORTB = PORTB | 0x3F;
  1455     04F2  1283               	bcf	3,5	;RP0=0, select bank0
  1456     04F3  1303               	bcf	3,6	;RP1=0, select bank0
  1457     04F4  0806               	movf	6,w	;volatile
  1458     04F5  383F               	iorlw	63
  1459     04F6  0086               	movwf	6	;volatile
  1460     04F7                     l55:
  1461     04F7  0008               	return
  1462     04F8                     __end_of_init_digital_keypad:
  1463                           
  1464                           	psect	text5
  1465     0558                     __ptext5:	
  1466 ;; *************** function _display_ssd *****************
  1467 ;; Defined at:
  1468 ;;		line 20 in file "ssd.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  data            1    wreg     PTR unsigned char 
  1471 ;;		 -> main@ssd(4), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  data            1    3[COMMON] PTR unsigned char 
  1474 ;;		 -> main@ssd(4), 
  1475 ;;  i               2    1[COMMON] int 
  1476 ;;  digit           1    4[COMMON] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         4       0       0       0       0
  1488 ;;      Temps:          1       0       0       0       0
  1489 ;;      Totals:         5       0       0       0       0
  1490 ;;Total ram usage:        5 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499     0558                     _display_ssd:	
  1500                           ;psect for function _display_ssd
  1501                           
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _display_ssd: [wreg-fsr0h+status,2+status,0+btemp+1]
  1505                           ;display_ssd@data stored from wreg
  1506     0558  00F3               	movwf	display_ssd@data
  1507     0559                     l869:
  1508                           
  1509                           ;ssd.c: 20: void display_ssd(unsigned char data[]);ssd.c: 21: {;ssd.c: 22:     unsigned 
      +                          char digit;;ssd.c: 24:     for(digit = 0; digit< 4; digit++)
  1510     0559  01F4               	clrf	display_ssd@digit
  1511     055A                     l875:
  1512                           
  1513                           ;ssd.c: 25:     {;ssd.c: 26:         PORTD = data[digit];
  1514     055A  0874               	movf	display_ssd@digit,w
  1515     055B  0773               	addwf	display_ssd@data,w
  1516     055C  00F0               	movwf	??_display_ssd
  1517     055D  0870               	movf	??_display_ssd,w
  1518     055E  0084               	movwf	4
  1519     055F  1383               	bcf	3,7	;select IRP bank0
  1520     0560  0800               	movf	0,w
  1521     0561  1283               	bcf	3,5	;RP0=0, select bank0
  1522     0562  1303               	bcf	3,6	;RP1=0, select bank0
  1523     0563  0088               	movwf	8	;volatile
  1524     0564                     l877:
  1525                           
  1526                           ;ssd.c: 27:         PORTA = (PORTA & 0x03) | (0x04 << digit);
  1527     0564  3004               	movlw	4
  1528     0565  00F0               	movwf	??_display_ssd
  1529     0566  0A74               	incf	display_ssd@digit,w
  1530     0567  2D6A               	goto	u354
  1531     0568                     u355:
  1532     0568  1003               	clrc
  1533     0569  0DF0               	rlf	??_display_ssd,f
  1534     056A                     u354:
  1535     056A  3EFF               	addlw	-1
  1536     056B  1D03               	skipz
  1537     056C  2D68               	goto	u355
  1538     056D  0805               	movf	5,w	;volatile
  1539     056E  3903               	andlw	3
  1540     056F  0470               	iorwf	??_display_ssd,w
  1541     0570  0085               	movwf	5	;volatile
  1542     0571                     l879:
  1543                           
  1544                           ;ssd.c: 29:         for(int i = 400; i--;);
  1545     0571  3090               	movlw	144
  1546     0572  00F1               	movwf	display_ssd@i
  1547     0573  3001               	movlw	1
  1548     0574  00F2               	movwf	display_ssd@i+1
  1549     0575                     l881:
  1550     0575  30FF               	movlw	255
  1551     0576  07F1               	addwf	display_ssd@i,f
  1552     0577  1803               	skipnc
  1553     0578  0AF2               	incf	display_ssd@i+1,f
  1554     0579  30FF               	movlw	255
  1555     057A  07F2               	addwf	display_ssd@i+1,f
  1556     057B  0A71               	incf	display_ssd@i,w
  1557     057C  1D03               	skipz
  1558     057D  2D82               	goto	u361
  1559     057E  0A72               	incf	display_ssd@i+1,w
  1560     057F  1D03               	btfss	3,2
  1561     0580  2D82               	goto	u361
  1562     0581  2D83               	goto	u360
  1563     0582                     u361:
  1564     0582  2D75               	goto	l881
  1565     0583                     u360:
  1566     0583                     l883:
  1567                           
  1568                           ;ssd.c: 30:     }
  1569     0583  3001               	movlw	1
  1570     0584  00FF               	movwf	btemp+1
  1571     0585  087F               	movf	btemp+1,w
  1572     0586  07F4               	addwf	display_ssd@digit,f
  1573     0587                     l885:
  1574     0587  3004               	movlw	4
  1575     0588  0274               	subwf	display_ssd@digit,w
  1576     0589  1C03               	skipc
  1577     058A  2D8C               	goto	u371
  1578     058B  2D8D               	goto	u370
  1579     058C                     u371:
  1580     058C  2D5A               	goto	l875
  1581     058D                     u370:
  1582     058D                     l85:
  1583     058D  0008               	return
  1584     058E                     __end_of_display_ssd:
  1585                           
  1586                           	psect	text6
  1587     058E                     __ptext6:	
  1588 ;; *************** function ___awmod *****************
  1589 ;; Defined at:
  1590 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  divisor         2    0[COMMON] int 
  1593 ;;  dividend        2    2[COMMON] int 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  sign            1    5[COMMON] unsigned char 
  1596 ;;  counter         1    4[COMMON] unsigned char 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  2    0[COMMON] int 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0, btemp+1
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         4       0       0       0       0
  1607 ;;      Locals:         2       0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0
  1609 ;;      Totals:         6       0       0       0       0
  1610 ;;Total ram usage:        6 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619     058E                     ___awmod:	
  1620                           ;psect for function ___awmod
  1621                           
  1622     058E                     l887:	
  1623                           ;incstack = 0
  1624                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1625                           
  1626     058E  01F5               	clrf	___awmod@sign
  1627     058F                     l889:
  1628     058F  1FF3               	btfss	___awmod@dividend+1,7
  1629     0590  2D92               	goto	u381
  1630     0591  2D93               	goto	u380
  1631     0592                     u381:
  1632     0592  2D9A               	goto	l895
  1633     0593                     u380:
  1634     0593                     l891:
  1635     0593  09F2               	comf	___awmod@dividend,f
  1636     0594  09F3               	comf	___awmod@dividend+1,f
  1637     0595  0AF2               	incf	___awmod@dividend,f
  1638     0596  1903               	skipnz
  1639     0597  0AF3               	incf	___awmod@dividend+1,f
  1640     0598                     l893:
  1641     0598  01F5               	clrf	___awmod@sign
  1642     0599  0AF5               	incf	___awmod@sign,f
  1643     059A                     l895:
  1644     059A  1FF1               	btfss	___awmod@divisor+1,7
  1645     059B  2D9D               	goto	u391
  1646     059C  2D9E               	goto	u390
  1647     059D                     u391:
  1648     059D  2DA3               	goto	l899
  1649     059E                     u390:
  1650     059E                     l897:
  1651     059E  09F0               	comf	___awmod@divisor,f
  1652     059F  09F1               	comf	___awmod@divisor+1,f
  1653     05A0  0AF0               	incf	___awmod@divisor,f
  1654     05A1  1903               	skipnz
  1655     05A2  0AF1               	incf	___awmod@divisor+1,f
  1656     05A3                     l899:
  1657     05A3  0870               	movf	___awmod@divisor,w
  1658     05A4  0471               	iorwf	___awmod@divisor+1,w
  1659     05A5  1903               	btfsc	3,2
  1660     05A6  2DA8               	goto	u401
  1661     05A7  2DA9               	goto	u400
  1662     05A8                     u401:
  1663     05A8  2DD8               	goto	l917
  1664     05A9                     u400:
  1665     05A9                     l901:
  1666     05A9  01F4               	clrf	___awmod@counter
  1667     05AA  0AF4               	incf	___awmod@counter,f
  1668     05AB  2DB7               	goto	l907
  1669     05AC                     l903:
  1670     05AC  3001               	movlw	1
  1671     05AD                     u415:
  1672     05AD  1003               	clrc
  1673     05AE  0DF0               	rlf	___awmod@divisor,f
  1674     05AF  0DF1               	rlf	___awmod@divisor+1,f
  1675     05B0  3EFF               	addlw	-1
  1676     05B1  1D03               	skipz
  1677     05B2  2DAD               	goto	u415
  1678     05B3                     l905:
  1679     05B3  3001               	movlw	1
  1680     05B4  00FF               	movwf	btemp+1
  1681     05B5  087F               	movf	btemp+1,w
  1682     05B6  07F4               	addwf	___awmod@counter,f
  1683     05B7                     l907:
  1684     05B7  1FF1               	btfss	___awmod@divisor+1,7
  1685     05B8  2DBA               	goto	u421
  1686     05B9  2DBB               	goto	u420
  1687     05BA                     u421:
  1688     05BA  2DAC               	goto	l903
  1689     05BB                     u420:
  1690     05BB                     l909:
  1691     05BB  0871               	movf	___awmod@divisor+1,w
  1692     05BC  0273               	subwf	___awmod@dividend+1,w
  1693     05BD  1D03               	skipz
  1694     05BE  2DC1               	goto	u435
  1695     05BF  0870               	movf	___awmod@divisor,w
  1696     05C0  0272               	subwf	___awmod@dividend,w
  1697     05C1                     u435:
  1698     05C1  1C03               	skipc
  1699     05C2  2DC4               	goto	u431
  1700     05C3  2DC5               	goto	u430
  1701     05C4                     u431:
  1702     05C4  2DCB               	goto	l913
  1703     05C5                     u430:
  1704     05C5                     l911:
  1705     05C5  0870               	movf	___awmod@divisor,w
  1706     05C6  02F2               	subwf	___awmod@dividend,f
  1707     05C7  0871               	movf	___awmod@divisor+1,w
  1708     05C8  1C03               	skipc
  1709     05C9  03F3               	decf	___awmod@dividend+1,f
  1710     05CA  02F3               	subwf	___awmod@dividend+1,f
  1711     05CB                     l913:
  1712     05CB  3001               	movlw	1
  1713     05CC                     u445:
  1714     05CC  1003               	clrc
  1715     05CD  0CF1               	rrf	___awmod@divisor+1,f
  1716     05CE  0CF0               	rrf	___awmod@divisor,f
  1717     05CF  3EFF               	addlw	-1
  1718     05D0  1D03               	skipz
  1719     05D1  2DCC               	goto	u445
  1720     05D2                     l915:
  1721     05D2  3001               	movlw	1
  1722     05D3  02F4               	subwf	___awmod@counter,f
  1723     05D4  1D03               	btfss	3,2
  1724     05D5  2DD7               	goto	u451
  1725     05D6  2DD8               	goto	u450
  1726     05D7                     u451:
  1727     05D7  2DBB               	goto	l909
  1728     05D8                     u450:
  1729     05D8                     l917:
  1730     05D8  0875               	movf	___awmod@sign,w
  1731     05D9  1903               	btfsc	3,2
  1732     05DA  2DDC               	goto	u461
  1733     05DB  2DDD               	goto	u460
  1734     05DC                     u461:
  1735     05DC  2DE2               	goto	l921
  1736     05DD                     u460:
  1737     05DD                     l919:
  1738     05DD  09F2               	comf	___awmod@dividend,f
  1739     05DE  09F3               	comf	___awmod@dividend+1,f
  1740     05DF  0AF2               	incf	___awmod@dividend,f
  1741     05E0  1903               	skipnz
  1742     05E1  0AF3               	incf	___awmod@dividend+1,f
  1743     05E2                     l921:
  1744     05E2  0873               	movf	___awmod@dividend+1,w
  1745     05E3  00F1               	movwf	?___awmod+1
  1746     05E4  0872               	movf	___awmod@dividend,w
  1747     05E5  00F0               	movwf	?___awmod
  1748     05E6                     l337:
  1749     05E6  0008               	return
  1750     05E7                     __end_of___awmod:
  1751     007E                     btemp	set	126	;btemp
  1752     007E                     wtemp0	set	126
  1753                           
  1754                           	psect	config
  1755                           
  1756                           ;Config register CONFIG @ 0x2007
  1757                           ;	Oscillator Selection bits
  1758                           ;	FOSC = 0x3, unprogrammed default
  1759                           ;	Watchdog Timer Enable bit
  1760                           ;	WDTE = OFF, WDT disabled
  1761                           ;	Power-up Timer Enable bit
  1762                           ;	PWRTE = 0x1, unprogrammed default
  1763                           ;	Brown-out Reset Enable bit
  1764                           ;	BOREN = 0x1, unprogrammed default
  1765                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1766                           ;	LVP = 0x1, unprogrammed default
  1767                           ;	Data EEPROM Memory Code Protection bit
  1768                           ;	CPD = 0x1, unprogrammed default
  1769                           ;	Flash Program Memory Write Enable bits
  1770                           ;	WRT = 0x3, unprogrammed default
  1771                           ;	In-Circuit Debugger Mode bit
  1772                           ;	DEBUG = 0x1, unprogrammed default
  1773                           ;	Flash Program Memory Code Protection bit
  1774                           ;	CP = 0x1, unprogrammed default
  1775     2007                     	org	8199
  1776     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80     24      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display_ssd@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    3438
                                              6 COMMON     4     4      0
                                              0 BANK0     24    24      0
                            ___awmod
                        _display_ssd
                        _init_config
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                _init_digital_keypad
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_ssd                                          5     5      0     168
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    2120
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   _display_ssd
   _init_config
     _init_digital_keypad
     _init_ssd
   _read_digital_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      28       5       50.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Oct 26 21:36:23 2023

                          pc 0002                           l15 0502                           l40 07CE  
                         l61 0557                           l55 04F7                           l63 0556  
                         l85 058D                           l77 0520                 ?_display_ssd 0070  
                         fsr 0004                          l337 05E6                          l901 05A9  
                        l911 05C5                          l903 05AC                          l831 0515  
                        l921 05E2                          l913 05CB                          l905 05B3  
                        l833 051A                          l841 0535                          l915 05D2  
                        l907 05B7                          l835 04ED                          l851 0544  
                        l843 053A                          l931 05F2                          l909 05BB  
                        l917 05D8                          l829 050F                          l837 04F8  
                        l853 054F                          l941 061A                          l933 05F4  
                        l925 05E7                          l919 05DD                          l839 04FD  
                        l855 0554                          l951 063A                          l943 0627  
                        l935 0609                          l927 05EC                          l881 0575  
                        l865 0556                          l849 053F                          l961 064B  
                        l953 063C                          l945 0629                          l937 0612  
                        l929 05F0                          l891 0593                          l883 0583  
                        l875 055A                          l971 06B1                          l963 0660  
                        l955 063D                          l947 062F                          l939 0618  
                        l893 0598                          l885 0587                          l877 0564  
                        l869 0559                          l981 06C2                          l965 0679  
                        l957 0642                          l973 06B4                          l949 0635  
                        l895 059A                          l887 058E                          l879 0571  
                        l991 0701                          l983 06C7                          l975 06BA  
                        l967 0692                          l959 064A                          l897 059E  
                        l889 058F                          l993 071C                          l985 06CF  
                        l977 06BF                          l969 06AB                          l899 05A3  
                        l995 0731                          l987 06D1                          l979 06C1  
                        l997 074C                          l989 06EC                          l999 0761  
                        u310 053A                          u311 0539                          u400 05A9  
                        u320 0544                          u401 05A8                          u321 0543  
                        u330 054F                          u331 054E                          u420 05BB  
                        u340 0554                          u500 062F                          u421 05BA  
                        u341 0553                          u501 062E                          u430 05C5  
                        u510 0635                          u431 05C4                          u415 05AD  
                        u511 0634                          u360 0583                          u600 07CC  
                        u520 063A                          u361 0582                          u601 07CB  
                        u521 0639                          u450 05D8                          u370 058D  
                        u354 056A                          u530 0642                          u451 05D7  
                        u435 05C1                          u371 058C                          u355 0568  
                        u531 0641                          u460 05DD                          u380 0593  
                        u540 06BA                          u461 05DC                          u445 05CC  
                        u381 0592                          u541 06B9                          u390 059E  
                        u550 06BF                          u470 05FC                          u391 059D  
                        u551 06BE                          u560 06C7                          u480 0618  
                        u561 06C6                          u481 0617                          u570 079A  
                        u490 0627                          u571 0799                          u491 0626  
                        u580 079F                          u581 079E                          u590 07A4  
                        u591 07A3                          _num 007A                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0075                         l1001 0778  
                       l1011 07A4                         l1003 078D                         l1021 07C0  
                       l1013 07AC                         l1005 0794                         l1015 07AE  
                       l1023 07C7                         l1007 079A                         l1025 07CC  
                       l1017 07B4                         l1009 079F                         l1019 07BA  
                       l1027 07CE        ??_read_digital_keypad 0070                         _main 05E7  
                       btemp 007E                         start 0000                        ?_main 0070  
            __end_of___awmod 05E7                 ?_init_config 0070                        _PORTA 0005  
                      _PORTB 0006                        _PORTD 0008                        _TRISA 0085  
                      _TRISB 0086                        _TRISD 0088                        main@i 0036  
                      pclath 000A                 display_ssd@i 0071                        status 0003  
                      wtemp0 007E              __initialization 07D8                 __end_of_main 07D8  
                     ??_main 0076  __end_of_init_digital_keypad 04F8                    ??___awmod 0074  
           __end_of_init_ssd 0521              ___awmod@divisor 0070              ___awmod@counter 0074  
               __pdataCOMMON 007A      __end_of__initialization 07FC               __pcstackCOMMON 0070  
               __pidataBANK0 0503                   __pbssBANK0 0044                   __pmaintext 05E7  
__end_of_read_digital_keypad 0558                    ?_init_ssd 0070                      ___awmod 058E  
                    __ptext1 0534                      __ptext2 04F8                      __ptext3 050F  
                    __ptext4 04ED                      __ptext5 0558                      __ptext6 058E  
           ___awmod@dividend 0072                      main@key 002E                      main@ssd 002F  
       end_of_initialization 07FC                   ??_init_ssd 0070                   main@prekey 0033  
              ??_display_ssd 0070                __pidataCOMMON 04EA          start_initialization 07D8  
                 init_fetch0 0521                  __pdataBANK0 0038                ??_init_config 0070  
        __end_of_display_ssd 058E                    ___latbits 0002                __pcstackBANK0 0020  
                   ?___awmod 0070          __end_of_init_config 0503                    main@F1191 0038  
                _display_ssd 0558                    main@right 0044          _init_digital_keypad 04ED  
       ?_init_digital_keypad 0070                  _init_config 04F8                     _main$677 0034  
                   _init_ssd 050F      read_digital_keypad@mode 0071      read_digital_keypad@once 007C  
      ??_init_digital_keypad 0070                     main@left 0045                     main@hold 0046  
                   main@once 0047                     main@vals 0020                     main@wait 002C  
           display_ssd@digit 0074                     init_ram0 0525          _read_digital_keypad 0534  
            display_ssd@data 0073         ?_read_digital_keypad 0070  
