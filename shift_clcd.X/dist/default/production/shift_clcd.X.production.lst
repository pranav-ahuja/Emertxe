

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Oct 26 14:50:31 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 22/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178     0000                     	;# 
   179     0001                     	;# 
   180     0002                     	;# 
   181     0003                     	;# 
   182     0004                     	;# 
   183     0005                     	;# 
   184     0006                     	;# 
   185     0007                     	;# 
   186     0008                     	;# 
   187     0009                     	;# 
   188     000A                     	;# 
   189     000B                     	;# 
   190     000C                     	;# 
   191     000D                     	;# 
   192     000E                     	;# 
   193     000E                     	;# 
   194     000F                     	;# 
   195     0010                     	;# 
   196     0011                     	;# 
   197     0012                     	;# 
   198     0013                     	;# 
   199     0014                     	;# 
   200     0015                     	;# 
   201     0015                     	;# 
   202     0016                     	;# 
   203     0017                     	;# 
   204     0018                     	;# 
   205     0019                     	;# 
   206     001A                     	;# 
   207     001B                     	;# 
   208     001B                     	;# 
   209     001C                     	;# 
   210     001D                     	;# 
   211     001E                     	;# 
   212     001F                     	;# 
   213     0081                     	;# 
   214     0085                     	;# 
   215     0086                     	;# 
   216     0087                     	;# 
   217     0088                     	;# 
   218     0089                     	;# 
   219     008C                     	;# 
   220     008D                     	;# 
   221     008E                     	;# 
   222     0091                     	;# 
   223     0092                     	;# 
   224     0093                     	;# 
   225     0094                     	;# 
   226     0098                     	;# 
   227     0099                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     010C                     	;# 
   233     010D                     	;# 
   234     010E                     	;# 
   235     010F                     	;# 
   236     018C                     	;# 
   237     018D                     	;# 
   238     0000                     	;# 
   239     0001                     	;# 
   240     0002                     	;# 
   241     0003                     	;# 
   242     0004                     	;# 
   243     0005                     	;# 
   244     0006                     	;# 
   245     0007                     	;# 
   246     0008                     	;# 
   247     0009                     	;# 
   248     000A                     	;# 
   249     000B                     	;# 
   250     000C                     	;# 
   251     000D                     	;# 
   252     000E                     	;# 
   253     000E                     	;# 
   254     000F                     	;# 
   255     0010                     	;# 
   256     0011                     	;# 
   257     0012                     	;# 
   258     0013                     	;# 
   259     0014                     	;# 
   260     0015                     	;# 
   261     0015                     	;# 
   262     0016                     	;# 
   263     0017                     	;# 
   264     0018                     	;# 
   265     0019                     	;# 
   266     001A                     	;# 
   267     001B                     	;# 
   268     001B                     	;# 
   269     001C                     	;# 
   270     001D                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     0081                     	;# 
   274     0085                     	;# 
   275     0086                     	;# 
   276     0087                     	;# 
   277     0088                     	;# 
   278     0089                     	;# 
   279     008C                     	;# 
   280     008D                     	;# 
   281     008E                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0094                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     010C                     	;# 
   293     010D                     	;# 
   294     010E                     	;# 
   295     010F                     	;# 
   296     018C                     	;# 
   297     018D                     	;# 
   298                           
   299                           	psect	idataCOMMON
   300     0609                     __pidataCOMMON:
   301                           
   302                           ;initializer for read_digital_keypad@once
   303     0609  3401               	retlw	1
   304                           
   305                           	psect	idataBANK0
   306     0626                     __pidataBANK0:
   307                           
   308                           ;initializer for main@F1189
   309     0626  3443               	retlw	67
   310     0627  344C               	retlw	76
   311     0628  3443               	retlw	67
   312     0629  3444               	retlw	68
   313     062A  345F               	retlw	95
   314     062B  3444               	retlw	68
   315     062C  3465               	retlw	101
   316     062D  346D               	retlw	109
   317     062E  346F               	retlw	111
   318     062F  345F               	retlw	95
   319     0630  3443               	retlw	67
   320     0631  346F               	retlw	111
   321     0632  3464               	retlw	100
   322     0633  3465               	retlw	101
   323     0634  345F               	retlw	95
   324     0635  3424               	retlw	36
   325     0636  3400               	retlw	0
   326     0008                     _PORTD	set	8
   327     0006                     _PORTB	set	6
   328     0049                     _RE1	set	73
   329     004A                     _RE2	set	74
   330     0088                     _TRISD	set	136
   331     0086                     _TRISB	set	134
   332     0449                     _TRISE1	set	1097
   333     044A                     _TRISE2	set	1098
   334                           
   335                           	psect	strings
   336     0003                     __pstrings:
   337     0003                     stringtab:
   338     0003                     __stringtab:
   339                           
   340                           ;	String table - string pointers are 1 byte each
   341     0003  1BFF               	btfsc	btemp+1,7
   342     0004  280D               	ljmp	stringcode
   343     0005  1383               	bcf	3,7
   344     0006  187F               	btfsc	btemp+1,0
   345     0007  1783               	bsf	3,7
   346     0008  0800               	movf	0,w
   347     0009  0A84               	incf	4,f
   348     000A  1903               	skipnz
   349     000B  0AFF               	incf	btemp+1,f
   350     000C  0008               	return
   351     000D                     stringcode:
   352     000D                     stringdir:
   353     000D  3000               	movlw	high stringdir
   354     000E  008A               	movwf	10
   355     000F  0804               	movf	4,w
   356     0010  0A84               	incf	4,f
   357     0011  0782               	addwf	2,f
   358     0012                     __stringbase:
   359     0012  3400               	retlw	0
   360     0013                     __end_of__stringtab:
   361     0013                     STR_2:
   362     0013  3453               	retlw	83	;'S'
   363     0014  3430               	retlw	48	;'0'
   364     0015  342D               	retlw	45	;'-'
   365     0016  344C               	retlw	76	;'L'
   366     0017  3465               	retlw	101	;'e'
   367     0018  3466               	retlw	102	;'f'
   368     0019  3474               	retlw	116	;'t'
   369     001A  3420               	retlw	32	;' '
   370     001B  3453               	retlw	83	;'S'
   371     001C  3431               	retlw	49	;'1'
   372     001D  342D               	retlw	45	;'-'
   373     001E  3452               	retlw	82	;'R'
   374     001F  3469               	retlw	105	;'i'
   375     0020  3467               	retlw	103	;'g'
   376     0021  3468               	retlw	104	;'h'
   377     0022  3474               	retlw	116	;'t'
   378     0023  3400               	retlw	0
   379     0024                     STR_1:
   380     0024  3453               	retlw	83	;'S'
   381     0025  3465               	retlw	101	;'e'
   382     0026  346C               	retlw	108	;'l'
   383     0027  3465               	retlw	101	;'e'
   384     0028  3463               	retlw	99	;'c'
   385     0029  3474               	retlw	116	;'t'
   386     002A  3420               	retlw	32	;' '
   387     002B  3444               	retlw	68	;'D'
   388     002C  344B               	retlw	75	;'K'
   389     002D  3450               	retlw	80	;'P'
   390     002E  3420               	retlw	32	;' '
   391     002F  3453               	retlw	83	;'S'
   392     0030  3457               	retlw	87	;'W'
   393     0031  3400               	retlw	0
   394     0032                     STR_4:
   395     0032  3452               	retlw	82	;'R'
   396     0033  3469               	retlw	105	;'i'
   397     0034  3467               	retlw	103	;'g'
   398     0035  3468               	retlw	104	;'h'
   399     0036  3474               	retlw	116	;'t'
   400     0037  3420               	retlw	32	;' '
   401     0038  3453               	retlw	83	;'S'
   402     0039  3463               	retlw	99	;'c'
   403     003A  3472               	retlw	114	;'r'
   404     003B  346F               	retlw	111	;'o'
   405     003C  346C               	retlw	108	;'l'
   406     003D  346C               	retlw	108	;'l'
   407     003E  3400               	retlw	0
   408     003F                     STR_3:
   409     003F  344C               	retlw	76	;'L'
   410     0040  3465               	retlw	101	;'e'
   411     0041  3466               	retlw	102	;'f'
   412     0042  3474               	retlw	116	;'t'
   413     0043  3420               	retlw	32	;' '
   414     0044  3453               	retlw	83	;'S'
   415     0045  3463               	retlw	99	;'c'
   416     0046  3472               	retlw	114	;'r'
   417     0047  346F               	retlw	111	;'o'
   418     0048  346C               	retlw	108	;'l'
   419     0049  346C               	retlw	108	;'l'
   420     004A  3400               	retlw	0
   421                           
   422                           	psect	cinit
   423     07E8                     start_initialization:	
   424                           ; #config settings
   425                           
   426     07E8                     __initialization:
   427                           
   428                           ; Initialize objects allocated to BANK0
   429     07E8  1383               	bcf	3,7	;select IRP bank0
   430     07E9  3049               	movlw	low (__pdataBANK0+17)
   431     07EA  00FD               	movwf	btemp+-1
   432     07EB  3006               	movlw	high __pidataBANK0
   433     07EC  00FE               	movwf	btemp
   434     07ED  3026               	movlw	low __pidataBANK0
   435     07EE  00FF               	movwf	btemp+1
   436     07EF  3038               	movlw	low __pdataBANK0
   437     07F0  0084               	movwf	4
   438     07F1  120A  118A  263B  120A  118A  	fcall	init_ram0
   439                           
   440                           ; Initialize objects allocated to COMMON
   441     07F6  120A  118A  2609  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   442     07FB  00FB               	movwf	__pdataCOMMON& (0+127)
   443     07FC                     end_of_initialization:	
   444                           ;End of C runtime variable initialization code
   445                           
   446     07FC                     __end_of__initialization:
   447     07FC  0183               	clrf	3
   448     07FD  120A  118A  2F1D   	ljmp	_main	;jump to C main() function
   449                           
   450                           	psect	dataCOMMON
   451     007B                     __pdataCOMMON:
   452     007B                     read_digital_keypad@once:
   453     007B                     	ds	1
   454                           
   455                           	psect	dataBANK0
   456     0038                     __pdataBANK0:
   457     0038                     main@F1189:
   458     0038                     	ds	17
   459                           
   460                           	psect	inittext
   461     0637                     init_fetch0:	
   462                           ;	Called with low address in FSR and high address in W
   463                           
   464     0637  087E               	movf	btemp,w
   465     0638  008A               	movwf	10
   466     0639  087F               	movf	btemp+1,w
   467     063A  0082               	movwf	2
   468     063B                     init_ram0:	
   469                           ;Called with:
   470                           ;	high address of idata address in btemp 
   471                           ;	low address of idata address in btemp+1 
   472                           ;	low address of data in FSR
   473                           ;	high address + 1 of data in btemp-1
   474                           
   475     063B  120A  118A  2637  120A  118A  	fcall	init_fetch0
   476     0640  0080               	movwf	0
   477     0641  0A84               	incf	4,f
   478     0642  0804               	movf	4,w
   479     0643  067D               	xorwf	btemp+-1,w
   480     0644  1903               	btfsc	3,2
   481     0645  3400               	retlw	0
   482     0646  0AFF               	incf	btemp+1,f
   483     0647  1903               	btfsc	3,2
   484     0648  0AFE               	incf	btemp,f
   485     0649  2E3B               	goto	init_ram0
   486                           
   487                           	psect	cstackCOMMON
   488     0070                     __pcstackCOMMON:
   489     0070                     ?_init_display:
   490     0070                     ?_init_digital_keypad:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ??_init_digital_keypad:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ?_read_digital_keypad:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ??_read_digital_keypad:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_init_display_controller:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_clcd_write:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ?_init_config:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ?_main:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     clcd_write@byte:	
   515                           ; 1 bytes @ 0x0
   516                           
   517                           
   518                           ; 1 bytes @ 0x0
   519     0070                     	ds	1
   520     0071                     ??_clcd_write:
   521     0071                     read_digital_keypad@mode:	
   522                           ; 1 bytes @ 0x1
   523                           
   524                           
   525                           ; 1 bytes @ 0x1
   526     0071                     	ds	2
   527     0073                     clcd_write@mode:
   528                           
   529                           ; 1 bytes @ 0x3
   530     0073                     	ds	1
   531     0074                     ?_clcd_putstr:
   532     0074                     ??_init_display_controller:	
   533                           ; 1 bytes @ 0x4
   534                           
   535     0074                     clcd_putstr@str:	
   536                           ; 1 bytes @ 0x4
   537                           
   538                           
   539                           ; 2 bytes @ 0x4
   540     0074                     	ds	2
   541     0076                     ??_init_display:
   542     0076                     ??_init_config:	
   543                           ; 1 bytes @ 0x6
   544                           
   545     0076                     clcd_putstr@addr:	
   546                           ; 1 bytes @ 0x6
   547                           
   548                           
   549                           ; 1 bytes @ 0x6
   550     0076                     	ds	1
   551     0077                     ??_clcd_putstr:
   552     0077                     ??_main:	
   553                           ; 1 bytes @ 0x7
   554                           
   555                           
   556                           ; 1 bytes @ 0x7
   557     0077                     	ds	4
   558                           
   559                           	psect	cstackBANK0
   560     0020                     __pcstackBANK0:
   561     0020                     main@str:
   562                           
   563                           ; 17 bytes @ 0x0
   564     0020                     	ds	17
   565     0031                     main@key:
   566                           
   567                           ; 1 bytes @ 0x11
   568     0031                     	ds	1
   569     0032                     main@prekey:
   570                           
   571                           ; 1 bytes @ 0x12
   572     0032                     	ds	1
   573     0033                     main@temp:
   574                           
   575                           ; 1 bytes @ 0x13
   576     0033                     	ds	1
   577     0034                     main@i:
   578                           
   579                           ; 2 bytes @ 0x14
   580     0034                     	ds	2
   581     0036                     main@i_58:
   582                           
   583                           ; 2 bytes @ 0x16
   584     0036                     	ds	2
   585                           
   586                           	psect	maintext
   587     071D                     __pmaintext:	
   588 ;;
   589 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   590 ;;
   591 ;; *************** function _main *****************
   592 ;; Defined at:
   593 ;;		line 19 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  i               2   22[BANK0 ] int 
   598 ;;  i               2   20[BANK0 ] int 
   599 ;;  str            17    0[BANK0 ] unsigned char [17]
   600 ;;  temp            1   19[BANK0 ] unsigned char 
   601 ;;  prekey          1   18[BANK0 ] unsigned char 
   602 ;;  key             1   17[BANK0 ] unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : B00/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         0       0       0       0       0
   613 ;;      Locals:         0      24       0       0       0
   614 ;;      Temps:          4       0       0       0       0
   615 ;;      Totals:         4      24       0       0       0
   616 ;;Total ram usage:       28 bytes
   617 ;; Hardware stack levels required when called: 4
   618 ;; This function calls:
   619 ;;		_clcd_putstr
   620 ;;		_init_config
   621 ;;		_read_digital_keypad
   622 ;; This function is called by:
   623 ;;		Startup code after reset
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627     071D                     _main:	
   628                           ;psect for function _main
   629                           
   630     071D                     l839:	
   631                           ;incstack = 0
   632                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   633                           
   634                           
   635                           ;main.c: 20:         {
   636     071D  120A  118A  261B  120A  118A  	fcall	_init_config
   637     0722                     l841:
   638                           
   639                           ;main.c: 21:             prekey = key;
   640     0722  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   641     0723  00F4               	movwf	clcd_putstr@str
   642     0724  3080               	movlw	128
   643     0725  00F5               	movwf	clcd_putstr@str+1
   644     0726  3080               	movlw	128
   645     0727  00F6               	movwf	clcd_putstr@addr
   646     0728  120A  118A  268E  120A  118A  	fcall	_clcd_putstr
   647     072D                     l843:
   648                           
   649                           ;main.c: 22:         }
   650     072D  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   651     072E  00F4               	movwf	clcd_putstr@str
   652     072F  3080               	movlw	128
   653     0730  00F5               	movwf	clcd_putstr@str+1
   654     0731  30C0               	movlw	192
   655     0732  00F6               	movwf	clcd_putstr@addr
   656     0733  120A  118A  268E  120A  118A  	fcall	_clcd_putstr
   657     0738                     l845:
   658                           
   659                           ;main.c: 23: 
   660     0738  3020               	movlw	main@str& (0+255)
   661     0739  0084               	movwf	4
   662     073A  3038               	movlw	low main@F1189
   663     073B  00F7               	movwf	??_main
   664     073C  0804               	movf	4,w
   665     073D  00F8               	movwf	??_main+1
   666     073E  3011               	movlw	17
   667     073F  00F9               	movwf	??_main+2
   668     0740                     u210:
   669     0740  0877               	movf	??_main,w
   670     0741  0084               	movwf	4
   671     0742  1383               	bcf	3,7	;select IRP bank0
   672     0743  0800               	movf	0,w
   673     0744  00FA               	movwf	??_main+3
   674     0745  0AF7               	incf	??_main,f
   675     0746  0878               	movf	??_main+1,w
   676     0747  0084               	movwf	4
   677     0748  087A               	movf	??_main+3,w
   678     0749  0080               	movwf	0
   679     074A  0AF8               	incf	??_main+1,f
   680     074B  0BF9               	decfsz	??_main+2,f
   681     074C  2F40               	goto	u210
   682     074D                     l847:
   683                           
   684                           ;main.c: 29:             {
   685     074D  3000               	movlw	0
   686     074E  120A  118A  266A  120A  118A  	fcall	_read_digital_keypad
   687     0753  1283               	bcf	3,5	;RP0=0, select bank0
   688     0754  1303               	bcf	3,6	;RP1=0, select bank0
   689     0755  00B1               	movwf	main@key
   690     0756                     l849:
   691                           
   692                           ;main.c: 31:             }
   693     0756  303F               	movlw	63
   694     0757  0631               	xorwf	main@key,w
   695     0758  1903               	btfsc	3,2
   696     0759  2F5B               	goto	u221
   697     075A  2F5C               	goto	u220
   698     075B                     u221:
   699     075B  2F5E               	goto	l853
   700     075C                     u220:
   701     075C                     l851:
   702                           
   703                           ;main.c: 32:             str[15] = temp;;main.c: 33: 
   704     075C  0831               	movf	main@key,w
   705     075D  00B2               	movwf	main@prekey
   706     075E                     l853:
   707                           
   708                           ;main.c: 36: 
   709     075E  303E               	movlw	62
   710     075F  0632               	xorwf	main@prekey,w
   711     0760  1D03               	btfss	3,2
   712     0761  2F63               	goto	u231
   713     0762  2F64               	goto	u230
   714     0763                     u231:
   715     0763  2FA6               	goto	l875
   716     0764                     u230:
   717     0764                     l855:
   718                           
   719                           ;main.c: 37:         else if(prekey == 0x3D);main.c: 38:         {
   720     0764  302D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   721     0765  00F4               	movwf	clcd_putstr@str
   722     0766  3080               	movlw	128
   723     0767  00F5               	movwf	clcd_putstr@str+1
   724     0768  3080               	movlw	128
   725     0769  00F6               	movwf	clcd_putstr@addr
   726     076A  120A  118A  268E  120A  118A  	fcall	_clcd_putstr
   727     076F                     l857:
   728                           
   729                           ;main.c: 39:             clcd_putstr("Right Scroll", (0x80 + 0));
   730     076F  1283               	bcf	3,5	;RP0=0, select bank0
   731     0770  1303               	bcf	3,6	;RP1=0, select bank0
   732     0771  0820               	movf	main@str,w
   733     0772  00B3               	movwf	main@temp
   734     0773                     l859:
   735                           
   736                           ;main.c: 40:             temp = str[15];
   737     0773  01B4               	clrf	main@i
   738     0774  01B5               	clrf	main@i+1
   739     0775                     l865:
   740                           
   741                           ;main.c: 41:             for(int i = 15; i >0; i--);main.c: 42:             {
   742     0775  1283               	bcf	3,5	;RP0=0, select bank0
   743     0776  1303               	bcf	3,6	;RP1=0, select bank0
   744     0777  0834               	movf	main@i,w
   745     0778  3E01               	addlw	1
   746     0779  3E20               	addlw	(low (main@str| 0))& (0+255)
   747     077A  0084               	movwf	4
   748     077B  1383               	bcf	3,7	;select IRP bank0
   749     077C  0800               	movf	0,w
   750     077D  00FF               	movwf	btemp+1
   751     077E  0834               	movf	main@i,w
   752     077F  3E20               	addlw	(low (main@str| 0))& (0+255)
   753     0780  0084               	movwf	4
   754     0781  087F               	movf	btemp+1,w
   755     0782  0080               	movwf	0
   756     0783                     l867:
   757                           
   758                           ;main.c: 43:                 str[i] = str[i-1];
   759     0783  3001               	movlw	1
   760     0784  07B4               	addwf	main@i,f
   761     0785  1803               	skipnc
   762     0786  0AB5               	incf	main@i+1,f
   763     0787  3000               	movlw	0
   764     0788  07B5               	addwf	main@i+1,f
   765     0789                     l869:
   766     0789  0835               	movf	main@i+1,w
   767     078A  3A80               	xorlw	128
   768     078B  00FF               	movwf	btemp+1
   769     078C  3080               	movlw	128
   770     078D  027F               	subwf	btemp+1,w
   771     078E  1D03               	skipz
   772     078F  2F92               	goto	u245
   773     0790  300F               	movlw	15
   774     0791  0234               	subwf	main@i,w
   775     0792                     u245:
   776     0792  1C03               	skipc
   777     0793  2F95               	goto	u241
   778     0794  2F96               	goto	u240
   779     0795                     u241:
   780     0795  2F75               	goto	l865
   781     0796                     u240:
   782     0796                     l871:
   783                           
   784                           ;main.c: 44:             }
   785     0796  1283               	bcf	3,5	;RP0=0, select bank0
   786     0797  1303               	bcf	3,6	;RP1=0, select bank0
   787     0798  0833               	movf	main@temp,w
   788     0799  00AF               	movwf	main@str+15
   789     079A                     l873:
   790                           
   791                           ;main.c: 46: 
   792     079A  3020               	movlw	(low (main@str| 0))& (0+255)
   793     079B  00F4               	movwf	clcd_putstr@str
   794     079C  3000               	movlw	0
   795     079D  00F5               	movwf	clcd_putstr@str+1
   796     079E  30C0               	movlw	192
   797     079F  00F6               	movwf	clcd_putstr@addr
   798     07A0  120A  118A  268E  120A  118A  	fcall	_clcd_putstr
   799                           
   800                           ;main.c: 47:             clcd_putstr(str, (0xC0 + 0));
   801     07A5  2F4D               	goto	l847
   802     07A6                     l875:
   803     07A6  303D               	movlw	61
   804     07A7  0632               	xorwf	main@prekey,w
   805     07A8  1D03               	btfss	3,2
   806     07A9  2FAB               	goto	u251
   807     07AA  2FAC               	goto	u250
   808     07AB                     u251:
   809     07AB  2F4D               	goto	l847
   810     07AC                     u250:
   811     07AC                     l877:
   812                           
   813                           ;main.c: 50:     return;;main.c: 51: }
   814     07AC  3020               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   815     07AD  00F4               	movwf	clcd_putstr@str
   816     07AE  3080               	movlw	128
   817     07AF  00F5               	movwf	clcd_putstr@str+1
   818     07B0  3080               	movlw	128
   819     07B1  00F6               	movwf	clcd_putstr@addr
   820     07B2  120A  118A  268E  120A  118A  	fcall	_clcd_putstr
   821     07B7                     l879:
   822     07B7  1283               	bcf	3,5	;RP0=0, select bank0
   823     07B8  1303               	bcf	3,6	;RP1=0, select bank0
   824     07B9  082F               	movf	main@str+15,w
   825     07BA  00B3               	movwf	main@temp
   826     07BB                     l881:
   827     07BB  300F               	movlw	15
   828     07BC  00B6               	movwf	main@i_58
   829     07BD  3000               	movlw	0
   830     07BE  00B7               	movwf	main@i_58+1
   831     07BF                     l887:
   832     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   833     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   834     07C1  0836               	movf	main@i_58,w
   835     07C2  3EFF               	addlw	255
   836     07C3  3E20               	addlw	(low (main@str| 0))& (0+255)
   837     07C4  0084               	movwf	4
   838     07C5  1383               	bcf	3,7	;select IRP bank0
   839     07C6  0800               	movf	0,w
   840     07C7  00FF               	movwf	btemp+1
   841     07C8  0836               	movf	main@i_58,w
   842     07C9  3E20               	addlw	(low (main@str| 0))& (0+255)
   843     07CA  0084               	movwf	4
   844     07CB  087F               	movf	btemp+1,w
   845     07CC  0080               	movwf	0
   846     07CD                     l889:
   847     07CD  30FF               	movlw	255
   848     07CE  07B6               	addwf	main@i_58,f
   849     07CF  1803               	skipnc
   850     07D0  0AB7               	incf	main@i_58+1,f
   851     07D1  30FF               	movlw	255
   852     07D2  07B7               	addwf	main@i_58+1,f
   853     07D3                     l891:
   854     07D3  0837               	movf	main@i_58+1,w
   855     07D4  3A80               	xorlw	128
   856     07D5  00FF               	movwf	btemp+1
   857     07D6  3080               	movlw	128
   858     07D7  027F               	subwf	btemp+1,w
   859     07D8  1D03               	skipz
   860     07D9  2FDC               	goto	u265
   861     07DA  3001               	movlw	1
   862     07DB  0236               	subwf	main@i_58,w
   863     07DC                     u265:
   864     07DC  1803               	skipnc
   865     07DD  2FDF               	goto	u261
   866     07DE  2FE0               	goto	u260
   867     07DF                     u261:
   868     07DF  2FBF               	goto	l887
   869     07E0                     u260:
   870     07E0                     l893:
   871     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   872     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   873     07E2  0833               	movf	main@temp,w
   874     07E3  00A0               	movwf	main@str
   875     07E4  2F9A               	goto	l873
   876     07E5  120A  118A  2800   	ljmp	start
   877     07E8                     __end_of_main:
   878                           
   879                           	psect	text1
   880     066A                     __ptext1:	
   881 ;; *************** function _read_digital_keypad *****************
   882 ;; Defined at:
   883 ;;		line 15 in file "digital_keypad.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  mode            1    wreg     unsigned char 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  mode            1    1[COMMON] unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      unsigned char 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   897 ;;      Params:         0       0       0       0       0
   898 ;;      Locals:         1       0       0       0       0
   899 ;;      Temps:          1       0       0       0       0
   900 ;;      Totals:         2       0       0       0       0
   901 ;;Total ram usage:        2 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_main
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910     066A                     _read_digital_keypad:	
   911                           ;psect for function _read_digital_keypad
   912                           
   913                           
   914                           ;incstack = 0
   915                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
   916                           ;read_digital_keypad@mode stored from wreg
   917     066A  00F1               	movwf	read_digital_keypad@mode
   918     066B                     l811:
   919                           
   920                           ;digital_keypad.c: 15: unsigned char read_digital_keypad(unsigned char mode);digital_key
      +                          pad.c: 16: {;digital_keypad.c: 17:     static unsigned char once = 1;;digital_keypad.c: 
      +                          18:     if(mode == 0)
   921     066B  0871               	movf	read_digital_keypad@mode,w
   922     066C  1D03               	btfss	3,2
   923     066D  2E6F               	goto	u171
   924     066E  2E70               	goto	u170
   925     066F                     u171:
   926     066F  2E75               	goto	l819
   927     0670                     u170:
   928     0670                     l813:
   929                           
   930                           ;digital_keypad.c: 19:     {;digital_keypad.c: 20:         return PORTB & 0x3F;
   931     0670  1283               	bcf	3,5	;RP0=0, select bank0
   932     0671  1303               	bcf	3,6	;RP1=0, select bank0
   933     0672  0806               	movf	6,w	;volatile
   934     0673  393F               	andlw	63
   935     0674  2E8D               	goto	l42
   936     0675                     l819:
   937     0675  0371               	decf	read_digital_keypad@mode,w
   938     0676  1D03               	btfss	3,2
   939     0677  2E79               	goto	u181
   940     0678  2E7A               	goto	u180
   941     0679                     u181:
   942     0679  2E8C               	goto	l835
   943     067A                     u180:
   944     067A                     l821:
   945                           
   946                           ;digital_keypad.c: 23:     {;digital_keypad.c: 24:         if(((PORTB & 0x3F) != 0x3F) &
      +                          & once)
   947     067A  303F               	movlw	63
   948     067B  1283               	bcf	3,5	;RP0=0, select bank0
   949     067C  1303               	bcf	3,6	;RP1=0, select bank0
   950     067D  0506               	andwf	6,w	;volatile
   951     067E  00F0               	movwf	??_read_digital_keypad
   952     067F  303F               	movlw	63
   953     0680  0670               	xorwf	??_read_digital_keypad,w
   954     0681  1903               	btfsc	3,2
   955     0682  2E84               	goto	u191
   956     0683  2E85               	goto	u190
   957     0684                     u191:
   958     0684  2E8C               	goto	l44
   959     0685                     u190:
   960     0685                     l823:
   961     0685  087B               	movf	read_digital_keypad@once,w
   962     0686  1903               	btfsc	3,2
   963     0687  2E89               	goto	u201
   964     0688  2E8A               	goto	u200
   965     0689                     u201:
   966     0689  2E8C               	goto	l44
   967     068A                     u200:
   968     068A                     l825:
   969                           
   970                           ;digital_keypad.c: 25:         {;digital_keypad.c: 26:             once = 0;
   971     068A  01FB               	clrf	read_digital_keypad@once
   972     068B  2E70               	goto	l813
   973     068C                     l44:	
   974                           ;digital_keypad.c: 33:     }
   975                           
   976     068C                     l835:
   977                           
   978                           ;digital_keypad.c: 34:     return 0x3F;
   979     068C  303F               	movlw	63
   980     068D                     l42:
   981     068D  0008               	return
   982     068E                     __end_of_read_digital_keypad:
   983                           
   984                           	psect	text2
   985     061B                     __ptext2:	
   986 ;; *************** function _init_config *****************
   987 ;; Defined at:
   988 ;;		line 12 in file "main.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0, pclath, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       0       0       0       0
  1003 ;;      Locals:         0       0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0
  1005 ;;      Totals:         0       0       0       0       0
  1006 ;;Total ram usage:        0 bytes
  1007 ;; Hardware stack levels used: 1
  1008 ;; Hardware stack levels required when called: 3
  1009 ;; This function calls:
  1010 ;;		_init_digital_keypad
  1011 ;;		_init_display
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017     061B                     _init_config:	
  1018                           ;psect for function _init_config
  1019                           
  1020     061B                     l801:	
  1021                           ;incstack = 0
  1022                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1023                           
  1024                           
  1025                           ;main.c: 14: 
  1026     061B  120A  118A  2610  120A  118A  	fcall	_init_display
  1027                           
  1028                           ;main.c: 15:     while (1) {
  1029     0620  120A  118A  260A  120A  118A  	fcall	_init_digital_keypad
  1030     0625                     l11:
  1031     0625  0008               	return
  1032     0626                     __end_of_init_config:
  1033                           
  1034                           	psect	text3
  1035     0610                     __ptext3:	
  1036 ;; *************** function _init_display *****************
  1037 ;; Defined at:
  1038 ;;		line 10 in file "clcd.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0, pclath, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used: 1
  1058 ;; Hardware stack levels required when called: 2
  1059 ;; This function calls:
  1060 ;;		_init_display_controller
  1061 ;; This function is called by:
  1062 ;;		_init_config
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066     0610                     _init_display:	
  1067                           ;psect for function _init_display
  1068                           
  1069     0610                     l791:	
  1070                           ;incstack = 0
  1071                           ; Regs used in _init_display: [wreg+status,2+status,0+pclath+cstack]
  1072                           
  1073                           
  1074                           ;clcd.c: 12:     TRISD = 0x00;
  1075     0610  1683               	bsf	3,5	;RP0=1, select bank1
  1076     0611  1303               	bcf	3,6	;RP1=0, select bank1
  1077     0612  0188               	clrf	8	;volatile
  1078     0613                     l793:
  1079                           
  1080                           ;clcd.c: 13:     TRISE2 = 0;
  1081     0613  1109               	bcf	9,2	;volatile
  1082     0614                     l795:
  1083                           
  1084                           ;clcd.c: 14:     TRISE1 = 0;
  1085     0614  1089               	bcf	9,1	;volatile
  1086     0615                     l797:
  1087                           
  1088                           ;clcd.c: 16:     init_display_controller();
  1089     0615  120A  118A  26BE  120A  118A  	fcall	_init_display_controller
  1090     061A                     l68:
  1091     061A  0008               	return
  1092     061B                     __end_of_init_display:
  1093                           
  1094                           	psect	text4
  1095     06BE                     __ptext4:	
  1096 ;; *************** function _init_display_controller *****************
  1097 ;; Defined at:
  1098 ;;		line 19 in file "clcd.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0, pclath, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0
  1114 ;;      Temps:          2       0       0       0       0
  1115 ;;      Totals:         2       0       0       0       0
  1116 ;;Total ram usage:        2 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 1
  1119 ;; This function calls:
  1120 ;;		_clcd_write
  1121 ;; This function is called by:
  1122 ;;		_init_display
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126     06BE                     _init_display_controller:	
  1127                           ;psect for function _init_display_controller
  1128                           
  1129     06BE                     l771:	
  1130                           ;incstack = 0
  1131                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1132                           
  1133                           
  1134                           ;clcd.c: 21:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1135     06BE  30C3               	movlw	195
  1136     06BF  00F5               	movwf	??_init_display_controller+1
  1137     06C0  30CD               	movlw	205
  1138     06C1  00F4               	movwf	??_init_display_controller
  1139     06C2                     u277:
  1140     06C2  0BF4               	decfsz	??_init_display_controller,f
  1141     06C3  2EC2               	goto	u277
  1142     06C4  0BF5               	decfsz	??_init_display_controller+1,f
  1143     06C5  2EC2               	goto	u277
  1144     06C6                     l773:
  1145                           
  1146                           ;clcd.c: 23:     clcd_write(0, 0x33);
  1147     06C6  3033               	movlw	51
  1148     06C7  00F0               	movwf	clcd_write@byte
  1149     06C8  3000               	movlw	0
  1150     06C9  120A  118A  264A  120A  118A  	fcall	_clcd_write
  1151     06CE                     l775:
  1152                           
  1153                           ;clcd.c: 24:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1154     06CE  301B               	movlw	27
  1155     06CF  00F5               	movwf	??_init_display_controller+1
  1156     06D0  309E               	movlw	158
  1157     06D1  00F4               	movwf	??_init_display_controller
  1158     06D2                     u287:
  1159     06D2  0BF4               	decfsz	??_init_display_controller,f
  1160     06D3  2ED2               	goto	u287
  1161     06D4  0BF5               	decfsz	??_init_display_controller+1,f
  1162     06D5  2ED2               	goto	u287
  1163     06D6  0000               	nop
  1164                           
  1165                           ;clcd.c: 26:     clcd_write(0, 0x33);
  1166     06D7  3033               	movlw	51
  1167     06D8  00F0               	movwf	clcd_write@byte
  1168     06D9  3000               	movlw	0
  1169     06DA  120A  118A  264A  120A  118A  	fcall	_clcd_write
  1170     06DF                     l777:
  1171                           
  1172                           ;clcd.c: 27:     _delay((unsigned long)((200)*(20000000/4000000.0)));
  1173     06DF  30C7               	movlw	199
  1174     06E0  00F4               	movwf	??_init_display_controller
  1175     06E1                     u297:
  1176     06E1  2EE2               	nop2
  1177     06E2  0BF4               	decfsz	??_init_display_controller,f
  1178     06E3  2EE1               	goto	u297
  1179     06E4  2EE5               	nop2
  1180     06E5  2EE6               	nop2
  1181     06E6                     l779:
  1182                           
  1183                           ;clcd.c: 29:     clcd_write(0, 0x33);
  1184     06E6  3033               	movlw	51
  1185     06E7  00F0               	movwf	clcd_write@byte
  1186     06E8  3000               	movlw	0
  1187     06E9  120A  118A  264A  120A  118A  	fcall	_clcd_write
  1188     06EE                     l781:
  1189                           
  1190                           ;clcd.c: 30:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1191     06EE  2EEF               	nop2	;2 cycle nop
  1192     06EF  2EF0               	nop2	;2 cycle nop
  1193     06F0  0000               	nop
  1194     06F1                     l783:
  1195                           
  1196                           ;clcd.c: 32:     clcd_write(0, 0x38);
  1197     06F1  3038               	movlw	56
  1198     06F2  00F0               	movwf	clcd_write@byte
  1199     06F3  3000               	movlw	0
  1200     06F4  120A  118A  264A  120A  118A  	fcall	_clcd_write
  1201     06F9                     l785:
  1202                           
  1203                           ;clcd.c: 33:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1204     06F9  30A6               	movlw	166
  1205     06FA  00F4               	movwf	??_init_display_controller
  1206     06FB                     u307:
  1207     06FB  0BF4               	decfsz	??_init_display_controller,f
  1208     06FC  2EFB               	goto	u307
  1209     06FD  0000               	nop
  1210                           
  1211                           ;clcd.c: 35:     clcd_write(0, 0x01);
  1212     06FE  01F0               	clrf	clcd_write@byte
  1213     06FF  0AF0               	incf	clcd_write@byte,f
  1214     0700  3000               	movlw	0
  1215     0701  120A  118A  264A  120A  118A  	fcall	_clcd_write
  1216     0706                     l787:
  1217                           
  1218                           ;clcd.c: 36:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1219     0706  3004               	movlw	4
  1220     0707  00F5               	movwf	??_init_display_controller+1
  1221     0708  303D               	movlw	61
  1222     0709  00F4               	movwf	??_init_display_controller
  1223     070A                     u317:
  1224     070A  0BF4               	decfsz	??_init_display_controller,f
  1225     070B  2F0A               	goto	u317
  1226     070C  0BF5               	decfsz	??_init_display_controller+1,f
  1227     070D  2F0A               	goto	u317
  1228     070E  2F0F               	nop2
  1229     070F                     l789:
  1230                           
  1231                           ;clcd.c: 38:     clcd_write(0, 0x0C);
  1232     070F  300C               	movlw	12
  1233     0710  00F0               	movwf	clcd_write@byte
  1234     0711  3000               	movlw	0
  1235     0712  120A  118A  264A  120A  118A  	fcall	_clcd_write
  1236                           
  1237                           ;clcd.c: 39:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1238     0717  30A6               	movlw	166
  1239     0718  00F4               	movwf	??_init_display_controller
  1240     0719                     u327:
  1241     0719  0BF4               	decfsz	??_init_display_controller,f
  1242     071A  2F19               	goto	u327
  1243     071B  0000               	nop
  1244     071C                     l71:
  1245     071C  0008               	return
  1246     071D                     __end_of_init_display_controller:
  1247                           
  1248                           	psect	text5
  1249     060A                     __ptext5:	
  1250 ;; *************** function _init_digital_keypad *****************
  1251 ;; Defined at:
  1252 ;;		line 10 in file "digital_keypad.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0
  1269 ;;      Totals:         0       0       0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_init_config
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279     060A                     _init_digital_keypad:	
  1280                           ;psect for function _init_digital_keypad
  1281                           
  1282     060A                     l799:	
  1283                           ;incstack = 0
  1284                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1285                           
  1286                           
  1287                           ;digital_keypad.c: 12:     TRISB = TRISB | 0x3F;
  1288     060A  1683               	bsf	3,5	;RP0=1, select bank1
  1289     060B  1303               	bcf	3,6	;RP1=0, select bank1
  1290     060C  0806               	movf	6,w	;volatile
  1291     060D  383F               	iorlw	63
  1292     060E  0086               	movwf	6	;volatile
  1293     060F                     l36:
  1294     060F  0008               	return
  1295     0610                     __end_of_init_digital_keypad:
  1296                           
  1297                           	psect	text6
  1298     068E                     __ptext6:	
  1299 ;; *************** function _clcd_putstr *****************
  1300 ;; Defined at:
  1301 ;;		line 62 in file "clcd.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  str             2    4[COMMON] PTR unsigned char 
  1304 ;;		 -> STR_4(13), STR_3(12), main@str(17), STR_2(17), 
  1305 ;;		 -> STR_1(14), 
  1306 ;;  addr            1    6[COMMON] unsigned char 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1318 ;;      Params:         3       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0
  1321 ;;      Totals:         3       0       0       0       0
  1322 ;;Total ram usage:        3 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 1
  1325 ;; This function calls:
  1326 ;;		_clcd_write
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332     068E                     _clcd_putstr:	
  1333                           ;psect for function _clcd_putstr
  1334                           
  1335     068E                     l803:	
  1336                           ;incstack = 0
  1337                           ; Regs used in _clcd_putstr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1338                           
  1339                           
  1340                           ;clcd.c: 62: void clcd_putstr(char *str, char addr);clcd.c: 63: {;clcd.c: 64:     clcd_w
      +                          rite(0, addr);
  1341     068E  0876               	movf	clcd_putstr@addr,w
  1342     068F  00F0               	movwf	clcd_write@byte
  1343     0690  3000               	movlw	0
  1344     0691  120A  118A  264A  120A  118A  	fcall	_clcd_write
  1345                           
  1346                           ;clcd.c: 66:     while(*str != '\0')
  1347     0696  2EAD               	goto	l809
  1348     0697                     l805:
  1349                           
  1350                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(1, *str);
  1351     0697  0875               	movf	clcd_putstr@str+1,w
  1352     0698  00FF               	movwf	btemp+1
  1353     0699  0874               	movf	clcd_putstr@str,w
  1354     069A  0084               	movwf	4
  1355     069B  120A  118A  2003  120A  118A  	fcall	stringtab
  1356     06A0  00F0               	movwf	clcd_write@byte
  1357     06A1  3001               	movlw	1
  1358     06A2  120A  118A  264A  120A  118A  	fcall	_clcd_write
  1359     06A7                     l807:
  1360                           
  1361                           ;clcd.c: 69:         str++;
  1362     06A7  3001               	movlw	1
  1363     06A8  07F4               	addwf	clcd_putstr@str,f
  1364     06A9  1803               	skipnc
  1365     06AA  0AF5               	incf	clcd_putstr@str+1,f
  1366     06AB  3000               	movlw	0
  1367     06AC  07F5               	addwf	clcd_putstr@str+1,f
  1368     06AD                     l809:
  1369                           
  1370                           ;clcd.c: 66:     while(*str != '\0')
  1371     06AD  0875               	movf	clcd_putstr@str+1,w
  1372     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1373     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1374     06B0  00FF               	movwf	btemp+1
  1375     06B1  0874               	movf	clcd_putstr@str,w
  1376     06B2  0084               	movwf	4
  1377     06B3  120A  118A  2003  120A  118A  	fcall	stringtab
  1378     06B8  3A00               	xorlw	0
  1379     06B9  1D03               	skipz
  1380     06BA  2EBC               	goto	u161
  1381     06BB  2EBD               	goto	u160
  1382     06BC                     u161:
  1383     06BC  2E97               	goto	l805
  1384     06BD                     u160:
  1385     06BD                     l83:
  1386     06BD  0008               	return
  1387     06BE                     __end_of_clcd_putstr:
  1388                           
  1389                           	psect	text7
  1390     064A                     __ptext7:	
  1391 ;; *************** function _clcd_write *****************
  1392 ;; Defined at:
  1393 ;;		line 42 in file "clcd.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  mode            1    wreg     unsigned char 
  1396 ;;  byte            1    0[COMMON] unsigned char 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  mode            1    3[COMMON] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         1       0       0       0       0
  1409 ;;      Locals:         1       0       0       0       0
  1410 ;;      Temps:          2       0       0       0       0
  1411 ;;      Totals:         4       0       0       0       0
  1412 ;;Total ram usage:        4 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_init_display_controller
  1418 ;;		_clcd_putstr
  1419 ;;		_clcd_putch
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423     064A                     _clcd_write:	
  1424                           ;psect for function _clcd_write
  1425                           
  1426                           
  1427                           ;incstack = 0
  1428                           ; Regs used in _clcd_write: [wreg]
  1429                           ;clcd_write@mode stored from wreg
  1430     064A  00F3               	movwf	clcd_write@mode
  1431     064B                     l763:
  1432                           
  1433                           ;clcd.c: 42: void clcd_write(char mode, char byte);clcd.c: 43: {;clcd.c: 44:     RE2 = m
      +                          ode;
  1434     064B  1873               	btfsc	clcd_write@mode,0
  1435     064C  2E4E               	goto	u141
  1436     064D  2E52               	goto	u140
  1437     064E                     u141:
  1438     064E  1283               	bcf	3,5	;RP0=0, select bank0
  1439     064F  1303               	bcf	3,6	;RP1=0, select bank0
  1440     0650  1509               	bsf	9,2	;volatile
  1441     0651  2E55               	goto	u154
  1442     0652                     u140:
  1443     0652  1283               	bcf	3,5	;RP0=0, select bank0
  1444     0653  1303               	bcf	3,6	;RP1=0, select bank0
  1445     0654  1109               	bcf	9,2	;volatile
  1446     0655                     u154:
  1447     0655                     l765:
  1448                           
  1449                           ;clcd.c: 46:     PORTD = byte;
  1450     0655  0870               	movf	clcd_write@byte,w
  1451     0656  0088               	movwf	8	;volatile
  1452     0657                     l767:
  1453                           
  1454                           ;clcd.c: 48:     RE1 = 1;
  1455     0657  1489               	bsf	9,1	;volatile
  1456                           
  1457                           ;clcd.c: 49:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1458     0658  30A6               	movlw	166
  1459     0659  00F1               	movwf	??_clcd_write
  1460     065A                     u337:
  1461     065A  0BF1               	decfsz	??_clcd_write,f
  1462     065B  2E5A               	goto	u337
  1463     065C  0000               	nop
  1464     065D                     l769:
  1465                           
  1466                           ;clcd.c: 50:     RE1 = 0;
  1467     065D  1283               	bcf	3,5	;RP0=0, select bank0
  1468     065E  1303               	bcf	3,6	;RP1=0, select bank0
  1469     065F  1089               	bcf	9,1	;volatile
  1470                           
  1471                           ;clcd.c: 51:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1472     0660  301B               	movlw	27
  1473     0661  00F2               	movwf	??_clcd_write+1
  1474     0662  309E               	movlw	158
  1475     0663  00F1               	movwf	??_clcd_write
  1476     0664                     u347:
  1477     0664  0BF1               	decfsz	??_clcd_write,f
  1478     0665  2E64               	goto	u347
  1479     0666  0BF2               	decfsz	??_clcd_write+1,f
  1480     0667  2E64               	goto	u347
  1481     0668  0000               	nop
  1482     0669                     l74:
  1483     0669  0008               	return
  1484     066A                     __end_of_clcd_write:
  1485     007E                     btemp	set	126	;btemp
  1486     007E                     wtemp0	set	126
  1487                           
  1488                           	psect	config
  1489                           
  1490                           ;Config register CONFIG @ 0x2007
  1491                           ;	Oscillator Selection bits
  1492                           ;	FOSC = 0x3, unprogrammed default
  1493                           ;	Watchdog Timer Enable bit
  1494                           ;	WDTE = OFF, WDT disabled
  1495                           ;	Power-up Timer Enable bit
  1496                           ;	PWRTE = 0x1, unprogrammed default
  1497                           ;	Brown-out Reset Enable bit
  1498                           ;	BOREN = 0x1, unprogrammed default
  1499                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1500                           ;	LVP = 0x1, unprogrammed default
  1501                           ;	Data EEPROM Memory Code Protection bit
  1502                           ;	CPD = 0x1, unprogrammed default
  1503                           ;	Flash Program Memory Write Enable bits
  1504                           ;	WRT = 0x3, unprogrammed default
  1505                           ;	In-Circuit Debugger Mode bit
  1506                           ;	DEBUG = 0x1, unprogrammed default
  1507                           ;	Flash Program Memory Code Protection bit
  1508                           ;	CP = 0x1, unprogrammed default
  1509     2007                     	org	8199
  1510     2007  3FFB               	dw	16379

Data Sizes:
    Strings     56
    Constant    0
    Data        18
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     24      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_putstr@str	PTR unsigned char  size(2) Largest target is 17
		 -> main@str(BANK0[17]), STR_1(CODE[14]), STR_2(CODE[17]), STR_3(CODE[12]), 
		 -> STR_4(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_clcd_putstr
    _init_display->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putstr->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    3158
                                              7 COMMON     4     4      0
                                              0 BANK0     24    24      0
                        _clcd_putstr
                        _init_config
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     804
                _init_digital_keypad
                       _init_display
 ---------------------------------------------------------------------------------
 (2) _init_display                                         0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clcd_putstr                                          3     0      3    1783
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_putstr
     _clcd_write
   _init_config
     _init_digital_keypad
     _init_display
       _init_display_controller
         _clcd_write
   _read_digital_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      29       5       51.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Oct 26 14:50:31 2023

                              pc 0002                               l11 0625                               l42 068D  
                             l36 060F                               l44 068C                               l71 071C  
                             l74 0669                               l83 06BD                               l68 061A  
                             fsr 0004                              l801 061B                              l803 068E  
                            l811 066B                              l805 0697                              l821 067A  
                            l813 0670                              l807 06A7                              l823 0685  
                            l809 06AD                              l825 068A                              l841 0722  
                            l763 064B                              l771 06BE                              l835 068C  
                            l819 0675                              l851 075C                              l843 072D  
                            l765 0655                              l781 06EE                              l773 06C6  
                            l853 075E                              l845 0738                              l767 0657  
                            l783 06F1                              l775 06CE                              l791 0610  
                            l871 0796                              l855 0764                              l847 074D  
                            l839 071D                              l769 065D                              l785 06F9  
                            l777 06DF                              l793 0613                              l881 07BB  
                            l873 079A                              l865 0775                              l857 076F  
                            l849 0756                              l787 0706                              l779 06E6  
                            l795 0614                              l891 07D3                              l867 0783  
                            l859 0773                              l875 07A6                              l789 070F  
                            l797 0615                              l893 07E0                              l877 07AC  
                            l869 0789                              l799 060A                              l887 07BF  
                            l879 07B7                              l889 07CD                              _RE1 0049  
                            _RE2 004A                              u200 068A                              u201 0689  
                            u210 0740                              u140 0652                              u220 075C  
                            u141 064E                              u221 075B                              u230 0764  
                            u231 0763                              u160 06BD                              u240 0796  
                            u161 06BC                              u241 0795                              u154 0655  
                            u170 0670                              u250 07AC                              u307 06FB  
                            u171 066F                              u251 07AB                              u180 067A  
                            u260 07E0                              u317 070A                              u181 0679  
                            u261 07DF                              u245 0792                              u190 0685  
                            u327 0719                              u191 0684                              u337 065A  
                            u265 07DC                              u347 0664                              u277 06C2  
                            u287 06D2                              u297 06E1                              fsr0 0004  
                            indf 0000            ??_read_digital_keypad 0070                             STR_1 0024  
                           STR_2 0013                             STR_3 003F                             STR_4 0032  
                           _main 071D                             btemp 007E                             start 0000  
                 clcd_putstr@str 0074                   clcd_write@byte 0070                   clcd_write@mode 0073  
                          ?_main 0070                     ?_init_config 0070                            _PORTB 0006  
                          _PORTD 0008                            _TRISB 0086                            _TRISD 0088  
                          main@i 0034                            pclath 000A                  clcd_putstr@addr 0076  
                          status 0003                            wtemp0 007E                  __initialization 07E8  
                   __end_of_main 07E8                           ??_main 0077                    ?_init_display 0070  
                         _TRISE1 0449                           _TRISE2 044A      __end_of_init_digital_keypad 0610  
        _init_display_controller 06BE                     __pdataCOMMON 007B                   ??_init_display 0076  
        __end_of__initialization 07FC                   __pcstackCOMMON 0070                     __pidataBANK0 0626  
      ??_init_display_controller 0074                       _clcd_write 064A                       __pmaintext 071D  
    __end_of_read_digital_keypad 068E                       __stringtab 0003             __end_of_init_display 061B  
                        __ptext1 066A                          __ptext2 061B                          __ptext3 0610  
                        __ptext4 06BE                          __ptext5 060A                          __ptext6 068E  
                        __ptext7 064A  __end_of_init_display_controller 071D                          main@key 0031  
                        main@str 0020             end_of_initialization 07FC                    ??_clcd_putstr 0077  
                    ?_clcd_write 0070                       main@prekey 0032              __end_of_clcd_putstr 06BE  
                  __pidataCOMMON 0609              start_initialization 07E8                       init_fetch0 0637  
                    __pdataBANK0 0038                    ??_init_config 0076                        ___latbits 0002  
                  __pcstackBANK0 0020                     _init_display 0610                      _clcd_putstr 068E  
                      __pstrings 0003              __end_of_init_config 0626         ?_init_display_controller 0070  
                   ??_clcd_write 0071                        main@F1189 0038                      __stringbase 0012  
             __end_of_clcd_write 066A              _init_digital_keypad 060A             ?_init_digital_keypad 0070  
             __end_of__stringtab 0013                      _init_config 061B          read_digital_keypad@mode 0071  
        read_digital_keypad@once 007B            ??_init_digital_keypad 0070                         main@i_58 0036  
                       main@temp 0033                         init_ram0 063B                     ?_clcd_putstr 0074  
                      stringcode 000D              _read_digital_keypad 066A                         stringdir 000D  
                       stringtab 0003             ?_read_digital_keypad 0070  
