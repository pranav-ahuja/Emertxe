

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Oct 30 15:33:03 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Generated 18/08/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F877A Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0000                     	;# 
    69     0001                     	;# 
    70     0002                     	;# 
    71     0003                     	;# 
    72     0004                     	;# 
    73     0005                     	;# 
    74     0006                     	;# 
    75     0007                     	;# 
    76     0008                     	;# 
    77     0009                     	;# 
    78     000A                     	;# 
    79     000B                     	;# 
    80     000C                     	;# 
    81     000D                     	;# 
    82     000E                     	;# 
    83     000E                     	;# 
    84     000F                     	;# 
    85     0010                     	;# 
    86     0011                     	;# 
    87     0012                     	;# 
    88     0013                     	;# 
    89     0014                     	;# 
    90     0015                     	;# 
    91     0015                     	;# 
    92     0016                     	;# 
    93     0017                     	;# 
    94     0018                     	;# 
    95     0019                     	;# 
    96     001A                     	;# 
    97     001B                     	;# 
    98     001B                     	;# 
    99     001C                     	;# 
   100     001D                     	;# 
   101     001E                     	;# 
   102     001F                     	;# 
   103     0081                     	;# 
   104     0085                     	;# 
   105     0086                     	;# 
   106     0087                     	;# 
   107     0088                     	;# 
   108     0089                     	;# 
   109     008C                     	;# 
   110     008D                     	;# 
   111     008E                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0094                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009E                     	;# 
   121     009F                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     010F                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     0000                     	;# 
   129     0001                     	;# 
   130     0002                     	;# 
   131     0003                     	;# 
   132     0004                     	;# 
   133     0005                     	;# 
   134     0006                     	;# 
   135     0007                     	;# 
   136     0008                     	;# 
   137     0009                     	;# 
   138     000A                     	;# 
   139     000B                     	;# 
   140     000C                     	;# 
   141     000D                     	;# 
   142     000E                     	;# 
   143     000E                     	;# 
   144     000F                     	;# 
   145     0010                     	;# 
   146     0011                     	;# 
   147     0012                     	;# 
   148     0013                     	;# 
   149     0014                     	;# 
   150     0015                     	;# 
   151     0015                     	;# 
   152     0016                     	;# 
   153     0017                     	;# 
   154     0018                     	;# 
   155     0019                     	;# 
   156     001A                     	;# 
   157     001B                     	;# 
   158     001B                     	;# 
   159     001C                     	;# 
   160     001D                     	;# 
   161     001E                     	;# 
   162     001F                     	;# 
   163     0081                     	;# 
   164     0085                     	;# 
   165     0086                     	;# 
   166     0087                     	;# 
   167     0088                     	;# 
   168     0089                     	;# 
   169     008C                     	;# 
   170     008D                     	;# 
   171     008E                     	;# 
   172     0091                     	;# 
   173     0092                     	;# 
   174     0093                     	;# 
   175     0094                     	;# 
   176     0098                     	;# 
   177     0099                     	;# 
   178     009C                     	;# 
   179     009D                     	;# 
   180     009E                     	;# 
   181     009F                     	;# 
   182     010C                     	;# 
   183     010D                     	;# 
   184     010E                     	;# 
   185     010F                     	;# 
   186     018C                     	;# 
   187     018D                     	;# 
   188     0000                     	;# 
   189     0001                     	;# 
   190     0002                     	;# 
   191     0003                     	;# 
   192     0004                     	;# 
   193     0005                     	;# 
   194     0006                     	;# 
   195     0007                     	;# 
   196     0008                     	;# 
   197     0009                     	;# 
   198     000A                     	;# 
   199     000B                     	;# 
   200     000C                     	;# 
   201     000D                     	;# 
   202     000E                     	;# 
   203     000E                     	;# 
   204     000F                     	;# 
   205     0010                     	;# 
   206     0011                     	;# 
   207     0012                     	;# 
   208     0013                     	;# 
   209     0014                     	;# 
   210     0015                     	;# 
   211     0015                     	;# 
   212     0016                     	;# 
   213     0017                     	;# 
   214     0018                     	;# 
   215     0019                     	;# 
   216     001A                     	;# 
   217     001B                     	;# 
   218     001B                     	;# 
   219     001C                     	;# 
   220     001D                     	;# 
   221     001E                     	;# 
   222     001F                     	;# 
   223     0081                     	;# 
   224     0085                     	;# 
   225     0086                     	;# 
   226     0087                     	;# 
   227     0088                     	;# 
   228     0089                     	;# 
   229     008C                     	;# 
   230     008D                     	;# 
   231     008E                     	;# 
   232     0091                     	;# 
   233     0092                     	;# 
   234     0093                     	;# 
   235     0094                     	;# 
   236     0098                     	;# 
   237     0099                     	;# 
   238     009C                     	;# 
   239     009D                     	;# 
   240     009E                     	;# 
   241     009F                     	;# 
   242     010C                     	;# 
   243     010D                     	;# 
   244     010E                     	;# 
   245     010F                     	;# 
   246     018C                     	;# 
   247     018D                     	;# 
   248     0000                     	;# 
   249     0001                     	;# 
   250     0002                     	;# 
   251     0003                     	;# 
   252     0004                     	;# 
   253     0005                     	;# 
   254     0006                     	;# 
   255     0007                     	;# 
   256     0008                     	;# 
   257     0009                     	;# 
   258     000A                     	;# 
   259     000B                     	;# 
   260     000C                     	;# 
   261     000D                     	;# 
   262     000E                     	;# 
   263     000E                     	;# 
   264     000F                     	;# 
   265     0010                     	;# 
   266     0011                     	;# 
   267     0012                     	;# 
   268     0013                     	;# 
   269     0014                     	;# 
   270     0015                     	;# 
   271     0015                     	;# 
   272     0016                     	;# 
   273     0017                     	;# 
   274     0018                     	;# 
   275     0019                     	;# 
   276     001A                     	;# 
   277     001B                     	;# 
   278     001B                     	;# 
   279     001C                     	;# 
   280     001D                     	;# 
   281     001E                     	;# 
   282     001F                     	;# 
   283     0081                     	;# 
   284     0085                     	;# 
   285     0086                     	;# 
   286     0087                     	;# 
   287     0088                     	;# 
   288     0089                     	;# 
   289     008C                     	;# 
   290     008D                     	;# 
   291     008E                     	;# 
   292     0091                     	;# 
   293     0092                     	;# 
   294     0093                     	;# 
   295     0094                     	;# 
   296     0098                     	;# 
   297     0099                     	;# 
   298     009C                     	;# 
   299     009D                     	;# 
   300     009E                     	;# 
   301     009F                     	;# 
   302     010C                     	;# 
   303     010D                     	;# 
   304     010E                     	;# 
   305     010F                     	;# 
   306     018C                     	;# 
   307     018D                     	;# 
   308     0000                     	;# 
   309     0001                     	;# 
   310     0002                     	;# 
   311     0003                     	;# 
   312     0004                     	;# 
   313     0005                     	;# 
   314     0006                     	;# 
   315     0007                     	;# 
   316     0008                     	;# 
   317     0009                     	;# 
   318     000A                     	;# 
   319     000B                     	;# 
   320     000C                     	;# 
   321     000D                     	;# 
   322     000E                     	;# 
   323     000E                     	;# 
   324     000F                     	;# 
   325     0010                     	;# 
   326     0011                     	;# 
   327     0012                     	;# 
   328     0013                     	;# 
   329     0014                     	;# 
   330     0015                     	;# 
   331     0015                     	;# 
   332     0016                     	;# 
   333     0017                     	;# 
   334     0018                     	;# 
   335     0019                     	;# 
   336     001A                     	;# 
   337     001B                     	;# 
   338     001B                     	;# 
   339     001C                     	;# 
   340     001D                     	;# 
   341     001E                     	;# 
   342     001F                     	;# 
   343     0081                     	;# 
   344     0085                     	;# 
   345     0086                     	;# 
   346     0087                     	;# 
   347     0088                     	;# 
   348     0089                     	;# 
   349     008C                     	;# 
   350     008D                     	;# 
   351     008E                     	;# 
   352     0091                     	;# 
   353     0092                     	;# 
   354     0093                     	;# 
   355     0094                     	;# 
   356     0098                     	;# 
   357     0099                     	;# 
   358     009C                     	;# 
   359     009D                     	;# 
   360     009E                     	;# 
   361     009F                     	;# 
   362     010C                     	;# 
   363     010D                     	;# 
   364     010E                     	;# 
   365     010F                     	;# 
   366     018C                     	;# 
   367     018D                     	;# 
   368                           
   369                           	psect	idataBANK0
   370     0324                     __pidataBANK0:
   371                           
   372                           ;initializer for main@digit
   373     0324  343F               	retlw	63
   374     0325  3406               	retlw	6
   375     0326  345B               	retlw	91
   376     0327  344F               	retlw	79
   377     0328  3466               	retlw	102
   378     0329  346D               	retlw	109
   379     032A  347D               	retlw	125
   380     032B  3407               	retlw	7
   381     032C  347F               	retlw	127
   382     032D  346F               	retlw	111
   383     032E  3408               	retlw	8
   384     032F  3408               	retlw	8
   385                           
   386                           ;initializer for read_digital_keypad@once
   387     0330  3401               	retlw	1
   388                           
   389                           ;initializer for main@ssd
   390     0331  343F               	retlw	63
   391     0332  343F               	retlw	63
   392     0333  343F               	retlw	63
   393     0334  343F               	retlw	63
   394     0006                     _PORTB	set	6
   395     0013                     _SSPBUF	set	19
   396     0008                     _PORTD	set	8
   397     0005                     _PORTA	set	5
   398     00A5                     _SSPEN	set	165
   399     00A3                     _SSPM3	set	163
   400     0086                     _TRISB	set	134
   401     0091                     _SSPCON2	set	145
   402     0093                     _SSPADD	set	147
   403     0085                     _TRISA	set	133
   404     0088                     _TRISD	set	136
   405     048E                     _ACKSTAT	set	1166
   406     048C                     _ACKEN	set	1164
   407     048D                     _ACKDT	set	1165
   408     048B                     _RCEN	set	1163
   409     048A                     _PEN	set	1162
   410     0489                     _RSEN	set	1161
   411     0488                     _SEN	set	1160
   412     04A2                     _R_nW	set	1186
   413                           
   414                           	psect	cinit
   415     07E4                     start_initialization:	
   416                           ; #config settings
   417                           
   418     07E4                     __initialization:
   419                           
   420                           ; Initialize objects allocated to BANK0
   421     07E4  1383               	bcf	3,7	;select IRP bank0
   422     07E5  3052               	movlw	low (__pdataBANK0+17)
   423     07E6  00FD               	movwf	btemp+-1
   424     07E7  3003               	movlw	high __pidataBANK0
   425     07E8  00FE               	movwf	btemp
   426     07E9  3024               	movlw	low __pidataBANK0
   427     07EA  00FF               	movwf	btemp+1
   428     07EB  3041               	movlw	low __pdataBANK0
   429     07EC  0084               	movwf	4
   430     07ED  120A  118A  2339  120A  118A  	fcall	init_ram0
   431                           
   432                           ; Clear objects allocated to BANK0
   433     07F2  01D2               	clrf	__pbssBANK0& (0+127)
   434     07F3  01D3               	clrf	(__pbssBANK0+1)& (0+127)
   435     07F4  01D4               	clrf	(__pbssBANK0+2)& (0+127)
   436     07F5  01D5               	clrf	(__pbssBANK0+3)& (0+127)
   437     07F6  01D6               	clrf	(__pbssBANK0+4)& (0+127)
   438     07F7  01D7               	clrf	(__pbssBANK0+5)& (0+127)
   439     07F8  01D8               	clrf	(__pbssBANK0+6)& (0+127)
   440     07F9  01D9               	clrf	(__pbssBANK0+7)& (0+127)
   441     07FA  01DA               	clrf	(__pbssBANK0+8)& (0+127)
   442     07FB  01DB               	clrf	(__pbssBANK0+9)& (0+127)
   443     07FC                     end_of_initialization:	
   444                           ;End of C runtime variable initialization code
   445                           
   446     07FC                     __end_of__initialization:
   447     07FC  0183               	clrf	3
   448     07FD  120A  118A  2DA6   	ljmp	_main	;jump to C main() function
   449                           
   450                           	psect	bssBANK0
   451     0052                     __pbssBANK0:
   452     0052                     main@flag:
   453     0052                     	ds	4
   454     0056                     main@count:
   455     0056                     	ds	4
   456     005A                     _count:
   457     005A                     	ds	2
   458                           
   459                           	psect	dataBANK0
   460     0041                     __pdataBANK0:
   461     0041                     main@digit:
   462     0041                     	ds	12
   463     004D                     read_digital_keypad@once:
   464     004D                     	ds	1
   465     004E                     main@ssd:
   466     004E                     	ds	4
   467                           
   468                           	psect	inittext
   469     0335                     init_fetch0:	
   470                           ;	Called with low address in FSR and high address in W
   471                           
   472     0335  087E               	movf	btemp,w
   473     0336  008A               	movwf	10
   474     0337  087F               	movf	btemp+1,w
   475     0338  0082               	movwf	2
   476     0339                     init_ram0:	
   477                           ;Called with:
   478                           ;	high address of idata address in btemp 
   479                           ;	low address of idata address in btemp+1 
   480                           ;	low address of data in FSR
   481                           ;	high address + 1 of data in btemp-1
   482                           
   483     0339  120A  118A  2335  120A  118A  	fcall	init_fetch0
   484     033E  0080               	movwf	0
   485     033F  0A84               	incf	4,f
   486     0340  0804               	movf	4,w
   487     0341  067D               	xorwf	btemp+-1,w
   488     0342  1903               	btfsc	3,2
   489     0343  3400               	retlw	0
   490     0344  0AFF               	incf	btemp+1,f
   491     0345  1903               	btfsc	3,2
   492     0346  0AFE               	incf	btemp,f
   493     0347  2B39               	goto	init_ram0
   494                           
   495                           	psect	cstackCOMMON
   496     0070                     __pcstackCOMMON:
   497     0070                     ?_init_digital_keypad:
   498     0070                     ??_init_digital_keypad:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     ?_init_AT24C04:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     ?_read_digital_keypad:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0070                     ??_read_digital_keypad:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     ?_read_AT24C04:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_init_ssd:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ??_init_ssd:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ?_display:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ??_display:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_init_config:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ?_main:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_i2c_wait_for_idle:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ??_i2c_wait_for_idle:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?_i2c_start:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ??_i2c_start:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ?_i2c_rep_start:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ??_i2c_rep_start:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?_i2c_stop:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ??_i2c_stop:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_i2c_read:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ??_i2c_read:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ??_i2c_write:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_i2c_write:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?___llmod:	
   568                           ; 2 bytes @ 0x0
   569                           
   570     0070                     i2c_read@ack:	
   571                           ; 4 bytes @ 0x0
   572                           
   573     0070                     i2c_write@data:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ___llmod@divisor:	
   577                           ; 1 bytes @ 0x0
   578                           
   579                           
   580                           ; 4 bytes @ 0x0
   581     0070                     	ds	1
   582     0071                     i2c_read@data:
   583     0071                     read_digital_keypad@mode:	
   584                           ; 1 bytes @ 0x1
   585                           
   586                           
   587                           ; 1 bytes @ 0x1
   588     0071                     	ds	1
   589     0072                     ??_read_AT24C04:
   590     0072                     read_AT24C04@addr:	
   591                           ; 1 bytes @ 0x2
   592                           
   593                           
   594                           ; 1 bytes @ 0x2
   595     0072                     	ds	1
   596     0073                     read_AT24C04@data:
   597                           
   598                           ; 1 bytes @ 0x3
   599     0073                     	ds	1
   600     0074                     ?___wmul:
   601     0074                     ___wmul@multiplier:	
   602                           ; 2 bytes @ 0x4
   603                           
   604     0074                     display@wait:	
   605                           ; 2 bytes @ 0x4
   606                           
   607     0074                     ___llmod@dividend:	
   608                           ; 4 bytes @ 0x4
   609                           
   610                           
   611                           ; 4 bytes @ 0x4
   612     0074                     	ds	2
   613     0076                     ___wmul@multiplicand:
   614                           
   615                           ; 2 bytes @ 0x6
   616     0076                     	ds	2
   617     0078                     ??___wmul:
   618     0078                     ??___llmod:	
   619                           ; 1 bytes @ 0x8
   620                           
   621     0078                     display@data:	
   622                           ; 1 bytes @ 0x8
   623                           
   624     0078                     ___wmul@product:	
   625                           ; 1 bytes @ 0x8
   626                           
   627                           
   628                           ; 2 bytes @ 0x8
   629     0078                     	ds	1
   630     0079                     display@digit:
   631     0079                     ___llmod@counter:	
   632                           ; 1 bytes @ 0x9
   633                           
   634                           
   635                           ; 1 bytes @ 0x9
   636     0079                     	ds	1
   637     007A                     ??___lldiv:
   638                           
   639                           ; 1 bytes @ 0xA
   640     007A                     	ds	1
   641     007B                     ??_write_AT24C04:
   642     007B                     write_AT24C04@addr:	
   643                           ; 1 bytes @ 0xB
   644                           
   645                           
   646                           ; 1 bytes @ 0xB
   647     007B                     	ds	1
   648     007C                     ??_init_AT24C04:
   649     007C                     init_AT24C04@dummy:	
   650                           ; 1 bytes @ 0xC
   651                           
   652                           
   653                           ; 1 bytes @ 0xC
   654     007C                     	ds	1
   655     007D                     ??_init_config:
   656     007D                     main@key:	
   657                           ; 1 bytes @ 0xD
   658                           
   659                           
   660                           ; 1 bytes @ 0xD
   661     007D                     	ds	1
   662                           
   663                           	psect	cstackBANK0
   664     0020                     __pcstackBANK0:
   665     0020                     ?___lldiv:
   666     0020                     ___lldiv@divisor:	
   667                           ; 4 bytes @ 0x0
   668                           
   669                           
   670                           ; 4 bytes @ 0x0
   671     0020                     	ds	4
   672     0024                     ___lldiv@dividend:
   673                           
   674                           ; 4 bytes @ 0x4
   675     0024                     	ds	4
   676     0028                     ___lldiv@quotient:
   677                           
   678                           ; 4 bytes @ 0x8
   679     0028                     	ds	4
   680     002C                     ___lldiv@counter:
   681                           
   682                           ; 1 bytes @ 0xC
   683     002C                     	ds	1
   684     002D                     ?_init_i2c:
   685     002D                     ?_write_AT24C04:	
   686                           ; 1 bytes @ 0xD
   687                           
   688     002D                     write_AT24C04@data:	
   689                           ; 1 bytes @ 0xD
   690                           
   691     002D                     init_i2c@baud:	
   692                           ; 1 bytes @ 0xD
   693                           
   694                           
   695                           ; 4 bytes @ 0xD
   696     002D                     	ds	4
   697     0031                     ??_init_i2c:
   698                           
   699                           ; 1 bytes @ 0x11
   700     0031                     	ds	4
   701     0035                     ??_main:
   702                           
   703                           ; 1 bytes @ 0x15
   704     0035                     	ds	12
   705                           
   706                           	psect	maintext
   707     05A6                     __pmaintext:	
   708 ;;
   709 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   710 ;;
   711 ;; *************** function _main *****************
   712 ;; Defined at:
   713 ;;		line 26 in file "main.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  key             1   13[COMMON] unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : B00/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   727 ;;      Params:         0       0       0       0       0
   728 ;;      Locals:         1       0       0       0       0
   729 ;;      Temps:          0      12       0       0       0
   730 ;;      Totals:         1      12       0       0       0
   731 ;;Total ram usage:       13 bytes
   732 ;; Hardware stack levels required when called: 5
   733 ;; This function calls:
   734 ;;		___lldiv
   735 ;;		___llmod
   736 ;;		___wmul
   737 ;;		_display
   738 ;;		_init_config
   739 ;;		_read_AT24C04
   740 ;;		_read_digital_keypad
   741 ;;		_write_AT24C04
   742 ;; This function is called by:
   743 ;;		Startup code after reset
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747     05A6                     _main:	
   748                           ;psect for function _main
   749                           
   750     05A6                     l1133:	
   751                           ;incstack = 0
   752                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   753                           
   754                           
   755                           ;main.c: 28:                 if (count > 9)
   756     05A6  120A  118A  235D  120A  118A  	fcall	_init_config
   757     05AB                     l51:	
   758                           ;main.c: 29:                 {;main.c: 30:                     count = 0;;main.c: 31:   
      +                                        };main.c: 32: ;main.c: 33:             }
   759                           
   760                           
   761                           ;main.c: 34:             flag=0;;main.c: 35: 
   762     05AB  3001               	movlw	1
   763     05AC  120A  118A  2441  120A  118A  	fcall	_read_digital_keypad
   764     05B1  00FD               	movwf	main@key
   765     05B2                     l1135:
   766                           
   767                           ;main.c: 39:    ssd[0] = digit[count / 1000];
   768     05B2  303E               	movlw	62
   769     05B3  067D               	xorwf	main@key,w
   770     05B4  1D03               	btfss	3,2
   771     05B5  2DB7               	goto	u681
   772     05B6  2DB8               	goto	u680
   773     05B7                     u681:
   774     05B7  2E98               	goto	l1153
   775     05B8                     u680:
   776     05B8                     l1137:
   777                           
   778                           ;main.c: 40: ;main.c: 41: 
   779     05B8  1283               	bcf	3,5	;RP0=0, select bank0
   780     05B9  1303               	bcf	3,6	;RP1=0, select bank0
   781     05BA  0855               	movf	main@flag+3,w
   782     05BB  0454               	iorwf	main@flag+2,w
   783     05BC  0453               	iorwf	main@flag+1,w
   784     05BD  0452               	iorwf	main@flag,w
   785     05BE  1D03               	skipz
   786     05BF  2DC1               	goto	u691
   787     05C0  2DC2               	goto	u690
   788     05C1                     u691:
   789     05C1  2DEB               	goto	l53
   790     05C2                     u690:
   791     05C2                     l1139:
   792                           
   793                           ;main.c: 42:   };main.c: 43:         else if (key == 0x3D)
   794     05C2  3001               	movlw	1
   795     05C3  07D6               	addwf	main@count,f
   796     05C4  3000               	movlw	0
   797     05C5  1803               	skipnc
   798     05C6  3001               	movlw	1
   799     05C7  07D7               	addwf	main@count+1,f
   800     05C8  3000               	movlw	0
   801     05C9  1803               	skipnc
   802     05CA  3001               	movlw	1
   803     05CB  07D8               	addwf	main@count+2,f
   804     05CC  3000               	movlw	0
   805     05CD  1803               	skipnc
   806     05CE  3001               	movlw	1
   807     05CF  07D9               	addwf	main@count+3,f
   808     05D0                     l1141:
   809                           
   810                           ;main.c: 44:         {
   811     05D0  0859               	movf	main@count+3,w
   812     05D1  1D03               	btfss	3,2
   813     05D2  2DE1               	goto	u700
   814     05D3  0858               	movf	main@count+2,w
   815     05D4  1D03               	btfss	3,2
   816     05D5  2DE1               	goto	u700
   817     05D6  0857               	movf	main@count+1,w
   818     05D7  1D03               	btfss	3,2
   819     05D8  2DE1               	goto	u700
   820     05D9  300A               	movlw	10
   821     05DA  0256               	subwf	main@count,w
   822     05DB  1D03               	skipz
   823     05DC  2DDD               	goto	u703
   824     05DD                     u703:
   825     05DD  1C03               	btfss	3,0
   826     05DE  2DE0               	goto	u701
   827     05DF  2DE1               	goto	u700
   828     05E0                     u701:
   829     05E0  2DEB               	goto	l53
   830     05E1                     u700:
   831     05E1                     l1143:
   832                           
   833                           ;main.c: 45: ;main.c: 46:             write_AT24C04(0x04, (count % 10));
   834     05E1  3000               	movlw	0
   835     05E2  1283               	bcf	3,5	;RP0=0, select bank0
   836     05E3  1303               	bcf	3,6	;RP1=0, select bank0
   837     05E4  00D9               	movwf	main@count+3
   838     05E5  3000               	movlw	0
   839     05E6  00D8               	movwf	main@count+2
   840     05E7  3000               	movlw	0
   841     05E8  00D7               	movwf	main@count+1
   842     05E9  3000               	movlw	0
   843     05EA  00D6               	movwf	main@count
   844     05EB                     l53:	
   845                           ;main.c: 49:             write_AT24C04(0x01, (count / 1000));
   846                           
   847                           
   848                           ;main.c: 50:         }
   849     05EB  3000               	movlw	0
   850     05EC  1283               	bcf	3,5	;RP0=0, select bank0
   851     05ED  1303               	bcf	3,6	;RP1=0, select bank0
   852     05EE  00D5               	movwf	main@flag+3
   853     05EF  3000               	movlw	0
   854     05F0  00D4               	movwf	main@flag+2
   855     05F1  3000               	movlw	0
   856     05F2  00D3               	movwf	main@flag+1
   857     05F3  3000               	movlw	0
   858     05F4  00D2               	movwf	main@flag
   859     05F5                     l1145:
   860                           
   861                           ;main.c: 52: 
   862     05F5  3000               	movlw	0
   863     05F6  00F3               	movwf	___llmod@divisor+3
   864     05F7  3000               	movlw	0
   865     05F8  00F2               	movwf	___llmod@divisor+2
   866     05F9  3000               	movlw	0
   867     05FA  00F1               	movwf	___llmod@divisor+1
   868     05FB  300A               	movlw	10
   869     05FC  00F0               	movwf	___llmod@divisor
   870     05FD  0859               	movf	main@count+3,w
   871     05FE  00F7               	movwf	___llmod@dividend+3
   872     05FF  0858               	movf	main@count+2,w
   873     0600  00F6               	movwf	___llmod@dividend+2
   874     0601  0857               	movf	main@count+1,w
   875     0602  00F5               	movwf	___llmod@dividend+1
   876     0603  0856               	movf	main@count,w
   877     0604  00F4               	movwf	___llmod@dividend
   878     0605  120A  118A  2494  120A  118A  	fcall	___llmod
   879     060A  0870               	movf	?___llmod,w
   880     060B  3E41               	addlw	(low (main@digit| 0))& (0+255)
   881     060C  0084               	movwf	4
   882     060D  1383               	bcf	3,7	;select IRP bank0
   883     060E  0800               	movf	0,w
   884     060F  1283               	bcf	3,5	;RP0=0, select bank0
   885     0610  1303               	bcf	3,6	;RP1=0, select bank0
   886     0611  00D1               	movwf	main@ssd+3
   887     0612                     l1147:
   888                           
   889                           ;main.c: 53:   else if ( key == 0x11 )
   890     0612  3000               	movlw	0
   891     0613  00A3               	movwf	___lldiv@divisor+3
   892     0614  3000               	movlw	0
   893     0615  00A2               	movwf	___lldiv@divisor+2
   894     0616  3000               	movlw	0
   895     0617  00A1               	movwf	___lldiv@divisor+1
   896     0618  300A               	movlw	10
   897     0619  00A0               	movwf	___lldiv@divisor
   898     061A  0859               	movf	main@count+3,w
   899     061B  00F7               	movwf	___llmod@dividend+3
   900     061C  0858               	movf	main@count+2,w
   901     061D  00F6               	movwf	___llmod@dividend+2
   902     061E  0857               	movf	main@count+1,w
   903     061F  00F5               	movwf	___llmod@dividend+1
   904     0620  0856               	movf	main@count,w
   905     0621  00F4               	movwf	___llmod@dividend
   906     0622  3000               	movlw	0
   907     0623  00F3               	movwf	___llmod@divisor+3
   908     0624  3000               	movlw	0
   909     0625  00F2               	movwf	___llmod@divisor+2
   910     0626  3000               	movlw	0
   911     0627  00F1               	movwf	___llmod@divisor+1
   912     0628  3064               	movlw	100
   913     0629  00F0               	movwf	___llmod@divisor
   914     062A  120A  118A  2494  120A  118A  	fcall	___llmod
   915     062F  0873               	movf	?___llmod+3,w
   916     0630  1283               	bcf	3,5	;RP0=0, select bank0
   917     0631  1303               	bcf	3,6	;RP1=0, select bank0
   918     0632  00A7               	movwf	___lldiv@dividend+3
   919     0633  0872               	movf	?___llmod+2,w
   920     0634  00A6               	movwf	___lldiv@dividend+2
   921     0635  0871               	movf	?___llmod+1,w
   922     0636  00A5               	movwf	___lldiv@dividend+1
   923     0637  0870               	movf	?___llmod,w
   924     0638  00A4               	movwf	___lldiv@dividend
   925     0639  120A  118A  253E  120A  118A  	fcall	___lldiv
   926     063E  1283               	bcf	3,5	;RP0=0, select bank0
   927     063F  1303               	bcf	3,6	;RP1=0, select bank0
   928     0640  0820               	movf	?___lldiv,w
   929     0641  3E41               	addlw	(low (main@digit| 0))& (0+255)
   930     0642  0084               	movwf	4
   931     0643  1383               	bcf	3,7	;select IRP bank0
   932     0644  0800               	movf	0,w
   933     0645  00D0               	movwf	main@ssd+2
   934     0646                     l1149:
   935                           
   936                           ;main.c: 54:   {
   937     0646  3000               	movlw	0
   938     0647  00A3               	movwf	___lldiv@divisor+3
   939     0648  3000               	movlw	0
   940     0649  00A2               	movwf	___lldiv@divisor+2
   941     064A  3000               	movlw	0
   942     064B  00A1               	movwf	___lldiv@divisor+1
   943     064C  3064               	movlw	100
   944     064D  00A0               	movwf	___lldiv@divisor
   945     064E  0859               	movf	main@count+3,w
   946     064F  00F7               	movwf	___llmod@dividend+3
   947     0650  0858               	movf	main@count+2,w
   948     0651  00F6               	movwf	___llmod@dividend+2
   949     0652  0857               	movf	main@count+1,w
   950     0653  00F5               	movwf	___llmod@dividend+1
   951     0654  0856               	movf	main@count,w
   952     0655  00F4               	movwf	___llmod@dividend
   953     0656  3000               	movlw	0
   954     0657  00F3               	movwf	___llmod@divisor+3
   955     0658  3000               	movlw	0
   956     0659  00F2               	movwf	___llmod@divisor+2
   957     065A  3003               	movlw	3
   958     065B  00F1               	movwf	___llmod@divisor+1
   959     065C  30E8               	movlw	232
   960     065D  00F0               	movwf	___llmod@divisor
   961     065E  120A  118A  2494  120A  118A  	fcall	___llmod
   962     0663  0873               	movf	?___llmod+3,w
   963     0664  1283               	bcf	3,5	;RP0=0, select bank0
   964     0665  1303               	bcf	3,6	;RP1=0, select bank0
   965     0666  00A7               	movwf	___lldiv@dividend+3
   966     0667  0872               	movf	?___llmod+2,w
   967     0668  00A6               	movwf	___lldiv@dividend+2
   968     0669  0871               	movf	?___llmod+1,w
   969     066A  00A5               	movwf	___lldiv@dividend+1
   970     066B  0870               	movf	?___llmod,w
   971     066C  00A4               	movwf	___lldiv@dividend
   972     066D  120A  118A  253E  120A  118A  	fcall	___lldiv
   973     0672  1283               	bcf	3,5	;RP0=0, select bank0
   974     0673  1303               	bcf	3,6	;RP1=0, select bank0
   975     0674  0820               	movf	?___lldiv,w
   976     0675  3E41               	addlw	(low (main@digit| 0))& (0+255)
   977     0676  0084               	movwf	4
   978     0677  1383               	bcf	3,7	;select IRP bank0
   979     0678  0800               	movf	0,w
   980     0679  00CF               	movwf	main@ssd+1
   981     067A                     l1151:
   982                           
   983                           ;main.c: 55: 
   984     067A  3000               	movlw	0
   985     067B  00A3               	movwf	___lldiv@divisor+3
   986     067C  3000               	movlw	0
   987     067D  00A2               	movwf	___lldiv@divisor+2
   988     067E  3003               	movlw	3
   989     067F  00A1               	movwf	___lldiv@divisor+1
   990     0680  30E8               	movlw	232
   991     0681  00A0               	movwf	___lldiv@divisor
   992     0682  0859               	movf	main@count+3,w
   993     0683  00A7               	movwf	___lldiv@dividend+3
   994     0684  0858               	movf	main@count+2,w
   995     0685  00A6               	movwf	___lldiv@dividend+2
   996     0686  0857               	movf	main@count+1,w
   997     0687  00A5               	movwf	___lldiv@dividend+1
   998     0688  0856               	movf	main@count,w
   999     0689  00A4               	movwf	___lldiv@dividend
  1000     068A  120A  118A  253E  120A  118A  	fcall	___lldiv
  1001     068F  1283               	bcf	3,5	;RP0=0, select bank0
  1002     0690  1303               	bcf	3,6	;RP1=0, select bank0
  1003     0691  0820               	movf	?___lldiv,w
  1004     0692  3E41               	addlw	(low (main@digit| 0))& (0+255)
  1005     0693  0084               	movwf	4
  1006     0694  1383               	bcf	3,7	;select IRP bank0
  1007     0695  0800               	movf	0,w
  1008     0696  00CE               	movwf	main@ssd
  1009                           
  1010                           ;main.c: 58: 
  1011     0697  2FDA               	goto	l1171
  1012     0698                     l1153:
  1013     0698  303D               	movlw	61
  1014     0699  067D               	xorwf	main@key,w
  1015     069A  1D03               	btfss	3,2
  1016     069B  2E9D               	goto	u711
  1017     069C  2E9E               	goto	u710
  1018     069D                     u711:
  1019     069D  2F51               	goto	l1157
  1020     069E                     u710:
  1021     069E                     l1155:
  1022                           
  1023                           ;main.c: 60:    ssd[2] = 0x3F;;main.c: 62:    ssd[0] = 0x3F;
  1024     069E  3000               	movlw	0
  1025     069F  00F3               	movwf	___llmod@divisor+3
  1026     06A0  3000               	movlw	0
  1027     06A1  00F2               	movwf	___llmod@divisor+2
  1028     06A2  3000               	movlw	0
  1029     06A3  00F1               	movwf	___llmod@divisor+1
  1030     06A4  300A               	movlw	10
  1031     06A5  00F0               	movwf	___llmod@divisor
  1032     06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1033     06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1034     06A8  0859               	movf	main@count+3,w
  1035     06A9  00F7               	movwf	___llmod@dividend+3
  1036     06AA  0858               	movf	main@count+2,w
  1037     06AB  00F6               	movwf	___llmod@dividend+2
  1038     06AC  0857               	movf	main@count+1,w
  1039     06AD  00F5               	movwf	___llmod@dividend+1
  1040     06AE  0856               	movf	main@count,w
  1041     06AF  00F4               	movwf	___llmod@dividend
  1042     06B0  120A  118A  2494  120A  118A  	fcall	___llmod
  1043     06B5  0870               	movf	?___llmod,w
  1044     06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1045     06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1046     06B8  00AD               	movwf	write_AT24C04@data
  1047     06B9  3004               	movlw	4
  1048     06BA  120A  118A  237C  120A  118A  	fcall	_write_AT24C04
  1049                           
  1050                           ;main.c: 63: 
  1051     06BF  3000               	movlw	0
  1052     06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1053     06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1054     06C2  00A3               	movwf	___lldiv@divisor+3
  1055     06C3  3000               	movlw	0
  1056     06C4  00A2               	movwf	___lldiv@divisor+2
  1057     06C5  3000               	movlw	0
  1058     06C6  00A1               	movwf	___lldiv@divisor+1
  1059     06C7  300A               	movlw	10
  1060     06C8  00A0               	movwf	___lldiv@divisor
  1061     06C9  0859               	movf	main@count+3,w
  1062     06CA  00F7               	movwf	___llmod@dividend+3
  1063     06CB  0858               	movf	main@count+2,w
  1064     06CC  00F6               	movwf	___llmod@dividend+2
  1065     06CD  0857               	movf	main@count+1,w
  1066     06CE  00F5               	movwf	___llmod@dividend+1
  1067     06CF  0856               	movf	main@count,w
  1068     06D0  00F4               	movwf	___llmod@dividend
  1069     06D1  3000               	movlw	0
  1070     06D2  00F3               	movwf	___llmod@divisor+3
  1071     06D3  3000               	movlw	0
  1072     06D4  00F2               	movwf	___llmod@divisor+2
  1073     06D5  3000               	movlw	0
  1074     06D6  00F1               	movwf	___llmod@divisor+1
  1075     06D7  3064               	movlw	100
  1076     06D8  00F0               	movwf	___llmod@divisor
  1077     06D9  120A  118A  2494  120A  118A  	fcall	___llmod
  1078     06DE  0873               	movf	?___llmod+3,w
  1079     06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1080     06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1081     06E1  00A7               	movwf	___lldiv@dividend+3
  1082     06E2  0872               	movf	?___llmod+2,w
  1083     06E3  00A6               	movwf	___lldiv@dividend+2
  1084     06E4  0871               	movf	?___llmod+1,w
  1085     06E5  00A5               	movwf	___lldiv@dividend+1
  1086     06E6  0870               	movf	?___llmod,w
  1087     06E7  00A4               	movwf	___lldiv@dividend
  1088     06E8  120A  118A  253E  120A  118A  	fcall	___lldiv
  1089     06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1090     06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1091     06EF  0820               	movf	?___lldiv,w
  1092     06F0  00AD               	movwf	write_AT24C04@data
  1093     06F1  3003               	movlw	3
  1094     06F2  120A  118A  237C  120A  118A  	fcall	_write_AT24C04
  1095                           
  1096                           ;main.c: 64:   }
  1097     06F7  3000               	movlw	0
  1098     06F8  1283               	bcf	3,5	;RP0=0, select bank0
  1099     06F9  1303               	bcf	3,6	;RP1=0, select bank0
  1100     06FA  00A3               	movwf	___lldiv@divisor+3
  1101     06FB  3000               	movlw	0
  1102     06FC  00A2               	movwf	___lldiv@divisor+2
  1103     06FD  3000               	movlw	0
  1104     06FE  00A1               	movwf	___lldiv@divisor+1
  1105     06FF  3064               	movlw	100
  1106     0700  00A0               	movwf	___lldiv@divisor
  1107     0701  0859               	movf	main@count+3,w
  1108     0702  00F7               	movwf	___llmod@dividend+3
  1109     0703  0858               	movf	main@count+2,w
  1110     0704  00F6               	movwf	___llmod@dividend+2
  1111     0705  0857               	movf	main@count+1,w
  1112     0706  00F5               	movwf	___llmod@dividend+1
  1113     0707  0856               	movf	main@count,w
  1114     0708  00F4               	movwf	___llmod@dividend
  1115     0709  3000               	movlw	0
  1116     070A  00F3               	movwf	___llmod@divisor+3
  1117     070B  3000               	movlw	0
  1118     070C  00F2               	movwf	___llmod@divisor+2
  1119     070D  3003               	movlw	3
  1120     070E  00F1               	movwf	___llmod@divisor+1
  1121     070F  30E8               	movlw	232
  1122     0710  00F0               	movwf	___llmod@divisor
  1123     0711  120A  118A  2494  120A  118A  	fcall	___llmod
  1124     0716  0873               	movf	?___llmod+3,w
  1125     0717  1283               	bcf	3,5	;RP0=0, select bank0
  1126     0718  1303               	bcf	3,6	;RP1=0, select bank0
  1127     0719  00A7               	movwf	___lldiv@dividend+3
  1128     071A  0872               	movf	?___llmod+2,w
  1129     071B  00A6               	movwf	___lldiv@dividend+2
  1130     071C  0871               	movf	?___llmod+1,w
  1131     071D  00A5               	movwf	___lldiv@dividend+1
  1132     071E  0870               	movf	?___llmod,w
  1133     071F  00A4               	movwf	___lldiv@dividend
  1134     0720  120A  118A  253E  120A  118A  	fcall	___lldiv
  1135     0725  1283               	bcf	3,5	;RP0=0, select bank0
  1136     0726  1303               	bcf	3,6	;RP1=0, select bank0
  1137     0727  0820               	movf	?___lldiv,w
  1138     0728  00AD               	movwf	write_AT24C04@data
  1139     0729  3002               	movlw	2
  1140     072A  120A  118A  237C  120A  118A  	fcall	_write_AT24C04
  1141                           
  1142                           ;main.c: 65: 
  1143     072F  3000               	movlw	0
  1144     0730  1283               	bcf	3,5	;RP0=0, select bank0
  1145     0731  1303               	bcf	3,6	;RP1=0, select bank0
  1146     0732  00A3               	movwf	___lldiv@divisor+3
  1147     0733  3000               	movlw	0
  1148     0734  00A2               	movwf	___lldiv@divisor+2
  1149     0735  3003               	movlw	3
  1150     0736  00A1               	movwf	___lldiv@divisor+1
  1151     0737  30E8               	movlw	232
  1152     0738  00A0               	movwf	___lldiv@divisor
  1153     0739  0859               	movf	main@count+3,w
  1154     073A  00A7               	movwf	___lldiv@dividend+3
  1155     073B  0858               	movf	main@count+2,w
  1156     073C  00A6               	movwf	___lldiv@dividend+2
  1157     073D  0857               	movf	main@count+1,w
  1158     073E  00A5               	movwf	___lldiv@dividend+1
  1159     073F  0856               	movf	main@count,w
  1160     0740  00A4               	movwf	___lldiv@dividend
  1161     0741  120A  118A  253E  120A  118A  	fcall	___lldiv
  1162     0746  1283               	bcf	3,5	;RP0=0, select bank0
  1163     0747  1303               	bcf	3,6	;RP1=0, select bank0
  1164     0748  0820               	movf	?___lldiv,w
  1165     0749  00AD               	movwf	write_AT24C04@data
  1166     074A  3001               	movlw	1
  1167     074B  120A  118A  237C  120A  118A  	fcall	_write_AT24C04
  1168                           
  1169                           ;main.c: 66:         display(ssd);
  1170     0750  2FDA               	goto	l1171
  1171     0751                     l1157:
  1172     0751  3011               	movlw	17
  1173     0752  067D               	xorwf	main@key,w
  1174     0753  1D03               	btfss	3,2
  1175     0754  2F56               	goto	u721
  1176     0755  2F57               	goto	u720
  1177     0756                     u721:
  1178     0756  2FDA               	goto	l1171
  1179     0757                     u720:
  1180     0757                     l1159:
  1181     0757  3001               	movlw	1
  1182     0758  120A  118A  23E2  120A  118A  	fcall	_read_AT24C04
  1183     075D  1283               	bcf	3,5	;RP0=0, select bank0
  1184     075E  1303               	bcf	3,6	;RP1=0, select bank0
  1185     075F  00B5               	movwf	??_main
  1186     0760  01B6               	clrf	??_main+1
  1187     0761  0835               	movf	??_main,w
  1188     0762  00F4               	movwf	___wmul@multiplier
  1189     0763  0836               	movf	??_main+1,w
  1190     0764  00F5               	movwf	___wmul@multiplier+1
  1191     0765  30E8               	movlw	232
  1192     0766  00F6               	movwf	___wmul@multiplicand
  1193     0767  3003               	movlw	3
  1194     0768  00F7               	movwf	___wmul@multiplicand+1
  1195     0769  120A  118A  23BD  120A  118A  	fcall	___wmul
  1196     076E  0874               	movf	?___wmul,w
  1197     076F  1283               	bcf	3,5	;RP0=0, select bank0
  1198     0770  1303               	bcf	3,6	;RP1=0, select bank0
  1199     0771  00B7               	movwf	??_main+2
  1200     0772  0875               	movf	?___wmul+1,w
  1201     0773  00B8               	movwf	??_main+3
  1202     0774  3002               	movlw	2
  1203     0775  120A  118A  23E2  120A  118A  	fcall	_read_AT24C04
  1204     077A  1283               	bcf	3,5	;RP0=0, select bank0
  1205     077B  1303               	bcf	3,6	;RP1=0, select bank0
  1206     077C  00B9               	movwf	??_main+4
  1207     077D  01BA               	clrf	??_main+5
  1208     077E  0839               	movf	??_main+4,w
  1209     077F  00F4               	movwf	___wmul@multiplier
  1210     0780  083A               	movf	??_main+5,w
  1211     0781  00F5               	movwf	___wmul@multiplier+1
  1212     0782  3064               	movlw	100
  1213     0783  00F6               	movwf	___wmul@multiplicand
  1214     0784  3000               	movlw	0
  1215     0785  00F7               	movwf	___wmul@multiplicand+1
  1216     0786  120A  118A  23BD  120A  118A  	fcall	___wmul
  1217     078B  0874               	movf	?___wmul,w
  1218     078C  1283               	bcf	3,5	;RP0=0, select bank0
  1219     078D  1303               	bcf	3,6	;RP1=0, select bank0
  1220     078E  0737               	addwf	??_main+2,w
  1221     078F  00BB               	movwf	??_main+6
  1222     0790  0875               	movf	?___wmul+1,w
  1223     0791  1803               	skipnc
  1224     0792  0A75               	incf	?___wmul+1,w
  1225     0793  0738               	addwf	??_main+3,w
  1226     0794  00BC               	movwf	??_main+7
  1227     0795  3003               	movlw	3
  1228     0796  120A  118A  23E2  120A  118A  	fcall	_read_AT24C04
  1229     079B  1283               	bcf	3,5	;RP0=0, select bank0
  1230     079C  1303               	bcf	3,6	;RP1=0, select bank0
  1231     079D  00BD               	movwf	??_main+8
  1232     079E  01BE               	clrf	??_main+9
  1233     079F  083D               	movf	??_main+8,w
  1234     07A0  00F4               	movwf	___wmul@multiplier
  1235     07A1  083E               	movf	??_main+9,w
  1236     07A2  00F5               	movwf	___wmul@multiplier+1
  1237     07A3  300A               	movlw	10
  1238     07A4  00F6               	movwf	___wmul@multiplicand
  1239     07A5  3000               	movlw	0
  1240     07A6  00F7               	movwf	___wmul@multiplicand+1
  1241     07A7  120A  118A  23BD  120A  118A  	fcall	___wmul
  1242     07AC  0874               	movf	?___wmul,w
  1243     07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1244     07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1245     07AF  073B               	addwf	??_main+6,w
  1246     07B0  00BF               	movwf	??_main+10
  1247     07B1  0875               	movf	?___wmul+1,w
  1248     07B2  1803               	skipnc
  1249     07B3  0A75               	incf	?___wmul+1,w
  1250     07B4  073C               	addwf	??_main+7,w
  1251     07B5  00C0               	movwf	??_main+11
  1252     07B6  3004               	movlw	4
  1253     07B7  120A  118A  23E2  120A  118A  	fcall	_read_AT24C04
  1254     07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1255     07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1256     07BE  073F               	addwf	??_main+10,w
  1257     07BF  00D6               	movwf	main@count
  1258     07C0  3000               	movlw	0
  1259     07C1  1803               	skipnc
  1260     07C2  3001               	movlw	1
  1261     07C3  0740               	addwf	??_main+11,w
  1262     07C4  00D7               	movwf	main@count+1
  1263     07C5  01D8               	clrf	main@count+2
  1264     07C6  1BD7               	btfsc	main@count+1,7
  1265     07C7  03D8               	decf	main@count+2,f
  1266     07C8  0858               	movf	main@count+2,w
  1267     07C9  00D9               	movwf	main@count+3
  1268     07CA                     l1161:
  1269     07CA  3000               	movlw	0
  1270     07CB  00D5               	movwf	main@flag+3
  1271     07CC  3000               	movlw	0
  1272     07CD  00D4               	movwf	main@flag+2
  1273     07CE  3000               	movlw	0
  1274     07CF  00D3               	movwf	main@flag+1
  1275     07D0  3001               	movlw	1
  1276     07D1  00D2               	movwf	main@flag
  1277     07D2                     l1163:
  1278     07D2  303F               	movlw	63
  1279     07D3  00D1               	movwf	main@ssd+3
  1280     07D4                     l1165:
  1281     07D4  303F               	movlw	63
  1282     07D5  00D0               	movwf	main@ssd+2
  1283     07D6                     l1167:
  1284     07D6  303F               	movlw	63
  1285     07D7  00CF               	movwf	main@ssd+1
  1286     07D8                     l1169:
  1287     07D8  303F               	movlw	63
  1288     07D9  00CE               	movwf	main@ssd
  1289     07DA                     l1171:
  1290     07DA  304E               	movlw	(low (main@ssd| 0))& (0+255)
  1291     07DB  120A  118A  24E8  120A  118A  	fcall	_display
  1292     07E0  2DAB               	goto	l51
  1293     07E1  120A  118A  2800   	ljmp	start
  1294     07E4                     __end_of_main:
  1295                           
  1296                           	psect	text1
  1297     0441                     __ptext1:	
  1298 ;; *************** function _read_digital_keypad *****************
  1299 ;; Defined at:
  1300 ;;		line 19 in file "digital_keypad.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  mode            1    wreg     unsigned char 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  mode            1    1[COMMON] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      unsigned char 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0, btemp+1
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1314 ;;      Params:         0       0       0       0       0
  1315 ;;      Locals:         1       0       0       0       0
  1316 ;;      Temps:          1       0       0       0       0
  1317 ;;      Totals:         2       0       0       0       0
  1318 ;;Total ram usage:        2 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327     0441                     _read_digital_keypad:	
  1328                           ;psect for function _read_digital_keypad
  1329                           
  1330                           
  1331                           ;incstack = 0
  1332                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0+btemp+1]
  1333                           ;read_digital_keypad@mode stored from wreg
  1334     0441  00F1               	movwf	read_digital_keypad@mode
  1335     0442                     l1053:
  1336                           
  1337                           ;digital_keypad.c: 19: unsigned char read_digital_keypad(unsigned char mode);digital_key
      +                          pad.c: 20: {;digital_keypad.c: 21:     static unsigned char once = 1;;digital_keypad.c: 
      +                          23:     if (mode == 0)
  1338     0442  0871               	movf	read_digital_keypad@mode,w
  1339     0443  1D03               	btfss	3,2
  1340     0444  2C46               	goto	u521
  1341     0445  2C47               	goto	u520
  1342     0446                     u521:
  1343     0446  2C4C               	goto	l1061
  1344     0447                     u520:
  1345     0447                     l1055:
  1346                           
  1347                           ;digital_keypad.c: 24:     {;digital_keypad.c: 26:         return PORTB & 0x3F;
  1348     0447  1283               	bcf	3,5	;RP0=0, select bank0
  1349     0448  1303               	bcf	3,6	;RP1=0, select bank0
  1350     0449  0806               	movf	6,w	;volatile
  1351     044A  393F               	andlw	63
  1352     044B  2C93               	goto	l128
  1353     044C                     l1061:
  1354                           
  1355                           ;digital_keypad.c: 29:     {;digital_keypad.c: 30:         count++;
  1356     044C  3001               	movlw	1
  1357     044D  1283               	bcf	3,5	;RP0=0, select bank0
  1358     044E  1303               	bcf	3,6	;RP1=0, select bank0
  1359     044F  07DA               	addwf	_count,f
  1360     0450  1803               	skipnc
  1361     0451  0ADB               	incf	_count+1,f
  1362     0452  3000               	movlw	0
  1363     0453  07DB               	addwf	_count+1,f
  1364     0454                     l1063:
  1365                           
  1366                           ;digital_keypad.c: 31:         if (((PORTB & 0x3F) != 0x3F) && once)
  1367     0454  303F               	movlw	63
  1368     0455  0506               	andwf	6,w	;volatile
  1369     0456  00F0               	movwf	??_read_digital_keypad
  1370     0457  303F               	movlw	63
  1371     0458  0670               	xorwf	??_read_digital_keypad,w
  1372     0459  1903               	btfsc	3,2
  1373     045A  2C5C               	goto	u531
  1374     045B  2C5D               	goto	u530
  1375     045C                     u531:
  1376     045C  2C66               	goto	l1075
  1377     045D                     u530:
  1378     045D                     l1065:
  1379     045D  084D               	movf	read_digital_keypad@once,w
  1380     045E  1903               	btfsc	3,2
  1381     045F  2C61               	goto	u541
  1382     0460  2C62               	goto	u540
  1383     0461                     u541:
  1384     0461  2C66               	goto	l1075
  1385     0462                     u540:
  1386     0462                     l1067:
  1387                           
  1388                           ;digital_keypad.c: 32:         {;digital_keypad.c: 33:             once = 0;
  1389     0462  01CD               	clrf	read_digital_keypad@once
  1390                           
  1391                           ;digital_keypad.c: 34:             count =0;
  1392     0463  01DA               	clrf	_count
  1393     0464  01DB               	clrf	_count+1
  1394     0465  2C47               	goto	l1055
  1395     0466                     l1075:
  1396     0466  303F               	movlw	63
  1397     0467  0506               	andwf	6,w	;volatile
  1398     0468  00F0               	movwf	??_read_digital_keypad
  1399     0469  303E               	movlw	62
  1400     046A  0670               	xorwf	??_read_digital_keypad,w
  1401     046B  1D03               	btfss	3,2
  1402     046C  2C6E               	goto	u551
  1403     046D  2C6F               	goto	u550
  1404     046E                     u551:
  1405     046E  2C82               	goto	l1087
  1406     046F                     u550:
  1407     046F                     l1077:
  1408     046F  085B               	movf	_count+1,w
  1409     0470  3A80               	xorlw	128
  1410     0471  00FF               	movwf	btemp+1
  1411     0472  3080               	movlw	128
  1412     0473  027F               	subwf	btemp+1,w
  1413     0474  1D03               	skipz
  1414     0475  2C78               	goto	u565
  1415     0476  3033               	movlw	51
  1416     0477  025A               	subwf	_count,w
  1417     0478                     u565:
  1418     0478  1C03               	skipc
  1419     0479  2C7B               	goto	u561
  1420     047A  2C7C               	goto	u560
  1421     047B                     u561:
  1422     047B  2C82               	goto	l1087
  1423     047C                     u560:
  1424     047C                     l1079:
  1425                           
  1426                           ;digital_keypad.c: 39:         {;digital_keypad.c: 40:             count = 0;
  1427     047C  1283               	bcf	3,5	;RP0=0, select bank0
  1428     047D  1303               	bcf	3,6	;RP1=0, select bank0
  1429     047E  01DA               	clrf	_count
  1430     047F  01DB               	clrf	_count+1
  1431     0480                     l1081:
  1432                           
  1433                           ;digital_keypad.c: 41:             return 0x11;
  1434     0480  3011               	movlw	17
  1435     0481  2C93               	goto	l128
  1436     0482                     l1087:
  1437     0482  303F               	movlw	63
  1438     0483  1283               	bcf	3,5	;RP0=0, select bank0
  1439     0484  1303               	bcf	3,6	;RP1=0, select bank0
  1440     0485  0506               	andwf	6,w	;volatile
  1441     0486  00F0               	movwf	??_read_digital_keypad
  1442     0487  303F               	movlw	63
  1443     0488  0670               	xorwf	??_read_digital_keypad,w
  1444     0489  1D03               	btfss	3,2
  1445     048A  2C8C               	goto	u571
  1446     048B  2C8D               	goto	u570
  1447     048C                     u571:
  1448     048C  2C92               	goto	l131
  1449     048D                     u570:
  1450     048D                     l1089:
  1451                           
  1452                           ;digital_keypad.c: 44:         {;digital_keypad.c: 45:             count = 0;
  1453     048D  01DA               	clrf	_count
  1454     048E  01DB               	clrf	_count+1
  1455     048F                     l1091:
  1456                           
  1457                           ;digital_keypad.c: 46:             once = 1;
  1458     048F  01CD               	clrf	read_digital_keypad@once
  1459     0490  0ACD               	incf	read_digital_keypad@once,f
  1460     0491  2C92               	goto	l1093
  1461     0492                     l131:
  1462     0492                     l1093:
  1463                           
  1464                           ;digital_keypad.c: 51:     return 0x3F;
  1465     0492  303F               	movlw	63
  1466     0493                     l128:
  1467     0493  0008               	return
  1468     0494                     __end_of_read_digital_keypad:
  1469                           
  1470                           	psect	text2
  1471     035D                     __ptext2:	
  1472 ;; *************** function _init_config *****************
  1473 ;; Defined at:
  1474 ;;		line 17 in file "main.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 4
  1495 ;; This function calls:
  1496 ;;		_init_AT24C04
  1497 ;;		_init_digital_keypad
  1498 ;;		_init_i2c
  1499 ;;		_init_ssd
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505     035D                     _init_config:	
  1506                           ;psect for function _init_config
  1507                           
  1508     035D                     l1047:	
  1509                           ;incstack = 0
  1510                           ; Regs used in _init_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1511                           
  1512                           
  1513                           ;main.c: 19:   key = read_digital_keypad(1);
  1514     035D  120A  118A  230B  120A  118A  	fcall	_init_ssd
  1515                           
  1516                           ;main.c: 20: 
  1517     0362  120A  118A  22DF  120A  118A  	fcall	_init_digital_keypad
  1518     0367                     l1049:
  1519                           
  1520                           ;main.c: 21: 
  1521     0367  3000               	movlw	0
  1522     0368  1283               	bcf	3,5	;RP0=0, select bank0
  1523     0369  1303               	bcf	3,6	;RP1=0, select bank0
  1524     036A  00B0               	movwf	init_i2c@baud+3
  1525     036B  3001               	movlw	1
  1526     036C  00AF               	movwf	init_i2c@baud+2
  1527     036D  3086               	movlw	134
  1528     036E  00AE               	movwf	init_i2c@baud+1
  1529     036F  30A0               	movlw	160
  1530     0370  00AD               	movwf	init_i2c@baud
  1531     0371  120A  118A  240D  120A  118A  	fcall	_init_i2c
  1532     0376                     l1051:
  1533                           
  1534                           ;main.c: 22: 
  1535     0376  120A  118A  2348  120A  118A  	fcall	_init_AT24C04
  1536     037B                     l38:
  1537     037B  0008               	return
  1538     037C                     __end_of_init_config:
  1539                           
  1540                           	psect	text3
  1541     030B                     __ptext3:	
  1542 ;; *************** function _init_ssd *****************
  1543 ;; Defined at:
  1544 ;;		line 12 in file "ssd.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         0       0       0       0       0
  1559 ;;      Locals:         0       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0
  1561 ;;      Totals:         0       0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_init_config
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571     030B                     _init_ssd:	
  1572                           ;psect for function _init_ssd
  1573                           
  1574     030B                     l1009:	
  1575                           ;incstack = 0
  1576                           ; Regs used in _init_ssd: [wreg+status,2]
  1577                           
  1578                           
  1579                           ;ssd.c: 15:     TRISD = 0x00;
  1580     030B  1683               	bsf	3,5	;RP0=1, select bank1
  1581     030C  1303               	bcf	3,6	;RP1=0, select bank1
  1582     030D  0188               	clrf	8	;volatile
  1583     030E                     l1011:
  1584                           
  1585                           ;ssd.c: 18:     TRISA = TRISA & 0x03;
  1586     030E  0805               	movf	5,w	;volatile
  1587     030F  3903               	andlw	3
  1588     0310  0085               	movwf	5	;volatile
  1589     0311                     l1013:
  1590                           
  1591                           ;ssd.c: 20:     PORTA = PORTA & 0x03;
  1592     0311  1283               	bcf	3,5	;RP0=0, select bank0
  1593     0312  1303               	bcf	3,6	;RP1=0, select bank0
  1594     0313  0805               	movf	5,w	;volatile
  1595     0314  3903               	andlw	3
  1596     0315  0085               	movwf	5	;volatile
  1597     0316                     l11:
  1598     0316  0008               	return
  1599     0317                     __end_of_init_ssd:
  1600                           
  1601                           	psect	text4
  1602     040D                     __ptext4:	
  1603 ;; *************** function _init_i2c *****************
  1604 ;; Defined at:
  1605 ;;		line 12 in file "i2c.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  baud            4   13[BANK0 ] unsigned long 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       4       0       0       0
  1620 ;;      Locals:         0       0       0       0       0
  1621 ;;      Temps:          0       4       0       0       0
  1622 ;;      Totals:         0       8       0       0       0
  1623 ;;Total ram usage:        8 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 1
  1626 ;; This function calls:
  1627 ;;		___lldiv
  1628 ;; This function is called by:
  1629 ;;		_init_config
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633     040D                     _init_i2c:	
  1634                           ;psect for function _init_i2c
  1635                           
  1636     040D                     l1017:	
  1637                           ;incstack = 0
  1638                           ; Regs used in _init_i2c: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1639                           
  1640                           
  1641                           ;i2c.c: 12: void init_i2c(unsigned long baud);i2c.c: 13: {;i2c.c: 15:     SSPM3 = 1;
  1642     040D  1283               	bcf	3,5	;RP0=0, select bank0
  1643     040E  1303               	bcf	3,6	;RP1=0, select bank0
  1644     040F  1594               	bsf	20,3	;volatile
  1645     0410                     l1019:
  1646                           
  1647                           ;i2c.c: 18:     SSPADD = (20000000 / (4 * baud)) - 1;
  1648     0410  082D               	movf	init_i2c@baud,w
  1649     0411  00B1               	movwf	??_init_i2c
  1650     0412  082E               	movf	init_i2c@baud+1,w
  1651     0413  00B2               	movwf	??_init_i2c+1
  1652     0414  082F               	movf	init_i2c@baud+2,w
  1653     0415  00B3               	movwf	??_init_i2c+2
  1654     0416  0830               	movf	init_i2c@baud+3,w
  1655     0417  00B4               	movwf	??_init_i2c+3
  1656     0418  3002               	movlw	2
  1657     0419                     u475:
  1658     0419  1003               	clrc
  1659     041A  0DB1               	rlf	??_init_i2c,f
  1660     041B  0DB2               	rlf	??_init_i2c+1,f
  1661     041C  0DB3               	rlf	??_init_i2c+2,f
  1662     041D  0DB4               	rlf	??_init_i2c+3,f
  1663     041E                     u470:
  1664     041E  3EFF               	addlw	-1
  1665     041F  1D03               	skipz
  1666     0420  2C19               	goto	u475
  1667     0421  0834               	movf	??_init_i2c+3,w
  1668     0422  00A3               	movwf	___lldiv@divisor+3
  1669     0423  0833               	movf	??_init_i2c+2,w
  1670     0424  00A2               	movwf	___lldiv@divisor+2
  1671     0425  0832               	movf	??_init_i2c+1,w
  1672     0426  00A1               	movwf	___lldiv@divisor+1
  1673     0427  0831               	movf	??_init_i2c,w
  1674     0428  00A0               	movwf	___lldiv@divisor
  1675     0429  3001               	movlw	1
  1676     042A  00A7               	movwf	___lldiv@dividend+3
  1677     042B  3031               	movlw	49
  1678     042C  00A6               	movwf	___lldiv@dividend+2
  1679     042D  302D               	movlw	45
  1680     042E  00A5               	movwf	___lldiv@dividend+1
  1681     042F  3000               	movlw	0
  1682     0430  00A4               	movwf	___lldiv@dividend
  1683     0431  120A  118A  253E  120A  118A  	fcall	___lldiv
  1684     0436  1283               	bcf	3,5	;RP0=0, select bank0
  1685     0437  1303               	bcf	3,6	;RP1=0, select bank0
  1686     0438  0820               	movf	?___lldiv,w
  1687     0439  3EFF               	addlw	255
  1688     043A  1683               	bsf	3,5	;RP0=1, select bank1
  1689     043B  1303               	bcf	3,6	;RP1=0, select bank1
  1690     043C  0093               	movwf	19	;volatile
  1691     043D                     l1021:
  1692                           
  1693                           ;i2c.c: 21:     SSPEN = 1;
  1694     043D  1283               	bcf	3,5	;RP0=0, select bank0
  1695     043E  1303               	bcf	3,6	;RP1=0, select bank0
  1696     043F  1694               	bsf	20,5	;volatile
  1697     0440                     l90:
  1698     0440  0008               	return
  1699     0441                     __end_of_init_i2c:
  1700                           
  1701                           	psect	text5
  1702     053E                     __ptext5:	
  1703 ;; *************** function ___lldiv *****************
  1704 ;; Defined at:
  1705 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  divisor         4    0[BANK0 ] unsigned long 
  1708 ;;  dividend        4    4[BANK0 ] unsigned long 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  quotient        4    8[BANK0 ] unsigned long 
  1711 ;;  counter         1   12[BANK0 ] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  4    0[BANK0 ] unsigned long 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, btemp+1
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1721 ;;      Params:         0       8       0       0       0
  1722 ;;      Locals:         0       5       0       0       0
  1723 ;;      Temps:          1       0       0       0       0
  1724 ;;      Totals:         1      13       0       0       0
  1725 ;;Total ram usage:       14 bytes
  1726 ;; Hardware stack levels used: 1
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;;		_init_i2c
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735     053E                     ___lldiv:	
  1736                           ;psect for function ___lldiv
  1737                           
  1738     053E                     l983:	
  1739                           ;incstack = 0
  1740                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1741                           
  1742     053E  3000               	movlw	0
  1743     053F  1283               	bcf	3,5	;RP0=0, select bank0
  1744     0540  1303               	bcf	3,6	;RP1=0, select bank0
  1745     0541  00AB               	movwf	___lldiv@quotient+3
  1746     0542  3000               	movlw	0
  1747     0543  00AA               	movwf	___lldiv@quotient+2
  1748     0544  3000               	movlw	0
  1749     0545  00A9               	movwf	___lldiv@quotient+1
  1750     0546  3000               	movlw	0
  1751     0547  00A8               	movwf	___lldiv@quotient
  1752     0548  0823               	movf	___lldiv@divisor+3,w
  1753     0549  0422               	iorwf	___lldiv@divisor+2,w
  1754     054A  0421               	iorwf	___lldiv@divisor+1,w
  1755     054B  0420               	iorwf	___lldiv@divisor,w
  1756     054C  1903               	skipnz
  1757     054D  2D4F               	goto	u401
  1758     054E  2D50               	goto	u400
  1759     054F                     u401:
  1760     054F  2D9D               	goto	l1005
  1761     0550                     u400:
  1762     0550                     l985:
  1763     0550  01AC               	clrf	___lldiv@counter
  1764     0551  0AAC               	incf	___lldiv@counter,f
  1765     0552  2D60               	goto	l991
  1766     0553                     l987:
  1767     0553  3001               	movlw	1
  1768     0554  00FA               	movwf	??___lldiv
  1769     0555                     u415:
  1770     0555  1003               	clrc
  1771     0556  0DA0               	rlf	___lldiv@divisor,f
  1772     0557  0DA1               	rlf	___lldiv@divisor+1,f
  1773     0558  0DA2               	rlf	___lldiv@divisor+2,f
  1774     0559  0DA3               	rlf	___lldiv@divisor+3,f
  1775     055A  0BFA               	decfsz	??___lldiv,f
  1776     055B  2D55               	goto	u415
  1777     055C                     l989:
  1778     055C  3001               	movlw	1
  1779     055D  00FF               	movwf	btemp+1
  1780     055E  087F               	movf	btemp+1,w
  1781     055F  07AC               	addwf	___lldiv@counter,f
  1782     0560                     l991:
  1783     0560  1FA3               	btfss	___lldiv@divisor+3,7
  1784     0561  2D63               	goto	u421
  1785     0562  2D64               	goto	u420
  1786     0563                     u421:
  1787     0563  2D53               	goto	l987
  1788     0564                     u420:
  1789     0564                     l993:
  1790     0564  3001               	movlw	1
  1791     0565  00FA               	movwf	??___lldiv
  1792     0566                     u435:
  1793     0566  1003               	clrc
  1794     0567  0DA8               	rlf	___lldiv@quotient,f
  1795     0568  0DA9               	rlf	___lldiv@quotient+1,f
  1796     0569  0DAA               	rlf	___lldiv@quotient+2,f
  1797     056A  0DAB               	rlf	___lldiv@quotient+3,f
  1798     056B  0BFA               	decfsz	??___lldiv,f
  1799     056C  2D66               	goto	u435
  1800     056D                     l995:
  1801     056D  0823               	movf	___lldiv@divisor+3,w
  1802     056E  0227               	subwf	___lldiv@dividend+3,w
  1803     056F  1D03               	skipz
  1804     0570  2D7B               	goto	u445
  1805     0571  0822               	movf	___lldiv@divisor+2,w
  1806     0572  0226               	subwf	___lldiv@dividend+2,w
  1807     0573  1D03               	skipz
  1808     0574  2D7B               	goto	u445
  1809     0575  0821               	movf	___lldiv@divisor+1,w
  1810     0576  0225               	subwf	___lldiv@dividend+1,w
  1811     0577  1D03               	skipz
  1812     0578  2D7B               	goto	u445
  1813     0579  0820               	movf	___lldiv@divisor,w
  1814     057A  0224               	subwf	___lldiv@dividend,w
  1815     057B                     u445:
  1816     057B  1C03               	skipc
  1817     057C  2D7E               	goto	u441
  1818     057D  2D7F               	goto	u440
  1819     057E                     u441:
  1820     057E  2D8E               	goto	l1001
  1821     057F                     u440:
  1822     057F                     l997:
  1823     057F  0820               	movf	___lldiv@divisor,w
  1824     0580  02A4               	subwf	___lldiv@dividend,f
  1825     0581  0821               	movf	___lldiv@divisor+1,w
  1826     0582  1C03               	skipc
  1827     0583  0F21               	incfsz	___lldiv@divisor+1,w
  1828     0584  02A5               	subwf	___lldiv@dividend+1,f
  1829     0585  0822               	movf	___lldiv@divisor+2,w
  1830     0586  1C03               	skipc
  1831     0587  0F22               	incfsz	___lldiv@divisor+2,w
  1832     0588  02A6               	subwf	___lldiv@dividend+2,f
  1833     0589  0823               	movf	___lldiv@divisor+3,w
  1834     058A  1C03               	skipc
  1835     058B  0F23               	incfsz	___lldiv@divisor+3,w
  1836     058C  02A7               	subwf	___lldiv@dividend+3,f
  1837     058D                     l999:
  1838     058D  1428               	bsf	___lldiv@quotient,0
  1839     058E                     l1001:
  1840     058E  3001               	movlw	1
  1841     058F                     u455:
  1842     058F  1003               	clrc
  1843     0590  0CA3               	rrf	___lldiv@divisor+3,f
  1844     0591  0CA2               	rrf	___lldiv@divisor+2,f
  1845     0592  0CA1               	rrf	___lldiv@divisor+1,f
  1846     0593  0CA0               	rrf	___lldiv@divisor,f
  1847     0594  3EFF               	addlw	-1
  1848     0595  1D03               	skipz
  1849     0596  2D8F               	goto	u455
  1850     0597                     l1003:
  1851     0597  3001               	movlw	1
  1852     0598  02AC               	subwf	___lldiv@counter,f
  1853     0599  1D03               	btfss	3,2
  1854     059A  2D9C               	goto	u461
  1855     059B  2D9D               	goto	u460
  1856     059C                     u461:
  1857     059C  2D64               	goto	l993
  1858     059D                     u460:
  1859     059D                     l1005:
  1860     059D  082B               	movf	___lldiv@quotient+3,w
  1861     059E  00A3               	movwf	?___lldiv+3
  1862     059F  082A               	movf	___lldiv@quotient+2,w
  1863     05A0  00A2               	movwf	?___lldiv+2
  1864     05A1  0829               	movf	___lldiv@quotient+1,w
  1865     05A2  00A1               	movwf	?___lldiv+1
  1866     05A3  0828               	movf	___lldiv@quotient,w
  1867     05A4  00A0               	movwf	?___lldiv
  1868     05A5                     l279:
  1869     05A5  0008               	return
  1870     05A6                     __end_of___lldiv:
  1871                           
  1872                           	psect	text6
  1873     02DF                     __ptext6:	
  1874 ;; *************** function _init_digital_keypad *****************
  1875 ;; Defined at:
  1876 ;;		line 13 in file "digital_keypad.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       0       0       0       0
  1891 ;;      Locals:         0       0       0       0       0
  1892 ;;      Temps:          0       0       0       0       0
  1893 ;;      Totals:         0       0       0       0       0
  1894 ;;Total ram usage:        0 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_init_config
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903     02DF                     _init_digital_keypad:	
  1904                           ;psect for function _init_digital_keypad
  1905                           
  1906     02DF                     l1015:	
  1907                           ;incstack = 0
  1908                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1909                           
  1910                           
  1911                           ;digital_keypad.c: 16:     TRISB = TRISB | 0x3F;
  1912     02DF  1683               	bsf	3,5	;RP0=1, select bank1
  1913     02E0  1303               	bcf	3,6	;RP1=0, select bank1
  1914     02E1  0806               	movf	6,w	;volatile
  1915     02E2  383F               	iorlw	63
  1916     02E3  0086               	movwf	6	;volatile
  1917     02E4                     l122:
  1918     02E4  0008               	return
  1919     02E5                     __end_of_init_digital_keypad:
  1920                           
  1921                           	psect	text7
  1922     0348                     __ptext7:	
  1923 ;; *************** function _init_AT24C04 *****************
  1924 ;; Defined at:
  1925 ;;		line 12 in file "AT24C04.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  dummy           1   12[COMMON] unsigned char 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         0       0       0       0       0
  1940 ;;      Locals:         1       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0
  1942 ;;      Totals:         1       0       0       0       0
  1943 ;;Total ram usage:        1 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 3
  1946 ;; This function calls:
  1947 ;;		_read_AT24C04
  1948 ;;		_write_AT24C04
  1949 ;; This function is called by:
  1950 ;;		_init_config
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954     0348                     _init_AT24C04:	
  1955                           ;psect for function _init_AT24C04
  1956                           
  1957     0348                     l1023:	
  1958                           ;incstack = 0
  1959                           ; Regs used in _init_AT24C04: [wreg+status,2+status,0+pclath+cstack]
  1960                           
  1961                           
  1962                           ;AT24C04.c: 14:     unsigned char dummy;;AT24C04.c: 16:     dummy = read_AT24C04(0x00);
  1963     0348  3000               	movlw	0
  1964     0349  120A  118A  23E2  120A  118A  	fcall	_read_AT24C04
  1965     034E  00FC               	movwf	init_AT24C04@dummy
  1966     034F                     l1025:
  1967                           
  1968                           ;AT24C04.c: 17:     dummy = dummy & 0x7F;
  1969     034F  087C               	movf	init_AT24C04@dummy,w
  1970     0350  397F               	andlw	127
  1971     0351  00FC               	movwf	init_AT24C04@dummy
  1972     0352                     l1027:
  1973                           
  1974                           ;AT24C04.c: 18:     write_AT24C04(0x00, dummy);
  1975     0352  087C               	movf	init_AT24C04@dummy,w
  1976     0353  1283               	bcf	3,5	;RP0=0, select bank0
  1977     0354  1303               	bcf	3,6	;RP1=0, select bank0
  1978     0355  00AD               	movwf	write_AT24C04@data
  1979     0356  3000               	movlw	0
  1980     0357  120A  118A  237C  120A  118A  	fcall	_write_AT24C04
  1981     035C                     l151:
  1982     035C  0008               	return
  1983     035D                     __end_of_init_AT24C04:
  1984                           
  1985                           	psect	text8
  1986     037C                     __ptext8:	
  1987 ;; *************** function _write_AT24C04 *****************
  1988 ;; Defined at:
  1989 ;;		line 36 in file "AT24C04.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  addr            1    wreg     unsigned char 
  1992 ;;  data            1   13[BANK0 ] unsigned char 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  addr            1   11[COMMON] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0, pclath, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         0       1       0       0       0
  2005 ;;      Locals:         1       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0
  2007 ;;      Totals:         1       1       0       0       0
  2008 ;;Total ram usage:        2 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 2
  2011 ;; This function calls:
  2012 ;;		_i2c_start
  2013 ;;		_i2c_stop
  2014 ;;		_i2c_write
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;;		_init_AT24C04
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021     037C                     _write_AT24C04:	
  2022                           ;psect for function _write_AT24C04
  2023                           
  2024                           
  2025                           ;incstack = 0
  2026                           ; Regs used in _write_AT24C04: [wreg+status,2+status,0+pclath+cstack]
  2027                           ;write_AT24C04@addr stored from wreg
  2028     037C  00FB               	movwf	write_AT24C04@addr
  2029     037D                     l975:
  2030                           
  2031                           ;AT24C04.c: 36: void write_AT24C04(unsigned char addr, unsigned char data);AT24C04.c: 37
      +                          : {;AT24C04.c: 38:     i2c_start();
  2032     037D  120A  118A  22EE  120A  118A  	fcall	_i2c_start
  2033                           
  2034                           ;AT24C04.c: 39:     i2c_write(0b10100000);
  2035     0382  30A0               	movlw	160
  2036     0383  120A  118A  2300  120A  118A  	fcall	_i2c_write
  2037                           
  2038                           ;AT24C04.c: 40:     i2c_write(addr);
  2039     0388  087B               	movf	write_AT24C04@addr,w
  2040     0389  120A  118A  2300  120A  118A  	fcall	_i2c_write
  2041                           
  2042                           ;AT24C04.c: 41:     i2c_write(data);
  2043     038E  1283               	bcf	3,5	;RP0=0, select bank0
  2044     038F  1303               	bcf	3,6	;RP1=0, select bank0
  2045     0390  082D               	movf	write_AT24C04@data,w
  2046     0391  120A  118A  2300  120A  118A  	fcall	_i2c_write
  2047                           
  2048                           ;AT24C04.c: 42:     i2c_stop();
  2049     0396  120A  118A  22F7  120A  118A  	fcall	_i2c_stop
  2050     039B                     l157:
  2051     039B  0008               	return
  2052     039C                     __end_of_write_AT24C04:
  2053                           
  2054                           	psect	text9
  2055     03E2                     __ptext9:	
  2056 ;; *************** function _read_AT24C04 *****************
  2057 ;; Defined at:
  2058 ;;		line 21 in file "AT24C04.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  addr            1    wreg     unsigned char 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  addr            1    2[COMMON] unsigned char 
  2063 ;;  data            1    3[COMMON] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      unsigned char 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, pclath, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2073 ;;      Params:         0       0       0       0       0
  2074 ;;      Locals:         2       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0
  2076 ;;      Totals:         2       0       0       0       0
  2077 ;;Total ram usage:        2 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 2
  2080 ;; This function calls:
  2081 ;;		_i2c_read
  2082 ;;		_i2c_rep_start
  2083 ;;		_i2c_start
  2084 ;;		_i2c_stop
  2085 ;;		_i2c_write
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;;		_init_AT24C04
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092     03E2                     _read_AT24C04:	
  2093                           ;psect for function _read_AT24C04
  2094                           
  2095                           
  2096                           ;incstack = 0
  2097                           ; Regs used in _read_AT24C04: [wreg+status,2+status,0+pclath+cstack]
  2098                           ;read_AT24C04@addr stored from wreg
  2099     03E2  00F2               	movwf	read_AT24C04@addr
  2100     03E3                     l977:
  2101                           
  2102                           ;AT24C04.c: 21: unsigned char read_AT24C04(unsigned char addr);AT24C04.c: 22: {;AT24C04.
      +                          c: 23:     unsigned char data;;AT24C04.c: 25:     i2c_start();
  2103     03E3  120A  118A  22EE  120A  118A  	fcall	_i2c_start
  2104                           
  2105                           ;AT24C04.c: 26:     i2c_write(0b10100000);
  2106     03E8  30A0               	movlw	160
  2107     03E9  120A  118A  2300  120A  118A  	fcall	_i2c_write
  2108                           
  2109                           ;AT24C04.c: 27:     i2c_write(addr);
  2110     03EE  0872               	movf	read_AT24C04@addr,w
  2111     03EF  120A  118A  2300  120A  118A  	fcall	_i2c_write
  2112                           
  2113                           ;AT24C04.c: 28:     i2c_rep_start();
  2114     03F4  120A  118A  22E5  120A  118A  	fcall	_i2c_rep_start
  2115                           
  2116                           ;AT24C04.c: 29:     i2c_write(0b10100001);
  2117     03F9  30A1               	movlw	161
  2118     03FA  120A  118A  2300  120A  118A  	fcall	_i2c_write
  2119                           
  2120                           ;AT24C04.c: 30:     data = i2c_read(0);
  2121     03FF  3000               	movlw	0
  2122     0400  120A  118A  239C  120A  118A  	fcall	_i2c_read
  2123     0405  00F3               	movwf	read_AT24C04@data
  2124                           
  2125                           ;AT24C04.c: 31:     i2c_stop();
  2126     0406  120A  118A  22F7  120A  118A  	fcall	_i2c_stop
  2127     040B                     l979:
  2128                           
  2129                           ;AT24C04.c: 33:     return data;
  2130     040B  0873               	movf	read_AT24C04@data,w
  2131     040C                     l154:
  2132     040C  0008               	return
  2133     040D                     __end_of_read_AT24C04:
  2134                           
  2135                           	psect	text10
  2136     0300                     __ptext10:	
  2137 ;; *************** function _i2c_write *****************
  2138 ;; Defined at:
  2139 ;;		line 72 in file "i2c.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  data            1    wreg     unsigned char 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  data            1    0[COMMON] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  2  112[None  ] int 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0, pclath, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         0       0       0       0       0
  2154 ;;      Locals:         1       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0
  2156 ;;      Totals:         1       0       0       0       0
  2157 ;;Total ram usage:        1 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 1
  2160 ;; This function calls:
  2161 ;;		_i2c_wait_for_idle
  2162 ;; This function is called by:
  2163 ;;		_read_AT24C04
  2164 ;;		_write_AT24C04
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168     0300                     _i2c_write:	
  2169                           ;psect for function _i2c_write
  2170                           
  2171                           
  2172                           ;incstack = 0
  2173                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2174                           ;i2c_write@data stored from wreg
  2175     0300  00F0               	movwf	i2c_write@data
  2176     0301                     l967:
  2177                           
  2178                           ;i2c.c: 72: int i2c_write(unsigned char data);i2c.c: 73: {;i2c.c: 74:     i2c_wait_for_i
      +                          dle();
  2179     0301  120A  118A  2317  120A  118A  	fcall	_i2c_wait_for_idle
  2180     0306                     l969:
  2181                           
  2182                           ;i2c.c: 75:     SSPBUF = data;
  2183     0306  0870               	movf	i2c_write@data,w
  2184     0307  1283               	bcf	3,5	;RP0=0, select bank0
  2185     0308  1303               	bcf	3,6	;RP1=0, select bank0
  2186     0309  0093               	movwf	19	;volatile
  2187     030A                     l971:
  2188     030A                     l113:	
  2189                           ;i2c.c: 77:     return !ACKSTAT;;	Return value of _i2c_write is never used
  2190                           
  2191     030A  0008               	return
  2192     030B                     __end_of_i2c_write:
  2193                           
  2194                           	psect	text11
  2195     02F7                     __ptext11:	
  2196 ;; *************** function _i2c_stop *****************
  2197 ;; Defined at:
  2198 ;;		line 42 in file "i2c.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;		None
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0, pclath, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2212 ;;      Params:         0       0       0       0       0
  2213 ;;      Locals:         0       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0
  2215 ;;      Totals:         0       0       0       0       0
  2216 ;;Total ram usage:        0 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; Hardware stack levels required when called: 1
  2219 ;; This function calls:
  2220 ;;		_i2c_wait_for_idle
  2221 ;; This function is called by:
  2222 ;;		_read_AT24C04
  2223 ;;		_write_AT24C04
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227     02F7                     _i2c_stop:	
  2228                           ;psect for function _i2c_stop
  2229                           
  2230     02F7                     l949:	
  2231                           ;incstack = 0
  2232                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  2233                           
  2234                           
  2235                           ;i2c.c: 44:     i2c_wait_for_idle();
  2236     02F7  120A  118A  2317  120A  118A  	fcall	_i2c_wait_for_idle
  2237     02FC                     l951:
  2238                           
  2239                           ;i2c.c: 45:     PEN = 1;
  2240     02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2241     02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2242     02FE  1511               	bsf	17,2	;volatile
  2243     02FF                     l105:
  2244     02FF  0008               	return
  2245     0300                     __end_of_i2c_stop:
  2246                           
  2247                           	psect	text12
  2248     02EE                     __ptext12:	
  2249 ;; *************** function _i2c_start *****************
  2250 ;; Defined at:
  2251 ;;		line 30 in file "i2c.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2265 ;;      Params:         0       0       0       0       0
  2266 ;;      Locals:         0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0
  2268 ;;      Totals:         0       0       0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 1
  2272 ;; This function calls:
  2273 ;;		_i2c_wait_for_idle
  2274 ;; This function is called by:
  2275 ;;		_read_AT24C04
  2276 ;;		_write_AT24C04
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280     02EE                     _i2c_start:	
  2281                           ;psect for function _i2c_start
  2282                           
  2283     02EE                     l941:	
  2284                           ;incstack = 0
  2285                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  2286                           
  2287                           
  2288                           ;i2c.c: 32:     i2c_wait_for_idle();
  2289     02EE  120A  118A  2317  120A  118A  	fcall	_i2c_wait_for_idle
  2290     02F3                     l943:
  2291                           
  2292                           ;i2c.c: 33:     SEN = 1;
  2293     02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2294     02F4  1303               	bcf	3,6	;RP1=0, select bank1
  2295     02F5  1411               	bsf	17,0	;volatile
  2296     02F6                     l99:
  2297     02F6  0008               	return
  2298     02F7                     __end_of_i2c_start:
  2299                           
  2300                           	psect	text13
  2301     02E5                     __ptext13:	
  2302 ;; *************** function _i2c_rep_start *****************
  2303 ;; Defined at:
  2304 ;;		line 36 in file "i2c.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0, pclath, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2318 ;;      Params:         0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0
  2321 ;;      Totals:         0       0       0       0       0
  2322 ;;Total ram usage:        0 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; Hardware stack levels required when called: 1
  2325 ;; This function calls:
  2326 ;;		_i2c_wait_for_idle
  2327 ;; This function is called by:
  2328 ;;		_read_AT24C04
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332     02E5                     _i2c_rep_start:	
  2333                           ;psect for function _i2c_rep_start
  2334                           
  2335     02E5                     l945:	
  2336                           ;incstack = 0
  2337                           ; Regs used in _i2c_rep_start: [wreg+status,2+status,0+pclath+cstack]
  2338                           
  2339                           
  2340                           ;i2c.c: 38:     i2c_wait_for_idle();
  2341     02E5  120A  118A  2317  120A  118A  	fcall	_i2c_wait_for_idle
  2342     02EA                     l947:
  2343                           
  2344                           ;i2c.c: 39:     RSEN = 1;
  2345     02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2346     02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2347     02EC  1491               	bsf	17,1	;volatile
  2348     02ED                     l102:
  2349     02ED  0008               	return
  2350     02EE                     __end_of_i2c_rep_start:
  2351                           
  2352                           	psect	text14
  2353     039C                     __ptext14:	
  2354 ;; *************** function _i2c_read *****************
  2355 ;; Defined at:
  2356 ;;		line 48 in file "i2c.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  ack             1    wreg     unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  ack             1    0[COMMON] unsigned char 
  2361 ;;  data            1    1[COMMON] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      unsigned char 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         0       0       0       0       0
  2372 ;;      Locals:         2       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0
  2374 ;;      Totals:         2       0       0       0       0
  2375 ;;Total ram usage:        2 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 1
  2378 ;; This function calls:
  2379 ;;		_i2c_wait_for_idle
  2380 ;; This function is called by:
  2381 ;;		_read_AT24C04
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385     039C                     _i2c_read:	
  2386                           ;psect for function _i2c_read
  2387                           
  2388                           
  2389                           ;incstack = 0
  2390                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  2391                           ;i2c_read@ack stored from wreg
  2392     039C  00F0               	movwf	i2c_read@ack
  2393     039D                     l953:
  2394                           
  2395                           ;i2c.c: 48: unsigned char i2c_read(unsigned char ack);i2c.c: 49: {;i2c.c: 50:     unsign
      +                          ed char data;;i2c.c: 52:     i2c_wait_for_idle();
  2396     039D  120A  118A  2317  120A  118A  	fcall	_i2c_wait_for_idle
  2397     03A2                     l955:
  2398                           
  2399                           ;i2c.c: 53:     RCEN = 1;
  2400     03A2  1683               	bsf	3,5	;RP0=1, select bank1
  2401     03A3  1303               	bcf	3,6	;RP1=0, select bank1
  2402     03A4  1591               	bsf	17,3	;volatile
  2403                           
  2404                           ;i2c.c: 55:     i2c_wait_for_idle();
  2405     03A5  120A  118A  2317  120A  118A  	fcall	_i2c_wait_for_idle
  2406     03AA                     l957:
  2407                           
  2408                           ;i2c.c: 56:     data = SSPBUF;
  2409     03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2410     03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2411     03AC  0813               	movf	19,w	;volatile
  2412     03AD  00F1               	movwf	i2c_read@data
  2413     03AE                     l959:
  2414                           
  2415                           ;i2c.c: 58:     if (ack == 1)
  2416     03AE  0370               	decf	i2c_read@ack,w
  2417     03AF  1D03               	btfss	3,2
  2418     03B0  2BB2               	goto	u391
  2419     03B1  2BB3               	goto	u390
  2420     03B2                     u391:
  2421     03B2  2BB7               	goto	l108
  2422     03B3                     u390:
  2423     03B3                     l961:
  2424                           
  2425                           ;i2c.c: 59:     {;i2c.c: 60:         ACKDT = 1;
  2426     03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2427     03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2428     03B5  1691               	bsf	17,5	;volatile
  2429                           
  2430                           ;i2c.c: 61:     }
  2431     03B6  2BBA               	goto	l109
  2432     03B7                     l108:	
  2433                           ;i2c.c: 62:     else
  2434                           
  2435                           
  2436                           ;i2c.c: 63:     {;i2c.c: 64:         ACKDT = 0;
  2437     03B7  1683               	bsf	3,5	;RP0=1, select bank1
  2438     03B8  1303               	bcf	3,6	;RP1=0, select bank1
  2439     03B9  1291               	bcf	17,5	;volatile
  2440     03BA                     l109:	
  2441                           ;i2c.c: 65:     }
  2442                           
  2443                           
  2444                           ;i2c.c: 67:     ACKEN = 1;
  2445     03BA  1611               	bsf	17,4	;volatile
  2446     03BB                     l963:
  2447                           
  2448                           ;i2c.c: 69:     return data;
  2449     03BB  0871               	movf	i2c_read@data,w
  2450     03BC                     l110:
  2451     03BC  0008               	return
  2452     03BD                     __end_of_i2c_read:
  2453                           
  2454                           	psect	text15
  2455     0317                     __ptext15:	
  2456 ;; *************** function _i2c_wait_for_idle *****************
  2457 ;; Defined at:
  2458 ;;		line 24 in file "i2c.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2472 ;;      Params:         0       0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0
  2475 ;;      Totals:         0       0       0       0       0
  2476 ;;Total ram usage:        0 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_i2c_start
  2482 ;;		_i2c_rep_start
  2483 ;;		_i2c_stop
  2484 ;;		_i2c_read
  2485 ;;		_i2c_write
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489     0317                     _i2c_wait_for_idle:	
  2490                           ;psect for function _i2c_wait_for_idle
  2491                           
  2492     0317                     l937:	
  2493                           ;incstack = 0
  2494                           ; Regs used in _i2c_wait_for_idle: [wreg+status,2]
  2495                           
  2496     0317                     l93:	
  2497                           ;i2c.c: 27:     while (R_nW || (SSPCON2 & 0x1F));
  2498                           
  2499     0317  1683               	bsf	3,5	;RP0=1, select bank1
  2500     0318  1303               	bcf	3,6	;RP1=0, select bank1
  2501     0319  1914               	btfsc	20,2	;volatile
  2502     031A  2B1C               	goto	u371
  2503     031B  2B1D               	goto	u370
  2504     031C                     u371:
  2505     031C  2B17               	goto	l93
  2506     031D                     u370:
  2507     031D                     l939:
  2508     031D  0811               	movf	17,w	;volatile
  2509     031E  391F               	andlw	31
  2510     031F  1D03               	btfss	3,2
  2511     0320  2B22               	goto	u381
  2512     0321  2B23               	goto	u380
  2513     0322                     u381:
  2514     0322  2B17               	goto	l93
  2515     0323                     u380:
  2516     0323                     l96:
  2517     0323  0008               	return
  2518     0324                     __end_of_i2c_wait_for_idle:
  2519                           
  2520                           	psect	text16
  2521     04E8                     __ptext16:	
  2522 ;; *************** function _display *****************
  2523 ;; Defined at:
  2524 ;;		line 23 in file "ssd.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  data            1    wreg     PTR unsigned char 
  2527 ;;		 -> main@ssd(4), 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  data            1    8[COMMON] PTR unsigned char 
  2530 ;;		 -> main@ssd(4), 
  2531 ;;  wait            4    4[COMMON] unsigned long 
  2532 ;;  digit           1    9[COMMON] unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2542 ;;      Params:         0       0       0       0       0
  2543 ;;      Locals:         6       0       0       0       0
  2544 ;;      Temps:          4       0       0       0       0
  2545 ;;      Totals:        10       0       0       0       0
  2546 ;;Total ram usage:       10 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555     04E8                     _display:	
  2556                           ;psect for function _display
  2557                           
  2558                           
  2559                           ;incstack = 0
  2560                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1]
  2561                           ;display@data stored from wreg
  2562     04E8  00F8               	movwf	display@data
  2563     04E9                     l1029:
  2564                           
  2565                           ;ssd.c: 23: void display(unsigned char data[]);ssd.c: 24: {;ssd.c: 25:     unsigned char
      +                           digit;;ssd.c: 27:     for (digit = 0; digit < 4; digit++)
  2566     04E9  01F9               	clrf	display@digit
  2567     04EA                     l1035:
  2568                           
  2569                           ;ssd.c: 28:     {;ssd.c: 29:         PORTD = data[digit];
  2570     04EA  0879               	movf	display@digit,w
  2571     04EB  0778               	addwf	display@data,w
  2572     04EC  00F0               	movwf	??_display
  2573     04ED  0870               	movf	??_display,w
  2574     04EE  0084               	movwf	4
  2575     04EF  1383               	bcf	3,7	;select IRP bank0
  2576     04F0  0800               	movf	0,w
  2577     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2578     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2579     04F3  0088               	movwf	8	;volatile
  2580     04F4                     l1037:
  2581                           
  2582                           ;ssd.c: 30:         PORTA = (PORTA & 0x03) | (0x04 << digit);
  2583     04F4  3004               	movlw	4
  2584     04F5  00F0               	movwf	??_display
  2585     04F6  0A79               	incf	display@digit,w
  2586     04F7  2CFA               	goto	u484
  2587     04F8                     u485:
  2588     04F8  1003               	clrc
  2589     04F9  0DF0               	rlf	??_display,f
  2590     04FA                     u484:
  2591     04FA  3EFF               	addlw	-1
  2592     04FB  1D03               	skipz
  2593     04FC  2CF8               	goto	u485
  2594     04FD  0805               	movf	5,w	;volatile
  2595     04FE  3903               	andlw	3
  2596     04FF  0470               	iorwf	??_display,w
  2597     0500  0085               	movwf	5	;volatile
  2598     0501                     l1039:
  2599                           
  2600                           ;ssd.c: 32:        for (unsigned long int wait = 250; wait--; );
  2601     0501  3000               	movlw	0
  2602     0502  00F7               	movwf	display@wait+3
  2603     0503  3000               	movlw	0
  2604     0504  00F6               	movwf	display@wait+2
  2605     0505  3000               	movlw	0
  2606     0506  00F5               	movwf	display@wait+1
  2607     0507  30FA               	movlw	250
  2608     0508  00F4               	movwf	display@wait
  2609     0509                     l1041:
  2610     0509  3001               	movlw	1
  2611     050A  00F0               	movwf	??_display
  2612     050B  3000               	movlw	0
  2613     050C  00F1               	movwf	??_display+1
  2614     050D  3000               	movlw	0
  2615     050E  00F2               	movwf	??_display+2
  2616     050F  3000               	movlw	0
  2617     0510  00F3               	movwf	??_display+3
  2618     0511  0870               	movf	??_display,w
  2619     0512  02F4               	subwf	display@wait,f
  2620     0513  0871               	movf	??_display+1,w
  2621     0514  1C03               	skipc
  2622     0515  0F71               	incfsz	??_display+1,w
  2623     0516  2D18               	goto	u495
  2624     0517  2D19               	goto	u496
  2625     0518                     u495:
  2626     0518  02F5               	subwf	display@wait+1,f
  2627     0519                     u496:
  2628     0519  0872               	movf	??_display+2,w
  2629     051A  1C03               	skipc
  2630     051B  0F72               	incfsz	??_display+2,w
  2631     051C  2D1E               	goto	u497
  2632     051D  2D1F               	goto	u498
  2633     051E                     u497:
  2634     051E  02F6               	subwf	display@wait+2,f
  2635     051F                     u498:
  2636     051F  0873               	movf	??_display+3,w
  2637     0520  1C03               	skipc
  2638     0521  0F73               	incfsz	??_display+3,w
  2639     0522  2D24               	goto	u499
  2640     0523  2D25               	goto	u490
  2641     0524                     u499:
  2642     0524  02F7               	subwf	display@wait+3,f
  2643     0525                     u490:
  2644     0525  0A74               	incf	display@wait,w
  2645     0526  1D03               	skipz
  2646     0527  2D32               	goto	u501
  2647     0528  0A75               	incf	display@wait+1,w
  2648     0529  1D03               	skipz
  2649     052A  2D32               	goto	u501
  2650     052B  0A76               	incf	display@wait+2,w
  2651     052C  1D03               	skipz
  2652     052D  2D32               	goto	u501
  2653     052E  0A77               	incf	display@wait+3,w
  2654     052F  1D03               	btfss	3,2
  2655     0530  2D32               	goto	u501
  2656     0531  2D33               	goto	u500
  2657     0532                     u501:
  2658     0532  2D09               	goto	l1041
  2659     0533                     u500:
  2660     0533                     l1043:
  2661                           
  2662                           ;ssd.c: 33:     }
  2663     0533  3001               	movlw	1
  2664     0534  00FF               	movwf	btemp+1
  2665     0535  087F               	movf	btemp+1,w
  2666     0536  07F9               	addwf	display@digit,f
  2667     0537                     l1045:
  2668     0537  3004               	movlw	4
  2669     0538  0279               	subwf	display@digit,w
  2670     0539  1C03               	skipc
  2671     053A  2D3C               	goto	u511
  2672     053B  2D3D               	goto	u510
  2673     053C                     u511:
  2674     053C  2CEA               	goto	l1035
  2675     053D                     u510:
  2676     053D                     l19:
  2677     053D  0008               	return
  2678     053E                     __end_of_display:
  2679                           
  2680                           	psect	text17
  2681     03BD                     __ptext17:	
  2682 ;; *************** function ___wmul *****************
  2683 ;; Defined at:
  2684 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  multiplier      2    4[COMMON] unsigned int 
  2687 ;;  multiplicand    2    6[COMMON] unsigned int 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  product         2    8[COMMON] unsigned int 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  2    4[COMMON] unsigned int 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2699 ;;      Params:         4       0       0       0       0
  2700 ;;      Locals:         2       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0
  2702 ;;      Totals:         6       0       0       0       0
  2703 ;;Total ram usage:        6 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_main
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712     03BD                     ___wmul:	
  2713                           ;psect for function ___wmul
  2714                           
  2715     03BD                     l1097:	
  2716                           ;incstack = 0
  2717                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2718                           
  2719     03BD  01F8               	clrf	___wmul@product
  2720     03BE  01F9               	clrf	___wmul@product+1
  2721     03BF                     l1099:
  2722     03BF  1C74               	btfss	___wmul@multiplier,0
  2723     03C0  2BC2               	goto	u581
  2724     03C1  2BC3               	goto	u580
  2725     03C2                     u581:
  2726     03C2  2BC9               	goto	l243
  2727     03C3                     u580:
  2728     03C3                     l1101:
  2729     03C3  0876               	movf	___wmul@multiplicand,w
  2730     03C4  07F8               	addwf	___wmul@product,f
  2731     03C5  1803               	skipnc
  2732     03C6  0AF9               	incf	___wmul@product+1,f
  2733     03C7  0877               	movf	___wmul@multiplicand+1,w
  2734     03C8  07F9               	addwf	___wmul@product+1,f
  2735     03C9                     l243:
  2736     03C9  3001               	movlw	1
  2737     03CA                     u595:
  2738     03CA  1003               	clrc
  2739     03CB  0DF6               	rlf	___wmul@multiplicand,f
  2740     03CC  0DF7               	rlf	___wmul@multiplicand+1,f
  2741     03CD  3EFF               	addlw	-1
  2742     03CE  1D03               	skipz
  2743     03CF  2BCA               	goto	u595
  2744     03D0                     l1103:
  2745     03D0  3001               	movlw	1
  2746     03D1                     u605:
  2747     03D1  1003               	clrc
  2748     03D2  0CF5               	rrf	___wmul@multiplier+1,f
  2749     03D3  0CF4               	rrf	___wmul@multiplier,f
  2750     03D4  3EFF               	addlw	-1
  2751     03D5  1D03               	skipz
  2752     03D6  2BD1               	goto	u605
  2753     03D7                     l1105:
  2754     03D7  0874               	movf	___wmul@multiplier,w
  2755     03D8  0475               	iorwf	___wmul@multiplier+1,w
  2756     03D9  1D03               	btfss	3,2
  2757     03DA  2BDC               	goto	u611
  2758     03DB  2BDD               	goto	u610
  2759     03DC                     u611:
  2760     03DC  2BBF               	goto	l1099
  2761     03DD                     u610:
  2762     03DD                     l1107:
  2763     03DD  0879               	movf	___wmul@product+1,w
  2764     03DE  00F5               	movwf	?___wmul+1
  2765     03DF  0878               	movf	___wmul@product,w
  2766     03E0  00F4               	movwf	?___wmul
  2767     03E1                     l245:
  2768     03E1  0008               	return
  2769     03E2                     __end_of___wmul:
  2770                           
  2771                           	psect	text18
  2772     0494                     __ptext18:	
  2773 ;; *************** function ___llmod *****************
  2774 ;; Defined at:
  2775 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\llmod.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  divisor         4    0[COMMON] unsigned long 
  2778 ;;  dividend        4    4[COMMON] unsigned long 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  counter         1    9[COMMON] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  4    0[COMMON] unsigned long 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0, btemp+1
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2790 ;;      Params:         8       0       0       0       0
  2791 ;;      Locals:         1       0       0       0       0
  2792 ;;      Temps:          1       0       0       0       0
  2793 ;;      Totals:        10       0       0       0       0
  2794 ;;Total ram usage:       10 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_main
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803     0494                     ___llmod:	
  2804                           ;psect for function ___llmod
  2805                           
  2806     0494                     l1111:	
  2807                           ;incstack = 0
  2808                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  2809                           
  2810     0494  0873               	movf	___llmod@divisor+3,w
  2811     0495  0472               	iorwf	___llmod@divisor+2,w
  2812     0496  0471               	iorwf	___llmod@divisor+1,w
  2813     0497  0470               	iorwf	___llmod@divisor,w
  2814     0498  1903               	skipnz
  2815     0499  2C9B               	goto	u621
  2816     049A  2C9C               	goto	u620
  2817     049B                     u621:
  2818     049B  2CDF               	goto	l1129
  2819     049C                     u620:
  2820     049C                     l1113:
  2821     049C  01F9               	clrf	___llmod@counter
  2822     049D  0AF9               	incf	___llmod@counter,f
  2823     049E  2CAC               	goto	l1119
  2824     049F                     l1115:
  2825     049F  3001               	movlw	1
  2826     04A0  00F8               	movwf	??___llmod
  2827     04A1                     u635:
  2828     04A1  1003               	clrc
  2829     04A2  0DF0               	rlf	___llmod@divisor,f
  2830     04A3  0DF1               	rlf	___llmod@divisor+1,f
  2831     04A4  0DF2               	rlf	___llmod@divisor+2,f
  2832     04A5  0DF3               	rlf	___llmod@divisor+3,f
  2833     04A6  0BF8               	decfsz	??___llmod,f
  2834     04A7  2CA1               	goto	u635
  2835     04A8                     l1117:
  2836     04A8  3001               	movlw	1
  2837     04A9  00FF               	movwf	btemp+1
  2838     04AA  087F               	movf	btemp+1,w
  2839     04AB  07F9               	addwf	___llmod@counter,f
  2840     04AC                     l1119:
  2841     04AC  1FF3               	btfss	___llmod@divisor+3,7
  2842     04AD  2CAF               	goto	u641
  2843     04AE  2CB0               	goto	u640
  2844     04AF                     u641:
  2845     04AF  2C9F               	goto	l1115
  2846     04B0                     u640:
  2847     04B0                     l1121:
  2848     04B0  0873               	movf	___llmod@divisor+3,w
  2849     04B1  0277               	subwf	___llmod@dividend+3,w
  2850     04B2  1D03               	skipz
  2851     04B3  2CBE               	goto	u655
  2852     04B4  0872               	movf	___llmod@divisor+2,w
  2853     04B5  0276               	subwf	___llmod@dividend+2,w
  2854     04B6  1D03               	skipz
  2855     04B7  2CBE               	goto	u655
  2856     04B8  0871               	movf	___llmod@divisor+1,w
  2857     04B9  0275               	subwf	___llmod@dividend+1,w
  2858     04BA  1D03               	skipz
  2859     04BB  2CBE               	goto	u655
  2860     04BC  0870               	movf	___llmod@divisor,w
  2861     04BD  0274               	subwf	___llmod@dividend,w
  2862     04BE                     u655:
  2863     04BE  1C03               	skipc
  2864     04BF  2CC1               	goto	u651
  2865     04C0  2CC2               	goto	u650
  2866     04C1                     u651:
  2867     04C1  2CD0               	goto	l1125
  2868     04C2                     u650:
  2869     04C2                     l1123:
  2870     04C2  0870               	movf	___llmod@divisor,w
  2871     04C3  02F4               	subwf	___llmod@dividend,f
  2872     04C4  0871               	movf	___llmod@divisor+1,w
  2873     04C5  1C03               	skipc
  2874     04C6  0F71               	incfsz	___llmod@divisor+1,w
  2875     04C7  02F5               	subwf	___llmod@dividend+1,f
  2876     04C8  0872               	movf	___llmod@divisor+2,w
  2877     04C9  1C03               	skipc
  2878     04CA  0F72               	incfsz	___llmod@divisor+2,w
  2879     04CB  02F6               	subwf	___llmod@dividend+2,f
  2880     04CC  0873               	movf	___llmod@divisor+3,w
  2881     04CD  1C03               	skipc
  2882     04CE  0F73               	incfsz	___llmod@divisor+3,w
  2883     04CF  02F7               	subwf	___llmod@dividend+3,f
  2884     04D0                     l1125:
  2885     04D0  3001               	movlw	1
  2886     04D1                     u665:
  2887     04D1  1003               	clrc
  2888     04D2  0CF3               	rrf	___llmod@divisor+3,f
  2889     04D3  0CF2               	rrf	___llmod@divisor+2,f
  2890     04D4  0CF1               	rrf	___llmod@divisor+1,f
  2891     04D5  0CF0               	rrf	___llmod@divisor,f
  2892     04D6  3EFF               	addlw	-1
  2893     04D7  1D03               	skipz
  2894     04D8  2CD1               	goto	u665
  2895     04D9                     l1127:
  2896     04D9  3001               	movlw	1
  2897     04DA  02F9               	subwf	___llmod@counter,f
  2898     04DB  1D03               	btfss	3,2
  2899     04DC  2CDE               	goto	u671
  2900     04DD  2CDF               	goto	u670
  2901     04DE                     u671:
  2902     04DE  2CB0               	goto	l1121
  2903     04DF                     u670:
  2904     04DF                     l1129:
  2905     04DF  0877               	movf	___llmod@dividend+3,w
  2906     04E0  00F3               	movwf	?___llmod+3
  2907     04E1  0876               	movf	___llmod@dividend+2,w
  2908     04E2  00F2               	movwf	?___llmod+2
  2909     04E3  0875               	movf	___llmod@dividend+1,w
  2910     04E4  00F1               	movwf	?___llmod+1
  2911     04E5  0874               	movf	___llmod@dividend,w
  2912     04E6  00F0               	movwf	?___llmod
  2913     04E7                     l473:
  2914     04E7  0008               	return
  2915     04E8                     __end_of___llmod:
  2916     007E                     btemp	set	126	;btemp
  2917     007E                     wtemp0	set	126
  2918                           
  2919                           	psect	idloc
  2920                           
  2921                           ;Config register IDLOC0 @ 0x2000
  2922                           ;	unspecified, using default values
  2923     2000                     	org	8192
  2924     2000  3FFF               	dw	16383
  2925                           
  2926                           ;Config register IDLOC1 @ 0x2001
  2927                           ;	unspecified, using default values
  2928     2001                     	org	8193
  2929     2001  3FFF               	dw	16383
  2930                           
  2931                           ;Config register IDLOC2 @ 0x2002
  2932                           ;	unspecified, using default values
  2933     2002                     	org	8194
  2934     2002  3FFF               	dw	16383
  2935                           
  2936                           ;Config register IDLOC3 @ 0x2003
  2937                           ;	unspecified, using default values
  2938     2003                     	org	8195
  2939     2003  3FFF               	dw	16383
  2940                           
  2941                           	psect	config
  2942                           
  2943                           ;Config register CONFIG @ 0x2007
  2944                           ;	Oscillator Selection bits
  2945                           ;	FOSC = 0x3, unprogrammed default
  2946                           ;	Watchdog Timer Enable bit
  2947                           ;	WDTE = OFF, WDT disabled
  2948                           ;	Power-up Timer Enable bit
  2949                           ;	PWRTE = 0x1, unprogrammed default
  2950                           ;	Brown-out Reset Enable bit
  2951                           ;	BOREN = 0x1, unprogrammed default
  2952                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2953                           ;	LVP = 0x1, unprogrammed default
  2954                           ;	Data EEPROM Memory Code Protection bit
  2955                           ;	CPD = 0x1, unprogrammed default
  2956                           ;	Flash Program Memory Write Enable bits
  2957                           ;	WRT = 0x3, unprogrammed default
  2958                           ;	In-Circuit Debugger Mode bit
  2959                           ;	DEBUG = 0x1, unprogrammed default
  2960                           ;	Flash Program Memory Code Protection bit
  2961                           ;	CP = 0x1, unprogrammed default
  2962     2007                     	org	8199
  2963     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      60
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _init_config->_init_AT24C04
    _init_i2c->___lldiv
    ___lldiv->___llmod
    _init_AT24C04->_write_AT24C04
    _write_AT24C04->___lldiv
    _read_AT24C04->_i2c_read
    ___wmul->_read_AT24C04

Critical Paths under _main in BANK0

    _init_config->_init_i2c
    _init_i2c->___lldiv
    _init_AT24C04->_write_AT24C04
    _write_AT24C04->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    5588
                                             13 COMMON     1     1      0
                                             21 BANK0     12    12      0
                            ___lldiv
                            ___llmod
                             ___wmul
                            _display
                        _init_config
                       _read_AT24C04
                _read_digital_keypad
                      _write_AT24C04
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1928
                       _init_AT24C04
                _init_digital_keypad
                           _init_i2c
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             8     4      4    1324
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8    1226
                                             10 COMMON     1     1      0
                                              0 BANK0     13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_AT24C04                                         1     1      0     604
                                             12 COMMON     1     1      0
                       _read_AT24C04
                      _write_AT24C04
 ---------------------------------------------------------------------------------
 (1) _write_AT24C04                                        2     1      1     446
                                             11 COMMON     1     1      0
                                             13 BANK0      1     0      1
                            ___lldiv (ARG)
                            ___llmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _read_AT24C04                                         2     2      0     112
                                              2 COMMON     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_rep_start                                        0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             2     2      0      45
                                              0 COMMON     2     2      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_for_idle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                             10    10      0     168
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     548
                                              4 COMMON     6     2      4
                       _read_AT24C04 (ARG)
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8    1071
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___llmod (ARG)
   ___llmod
   ___wmul
     _read_AT24C04 (ARG)
       _i2c_read
         _i2c_wait_for_idle
       _i2c_rep_start
         _i2c_wait_for_idle
       _i2c_start
         _i2c_wait_for_idle
       _i2c_stop
         _i2c_wait_for_idle
       _i2c_write
         _i2c_wait_for_idle
   _display
   _init_config
     _init_AT24C04
       _read_AT24C04
       _write_AT24C04
         ___lldiv (ARG)
         ___llmod (ARG)
         _i2c_start (ARG)
         _i2c_stop (ARG)
         _i2c_write (ARG)
     _init_digital_keypad
     _init_i2c
       ___lldiv
     _init_ssd
   _read_AT24C04
   _read_digital_keypad
   _write_AT24C04

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      3C       5       75.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Oct 30 15:33:03 2023

                          pc 0002                           l11 0316                           l19 053D  
                         l51 05AB                           l53 05EB                           l38 037B  
                         l90 0440                           l93 0317                           l96 0323  
                         l99 02F6                           fsr 0004          ___wmul@multiplicand 0076  
                        l110 03BC                          l102 02ED                          l105 02FF  
                        l113 030A                          l122 02E4                          l131 0492  
                        l108 03B7                          l109 03BA                          l151 035C  
                        l128 0493                          l154 040C                          l243 03C9  
                        l245 03E1                          l157 039B                          l279 05A5  
                        l473 04E7                          l941 02EE                          l943 02F3  
                        l951 02FC                          l937 0317                          l961 03B3  
                        l953 039D                          l945 02E5                          l939 031D  
                        l963 03BB                          l955 03A2                          l947 02EA  
                        l971 030A                          l957 03AA                          l949 02F7  
                        l959 03AE                          l967 0301                          l975 037D  
                        l991 0560                          l983 053E                          l969 0306  
                        l977 03E3                          l993 0564                          l985 0550  
                        l979 040B                          l995 056D                          l987 0553  
                        l997 057F                          l989 055C                          l999 058D  
                        u400 0550                          u401 054F                          u500 0533  
                        u420 0564                          u501 0532                          u421 0563  
                        u510 053D                          u511 053C                          u415 0555  
                        u440 057F                          u520 0447                          _PEN 048A  
                        u441 057E                          u521 0446                          u610 03DD  
                        u370 031D                          u530 045D                          u611 03DC  
                        u371 031C                          u435 0566                          u531 045C  
                        u620 049C                          u380 0323                          u460 059D  
                        u540 0462                          u700 05E1                          u621 049B  
                        u605 03D1                          u381 0322                          u461 059C  
                        u445 057B                          u541 0461                          u701 05E0  
                        u390 03B3                          u470 041E                          u550 046F  
                        u710 069E                          u391 03B2                          u455 058F  
                        u551 046E                          u711 069D                          u703 05DD  
                        u640 04B0                          u560 047C                          u720 0757  
                        u641 04AF                          u561 047B                          u721 0756  
                        u650 04C2                          u490 0525                          u570 048D  
                        u651 04C1                          u635 04A1                          u475 0419  
                        u571 048C                          u580 03C3                          u484 04FA  
                        _SEN 0488                          u581 03C2                          u485 04F8  
                        u565 0478                          u670 04DF                          u671 04DE  
                        u655 04BE                          u495 0518                          u496 0519  
                        u680 05B8                          u665 04D1                          u497 051E  
                        u681 05B7                          u498 051F                          u690 05C2  
                        u595 03CA                          u499 0524                          u691 05C1  
                        fsr0 0004                          indf 0000                         l1001 058E  
                       l1003 0597                         l1011 030E                         l1101 03C3  
                       l1005 059D                         l1021 043D                         l1013 0311  
                       l1111 0494                         l1103 03D0                         l1023 0348  
                       l1015 02DF                         l1121 04B0                         l1113 049C  
                       l1105 03D7                         l1041 0509                         l1025 034F  
                       l1017 040D                         l1009 030B                         l1123 04C2  
                       l1115 049F                         l1107 03DD                         l1043 0533  
                       l1035 04EA                         l1027 0352                         l1019 0410  
                       l1051 0376                         l1125 04D0                         l1117 04A8  
                       l1045 0537                         l1037 04F4                         l1029 04E9  
                       l1061 044C                         l1053 0442                         l1141 05D0  
                       l1133 05A6                         l1127 04D9                         l1119 04AC  
                       l1039 0501                         l1047 035D                         l1063 0454  
                       l1055 0447                         l1151 067A                         l1143 05E1  
                       l1135 05B2                         l1129 04DF                         l1049 0367  
                       l1081 0480                         l1065 045D                         l1161 07CA  
                       l1145 05F5                         l1137 05B8                         l1153 0698  
                       l1091 048F                         l1067 0462                         l1075 0466  
                       l1163 07D2                         l1155 069E                         l1171 07DA  
                       l1147 0612                         l1139 05C2                         l1093 0492  
                       l1077 046F                         l1165 07D4                         l1157 0751  
                       l1149 0646                         l1079 047C                         l1087 0482  
                       l1167 07D6                         l1159 0757                         l1097 03BD  
                       l1089 048D                         l1169 07D8        ??_read_digital_keypad 0070  
                       l1099 03BF                         _RCEN 048B                         _RSEN 0489  
                       _R_nW 04A2                  display@data 0078                  display@wait 0074  
                       _main 05A6                         btemp 007E                         start 0000  
              _i2c_rep_start 02E5                        ?_main 0070                        _ACKEN 048C  
                      _ACKDT 048D              __end_of___lldiv 05A6                  i2c_read@ack 0070  
            __end_of___llmod 04E8                 ?_init_config 0070                        _PORTA 0005  
                      _PORTB 0006                        _PORTD 0008                        _SSPM3 00A3  
                      _TRISA 0085                        _TRISB 0086                        _TRISD 0088  
                      _SSPEN 00A5                 display@digit 0079              __end_of_display 053E  
              ?_init_AT24C04 0070                        _count 005A                        pclath 000A  
                      status 0003                ?_read_AT24C04 0070                        wtemp0 007E  
            __initialization 07E4               ?_i2c_rep_start 0070                 __end_of_main 07E4  
           __end_of_i2c_read 03BD             __end_of_i2c_stop 0300                       ??_main 0035  
             ??_init_AT24C04 007C             ___llmod@dividend 0074                 i2c_read@data 0071  
             ??_read_AT24C04 0072                       _SSPADD 0093                       _SSPBUF 0013  
__end_of_init_digital_keypad 02E5                       ___wmul 03BD                    ??___lldiv 007A  
                  ??___llmod 0078             __end_of_init_i2c 0441             __end_of_init_ssd 0317  
                  ??_display 0070      __end_of__initialization 07FC              ??_i2c_rep_start 0070  
             __pcstackCOMMON 0070                 __pidataBANK0 0324            write_AT24C04@addr 007B  
          write_AT24C04@data 002D            __end_of_i2c_start 02F7            __end_of_i2c_write 030B  
          _i2c_wait_for_idle 0317                _write_AT24C04 037C           ?_i2c_wait_for_idle 0070  
                 __pbssBANK0 0052                    ?_i2c_read 0070                    ?_i2c_stop 0070  
        ??_i2c_wait_for_idle 0070                   __pmaintext 05A6         __end_of_init_AT24C04 035D  
                    ?___wmul 0074                      _ACKSTAT 048E         __end_of_read_AT24C04 040D  
__end_of_read_digital_keypad 0494    __end_of_i2c_wait_for_idle 0324                 init_i2c@baud 002D  
                    _SSPCON2 0091               ?_write_AT24C04 002D                   ??_i2c_read 0070  
                 ??_i2c_stop 0070                    ?_init_i2c 002D                    ?_init_ssd 0070  
                    ___lldiv 053E                      ___llmod 0494                      __ptext1 0441  
                    __ptext2 035D                      __ptext3 030B                      __ptext4 040D  
                    __ptext5 053E                      __ptext6 02DF                      __ptext7 0348  
                    __ptext8 037C                      __ptext9 03E2                      _display 04E8  
                    main@key 007D                      main@ssd 004E         end_of_initialization 07FC  
                 ??_init_i2c 0031                   ??_init_ssd 0070              ___lldiv@divisor 0020  
            ___lldiv@counter 002C                i2c_write@data 0070              ??_write_AT24C04 007B  
             __end_of___wmul 03E2          start_initialization 07E4                    _i2c_start 02EE  
                  _i2c_write 0300                 _init_AT24C04 0348              ___llmod@divisor 0070  
               _read_AT24C04 03E2              ___llmod@counter 0079        __end_of_i2c_rep_start 02EE  
                   ??___wmul 0078                   init_fetch0 0335                  __pdataBANK0 0041  
              ??_init_config 007D                    ___latbits 0002                __pcstackBANK0 0020  
                 ?_i2c_start 0070                   ?_i2c_write 0070                     ?___lldiv 0020  
                   ?___llmod 0070                     ?_display 0070          __end_of_init_config 037C  
             ___wmul@product 0078            ___wmul@multiplier 0074                    main@digit 0041  
                  main@count 0056                  ??_i2c_start 0070                  ??_i2c_write 0070  
        _init_digital_keypad 02DF                     _i2c_read 039C                     _i2c_stop 02F7  
       ?_init_digital_keypad 0070                  _init_config 035D                     __ptext10 0300  
                   __ptext11 02F7                     __ptext12 02EE                     __ptext13 02E5  
                   __ptext14 039C                     __ptext15 0317                     __ptext16 04E8  
                   __ptext17 03BD                     __ptext18 0494        __end_of_write_AT24C04 039C  
                   _init_i2c 040D                     _init_ssd 030B      read_digital_keypad@mode 0071  
    read_digital_keypad@once 004D        ??_init_digital_keypad 0070                     main@flag 0052  
          init_AT24C04@dummy 007C                     init_ram0 0339             ___lldiv@dividend 0024  
        _read_digital_keypad 0441             ___lldiv@quotient 0028         ?_read_digital_keypad 0070  
           read_AT24C04@addr 0072             read_AT24C04@data 0073  
